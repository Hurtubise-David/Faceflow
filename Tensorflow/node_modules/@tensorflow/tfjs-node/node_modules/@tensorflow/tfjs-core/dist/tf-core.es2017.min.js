/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).tf=e.tf||{})}(this,(function(e){"use strict";class t{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}get(e){return e in this.flags||(this.flags[e]=this.evaluateFlag(e)),this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}}function n(){return e.ENV}let r;function s(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function a(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}e.ENV=null;const o=a("kernelRegistry",()=>new Map),i=a("gradRegistry",()=>new Map);function u(e,t){const n=d(e,t);return o.get(n)}function l(e){return i.get(e)}function c(e){const t=o.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,o]=s,[i]=a.split("_");i===e&&n.push(o)}return n}function h(e){const{kernelName:t}=e;i.has(t)&&console.warn(`Overriding the gradient for '${t}'`),i.set(t,e)}function d(e,t){return`${t}_${e}`}function p(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function f(e,t,n){return Math.max(e,Math.min(t,n))}function m(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function g(e,t,n=""){m(k(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function b(e){m(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function w(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||M(e)&&!n)for(let r=0;r<e.length;++r)w(e[r],t,n);else t.push(e);return t}function y(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function k(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function v(e){return e%1==0}function x(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function E(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function S(e,t){const n=t.length;return m((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),m(e.every(e=>v(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function D(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:S(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[o]||a[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function I(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function N(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function F(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function A(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function M(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function _(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function T(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function B(e){return"string"==typeof e||e instanceof String}function C(e){return"boolean"==typeof e}function R(e){return"number"==typeof e}function q(e){return Array.isArray(e)?q(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":R(e)?"float32":B(e)?"string":C(e)?"bool":"float32"}function P(e){return!!(e&&e.constructor&&e.call&&e.apply)}function z(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function L(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function O(e,t,n){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=w(e)),n&&N(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function W(e,t){if(0===e.length)return t[0];const n=e.reduce((e,t)=>e*t);if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size.`);return function e(t,n,r){const s=new Array;if(1===n.length){const e=n[0];for(let n=0;n<e;n++)s[n]=r[t+n]}else{const a=n[0],o=n.slice(1),i=o.reduce((e,t)=>e*t);for(let n=0;n<a;n++)s[n]=e(t+n*i,o,r)}return s}(0,e,t)}function K(e,t){const n=G(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function H(){return n().platform.now()}function U(e){e.forEach(t=>{m(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function V(e,t="utf-8"){return t=t||"utf-8",n().platform.encode(e,t)}function j(e,t="utf-8"){return t=t||"utf-8",n().platform.decode(e,t)}var J=Object.freeze({__proto__:null,shuffle:p,clamp:f,nearestLargerEven:function(e){return e%2==0?e:e+1},sum:function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t},randUniform:function(e,t){const n=Math.random();return t*n+(1-n)*e},distSquared:function(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n},assert:m,assertShapesMatch:g,assertNonNull:b,flatten:w,sizeFromShape:y,isScalarShape:function(e){return 0===e.length},arraysEqual:k,isInt:v,tanh:function(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}},sizeToSquarishShape:function(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]},createShuffledIndices:function(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return p(t),t},rightPad:x,repeatedTry:function(e,t=(e=>0),n){return new Promise((r,s)=>{let a=0;const o=()=>{if(e())return void r();a++;const i=t(a);null!=n&&a>=n?s():setTimeout(o,i)};o()})},inferFromImplicitShape:E,parseAxisParam:S,squeezeShape:D,getTypedArrayFromDType:I,getArrayFromDType:$,checkConversionForErrors:N,isValidDtype:F,hasEncodingLoss:A,isTypedArray:M,bytesPerElement:_,bytesFromStringArray:T,isString:B,isBoolean:C,isNumber:R,inferDtype:q,isFunction:P,nearestDivisor:z,computeStrides:L,toTypedArray:O,toNestedArray:W,makeOnesTypedArray:K,makeZerosTypedArray:G,now:H,assertNonNegativeIntegerDimensions:U,fetch:function(e,t){return n().platform.fetch(e,t)},encodeString:V,decodeString:j,locToIndex:function(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r},indexToLoc:function(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}});class Y{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new X)}profileKernel(e,t,n){let r;const s=this.backendTimer.time(()=>{r=n()});return r.forEach(n=>{n.data().then(r=>{!function(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}}(r,n.dtype,e),s.then(s=>{let a="";null!=s.getExtraProfileInfo&&(a=s.getExtraProfileInfo()),this.logger.logKernelProfile(e,n,r,s.kernelMs,t,a)})})}),r}}class X{logKernelProfile(e,t,n,r,s,a){const o="number"==typeof r?x(r+"ms",9):r.error,i=x(e,25),u=t.rank,l=t.size,c=x(t.shape.toString(),14);let h="";for(const e in s){const n=s[e].shape||t.shape,r=n.length;h+=`${e}: ${r}D ${r>0?n:""} `}console.log(`%c${i}\t%c${o}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Z(e,t,n,r){const s=L(t),a=function(e,t,n,r){const s=y(t),a=r[r.length-1],o=new Array(a).fill(0),i=t.length,u="complex64"===n?te(e):e;if(i>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)o[e]=Math.max(o[e],Q(u[t+e],0,n).length)}return o}(e,t,n,s),o=t.length,i=function e(t,n,r,s,a,o=!0){const i="complex64"===r?2:1,u=n[0],l=n.length;if(0===l){if("complex64"===r){return[Q(te(t)[0],0,r)]}return"bool"===r?[ee(t[0])]:[t[0].toString()]}if(1===l){if(u>20){const e=3*i;let n=Array.from(t.slice(0,e)),s=Array.from(t.slice((u-3)*i,u*i));return"complex64"===r&&(n=te(n),s=te(s)),["["+n.map((e,t)=>Q(e,a[t],r)).join(", ")+", ..., "+s.map((e,t)=>Q(e,a[u-3+t],r)).join(", ")+"]"]}return["["+("complex64"===r?te(t):Array.from(t)).map((e,t)=>Q(e,a[t],r)).join(", ")+"]"]}const c=n.slice(1),h=s.slice(1),d=s[0]*i,p=[];if(u>20){for(let n=0;n<3;n++){const s=n*d,o=s+d;p.push(...e(t.slice(s,o),c,r,h,a,!1))}p.push("...");for(let n=u-3;n<u;n++){const s=n*d,o=s+d;p.push(...e(t.slice(s,o),c,r,h,a,n===u-1))}}else for(let n=0;n<u;n++){const s=n*d,o=s+d;p.push(...e(t.slice(s,o),c,r,h,a,n===u-1))}const f=2===l?",":"";p[0]="["+p[0]+f;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+f;let m=",\n";for(let e=2;e<l;e++)m+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(o?"":m),p}(e,t,n,s,a),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+o),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map(e=>"    "+e).join("\n")),u.join("\n")}function Q(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":B(e)?`'${e}'`:"bool"===n?ee(e):parseFloat(e.toFixed(7)).toString(),x(r,t)}function ee(e){return 0===e?"false":"true"}function te(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ne{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=y(e),null!=n){const e=n.length;m(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||$(t,this.size),this.strides=L(e)}set(e,...t){0===t.length&&(t=[0]),m(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return re().makeTensor(this.values,this.shape,this.dtype)}}let re=null,se=null;class ae{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=y(e),this.strides=L(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}flatten(){return this.throwIfDisposed(),this.as1D()}asScalar(){return this.throwIfDisposed(),m(1===this.size,()=>"The array must have only 1 element."),this.reshape([])}as1D(){return this.throwIfDisposed(),this.reshape([this.size])}as2D(e,t){return this.throwIfDisposed(),this.reshape([e,t])}as3D(e,t,n){return this.throwIfDisposed(),this.reshape([e,t,n])}as4D(e,t,n,r){return this.throwIfDisposed(),this.reshape([e,t,n,r])}as5D(e,t,n,r,s){return this.throwIfDisposed(),this.reshape([e,t,n,r,s])}asType(e){return this.throwIfDisposed(),se.cast(this,e)}get rank(){return this.shape.length}async buffer(){const e=await this.data();return se.buffer(this.shape,this.dtype,e)}bufferSync(){return se.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return W(this.shape,e)}arraySync(){return W(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=re().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>j(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=re().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>j(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await re().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(re().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}toFloat(){return this.asType("float32")}toInt(){return this.asType("int32")}toBool(){return this.asType("bool")}print(e=!1){return se.print(this,e)}reshape(e){return this.throwIfDisposed(),se.reshape(this,e)}reshapeAs(e){return this.throwIfDisposed(),this.reshape(e.shape)}expandDims(e=0){return se.expandDims(this,e)}cumsum(e=0,t=!1,n=!1){return se.cumsum(this,e,t,n)}squeeze(e){return this.throwIfDisposed(),se.squeeze(this,e)}clone(){return this.throwIfDisposed(),se.clone(this)}toString(e=!1){return Z(this.dataSync(),this.shape,this.dtype,e)}gather(e,t=0){return this.throwIfDisposed(),se.gather(this,e,t)}norm(e="euclidean",t=null,n=!1){return this.throwIfDisposed(),se.norm(this,e,t,n)}slice(e,t){return this.throwIfDisposed(),se.slice(this,e,t)}reverse(e){return this.throwIfDisposed(),se.reverse(this,e)}stack(e,t=0){return se.stack([this,e],t)}unstack(e=0){return se.unstack(this,e)}all(e=null,t=!1){return this.throwIfDisposed(),se.all(this,e,t)}any(e=null,t=!1){return this.throwIfDisposed(),se.any(this,e,t)}logSumExp(e=null,t=!1){return this.throwIfDisposed(),se.logSumExp(this,e,t)}sum(e=null,t=!1){return this.throwIfDisposed(),se.sum(this,e,t)}prod(e=null,t=!1){return this.throwIfDisposed(),se.prod(this,e,t)}mean(e=null,t=!1){return this.throwIfDisposed(),se.mean(this,e,t)}min(e=null,t=!1){return this.throwIfDisposed(),se.min(this,e,t)}argMin(e=null){return this.throwIfDisposed(),se.argMin(this,e)}argMax(e=null){return this.throwIfDisposed(),se.argMax(this,e)}cast(e){return this.throwIfDisposed(),se.cast(this,e)}addStrict(e){return this.throwIfDisposed(),se.addStrict(this,e)}atan2(e){return this.throwIfDisposed(),se.atan2(this,e)}subStrict(e){return this.throwIfDisposed(),se.subStrict(this,e)}pow(e){return this.throwIfDisposed(),se.pow(this,e)}powStrict(e){return this.throwIfDisposed(),se.powStrict(this,e)}mul(e){return this.throwIfDisposed(),se.mul(this,e)}mulStrict(e){return this.throwIfDisposed(),se.mulStrict(this,e)}floorDiv(e){return this.throwIfDisposed(),se.floorDiv(this,e)}divStrict(e){return this.throwIfDisposed(),se.divStrict(this,e)}minimum(e){return this.throwIfDisposed(),se.minimum(this,e)}minimumStrict(e){return this.throwIfDisposed(),se.minimumStrict(this,e)}maximum(e){return this.throwIfDisposed(),se.maximum(this,e)}maximumStrict(e){return this.throwIfDisposed(),se.maximumStrict(this,e)}mod(e){return this.throwIfDisposed(),se.mod(this,e)}modStrict(e){return this.throwIfDisposed(),se.modStrict(this,e)}squaredDifferenceStrict(e){return this.throwIfDisposed(),se.squaredDifferenceStrict(this,e)}notEqualStrict(e){return this.throwIfDisposed(),se.notEqualStrict(this,e)}lessStrict(e){return this.throwIfDisposed(),se.lessStrict(this,e)}equalStrict(e){return this.throwIfDisposed(),se.equalStrict(this,e)}lessEqualStrict(e){return this.throwIfDisposed(),se.lessEqualStrict(this,e)}greaterStrict(e){return this.throwIfDisposed(),se.greaterStrict(this,e)}greaterEqualStrict(e){return this.throwIfDisposed(),se.greaterEqualStrict(this,e)}logicalAnd(e){return this.throwIfDisposed(),se.logicalAnd(this,e)}logicalOr(e){return this.throwIfDisposed(),se.logicalOr(this,e)}logicalNot(){return this.throwIfDisposed(),se.logicalNot(this)}logicalXor(e){return this.throwIfDisposed(),se.logicalXor(this,e)}where(e,t){return this.throwIfDisposed(),se.where(e,this,t)}neg(){return this.throwIfDisposed(),se.neg(this)}ceil(){return this.throwIfDisposed(),se.ceil(this)}floor(){return this.throwIfDisposed(),se.floor(this)}sign(){return this.throwIfDisposed(),se.sign(this)}isNaN(){return this.throwIfDisposed(),se.isNaN(this)}isInf(){return this.throwIfDisposed(),se.isInf(this)}isFinite(){return this.throwIfDisposed(),se.isFinite(this)}exp(){return this.throwIfDisposed(),se.exp(this)}expm1(){return this.throwIfDisposed(),se.expm1(this)}log(){return this.throwIfDisposed(),se.log(this)}log1p(){return this.throwIfDisposed(),se.log1p(this)}sqrt(){return this.throwIfDisposed(),se.sqrt(this)}rsqrt(){return this.throwIfDisposed(),se.rsqrt(this)}square(){return this.throwIfDisposed(),se.square(this)}reciprocal(){return this.throwIfDisposed(),se.reciprocal(this)}abs(){return this.throwIfDisposed(),se.abs(this)}clipByValue(e,t){return this.throwIfDisposed(),se.clipByValue(this,e,t)}relu(){return this.throwIfDisposed(),se.relu(this)}relu6(){return this.throwIfDisposed(),se.relu6(this)}elu(){return this.throwIfDisposed(),se.elu(this)}selu(){return this.throwIfDisposed(),se.selu(this)}leakyRelu(e=.2){return this.throwIfDisposed(),se.leakyRelu(this,e)}prelu(e){return this.throwIfDisposed(),se.prelu(this,e)}sigmoid(){return this.throwIfDisposed(),se.sigmoid(this)}logSigmoid(){return this.throwIfDisposed(),se.logSigmoid(this)}softplus(){return this.throwIfDisposed(),se.softplus(this)}zerosLike(){return this.throwIfDisposed(),se.zerosLike(this)}onesLike(){return this.throwIfDisposed(),se.onesLike(this)}sin(){return this.throwIfDisposed(),se.sin(this)}cos(){return this.throwIfDisposed(),se.cos(this)}tan(){return this.throwIfDisposed(),se.tan(this)}asin(){return this.throwIfDisposed(),se.asin(this)}acos(){return this.throwIfDisposed(),se.acos(this)}atan(){return this.throwIfDisposed(),se.atan(this)}sinh(){return this.throwIfDisposed(),se.sinh(this)}cosh(){return this.throwIfDisposed(),se.cosh(this)}tanh(){return this.throwIfDisposed(),se.tanh(this)}asinh(){return this.throwIfDisposed(),se.asinh(this)}acosh(){return this.throwIfDisposed(),se.acosh(this)}atanh(){return this.throwIfDisposed(),se.atanh(this)}erf(){return this.throwIfDisposed(),se.erf(this)}round(){return this.throwIfDisposed(),se.round(this)}step(e=0){return this.throwIfDisposed(),se.step(this,e)}softmax(e=-1){return this.throwIfDisposed(),se.softmax(this,e)}logSoftmax(e=-1){return this.throwIfDisposed(),se.logSoftmax(this,e)}resizeBilinear(e,t=!1){return this.throwIfDisposed(),se.image.resizeBilinear(this,e,t)}resizeNearestNeighbor(e,t=!1){return this.throwIfDisposed(),se.image.resizeNearestNeighbor(this,e,t)}avgPool(e,t,n,r){return this.throwIfDisposed(),se.avgPool(this,e,t,n,r)}maxPool(e,t,n,r){return this.throwIfDisposed(),se.maxPool(this,e,t,n,r)}pool(e,t,n,r,s){return this.throwIfDisposed(),se.pool(this,e,t,n,r,s)}variable(e=!0,t,n){return this.throwIfDisposed(),re().makeVariable(this,e,t,n)}unsortedSegmentSum(e,t){return this.throwIfDisposed(),se.unsortedSegmentSum(this,e,t)}topk(e=1,t=!0){return this.throwIfDisposed(),se.topk(this,e,t)}stridedSlice(e,t,n,r=0,s=0,a=0,o=0,i=0){return this.throwIfDisposed(),se.stridedSlice(this,e,t,n,r,s,a,o,i)}fft(){return this.throwIfDisposed(),se.spectral.fft(this)}ifft(){return this.throwIfDisposed(),se.spectral.ifft(this)}rfft(){return this.throwIfDisposed(),se.spectral.rfft(this)}irfft(){return this.throwIfDisposed(),se.spectral.irfft(this)}}Object.defineProperty(ae,Symbol.hasInstance,{value:e=>!!e&&null!=e.dataId&&null!=e.shape&&null!=e.dtype});class oe extends ae{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!k(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);re().disposeTensor(this),this.dataId=e.dataId,re().incRef(this,null)}dispose(){re().disposeVariable(this),this.isDisposedInternal=!0}}var ie,ue,le,ce,he;Object.defineProperty(oe,Symbol.hasInstance,{value:e=>e instanceof ae&&null!=e.assign&&e.assign instanceof Function}),(ie=e.Rank||(e.Rank={})).R0="R0",ie.R1="R1",ie.R2="R2",ie.R3="R3",ie.R4="R4",ie.R5="R5",ie.R6="R6",function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ue||(ue={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(le||(le={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ce||(ce={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(he||(he={}));const de={float32:ce,int32:ue,bool:le,complex64:he};function pe(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return de[e][t]}function fe(e,t){if(e.dtype===t.dtype)return[e,t];const n=pe(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function me(e,t){m(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function ge(e){const t=[];return function e(t,n,r){if(null==t)return;if(t instanceof ae)return void n.push(t);if(s=t,!Array.isArray(s)&&"object"!=typeof s)return;var s;const a=t;for(const t in a){const s=a[t];r.has(s)||(r.add(s),e(s,n,r))}}(e,t,new Set),t}var be=Object.freeze({__proto__:null,makeTypesMatch:fe,assertTypesMatch:me,isTensorInList:function(e,t){return t.some(t=>t.id===e.id)},getTensorsInContainer:ge});class we{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ye{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new we}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Y(this.backendInstance),!0}setupRegisteredKernels(){c(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){c(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(Promise.resolve(n)===n){const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return ye.nextTensorId++}nextVariableId(){return ye.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>e.toFloat()}),[],{}),t}runKernel(e,t,n,r,s){return this.runKernelFunc(null,t,null,e,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach(e=>{s+="complex64"===e.dtype?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-s-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,s,a,o){let i,l=[];const c=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const h=this.state.numBytes,d=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const f=u(r,this.backendName);let m;if(null!=f)p=()=>{const e=this.backend.numDataIds();m=f.kernelFunc({inputs:t,attrs:s,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const i=n.map(({dataId:e,shape:t,dtype:n})=>this.makeTensorFromDataId(e,t,n));if(c){let e=this.getTensorsForGradient(r,t,i);if(null==e){null==o&&(o=[]);const t=i.filter((e,t)=>o[t]);e=(a||[]).slice().concat(t)}l=this.saveTensorsForBackwardMode(e)}return i};else{const t=e=>{c&&(l=e.map(e=>this.keep(this.clone(e))))};p=()=>{const n=this.backend.numDataIds();m=this.tidy(()=>e(this.backend,t));const s=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{i=this.ENV.getBool("DEBUG")?this.profiler.profileKernel(r,t,()=>p()):p()}),c&&this.addTapeNode(r,t,i,n,l,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-h,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-d,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map(e=>t[e].shape),outputShapes:i.map(e=>e.shape)}),Array.isArray(m)?i:i[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=l(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(m(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(e=>t[e])):a=e.map(e=>t[e]);const o=n.filter((e,t)=>s[t]);return a.concat(o)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&B(e[0])&&(s=e.map(e=>V(e)));const a=r.write(s,t,n),o=new ae(t,n,a,this.nextTensorId());if(this.incRef(o,r),"string"===n){const e=this.state.tensorInfo.get(a),t=T(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const s=new ae(t,n=n||"float32",e,this.nextTensorId());return this.incRef(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.asType(r));const s=new oe(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*_(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof oe||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;return this.state.activeProfile.kernels=[],this.state.activeProfile.result=e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n,this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},i=l(e);null!=i&&(r=i.gradFunc),null!=r&&(o.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=G(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ge(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(m(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));m(s instanceof ae,()=>"The result y returned by f() must be a tensor.");const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],o=a.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach(e=>r[e.id]=!0),i=!0,s[a.id]=!0;break}if(i)break}}const a={};a[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[s.id]=null==n?function(e){const t=K(y(e),"float32");return ke.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n){for(let r=t.length-1;r>=0;r--){const s=t[r],a=[];if(s.outputs.forEach(t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(a);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n(()=>o[t]());if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const a=s.inputs[t];if(!k(r.shape,a.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=r;else{const t=e[a.id];e[a.id]=t.add(r),t.dispose()}}}}(e,a,e=>this.tidy(e));const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(e){return m(P(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;m(t.every(e=>e instanceof ae),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc((r,s)=>(n=e(...t,s),m(n.value instanceof ae,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),m(P(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];m(a.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),m(a.every(e=>e instanceof ae),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const o={};return a.forEach((e,t)=>{o[t]=()=>e}),o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=H(),n=await this.backend.time(e);return n.wallMs=H()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new we;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}ye.nextTensorId=0,ye.nextVariableId=0;const ke=function(){const n=s();if(null==n._tfengine){const e=new t(n);n._tfengine=new ye(e)}var r;return r=n._tfengine.ENV,e.ENV=r,re=()=>n._tfengine,n._tfengine}();function ve(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var xe=Object.freeze({__proto__:null,isMobile:function(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1},isBrowser:ve});const Ee=n();Ee.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Ee.registerFlag("IS_BROWSER",()=>ve()),Ee.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),Ee.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Ee.registerFlag("PROD",()=>!1),Ee.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ee.getBool("DEBUG")),Ee.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Ee.registerFlag("IS_TEST",()=>!1);function Se(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,o=t[a];(null==s||1===s&&o>1)&&n.unshift(a)}return n}function De(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}const Ie={kernelName:"Add",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=De(n.shape,r.shape);return{a:()=>{let t=e;const r=Se(n.shape,s);return r.length>0&&(t=t.sum(r)),t.reshape(n.shape)},b:()=>{let t=e;const n=Se(r.shape,s);return n.length>0&&(t=t.sum(n)),t.reshape(r.shape)}}}},$e={kernelName:"AddN",saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}};function Ne(e,t){let r=e;if(M(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(r)||M(r)&&"string"!==t;)s.push(r.length),r=r[0];return Array.isArray(e)&&n().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],!Array.isArray(t)&&!M(t))return void m(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);m(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${t.length} elements`),m(t.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${t.length} elements`);const s=n.slice(1);for(let n=0;n<t.length;++n)e(t[n],s,r.concat(n))}(e,s,[]),s}function Fe(e,t,n,r){if(null!=e&&("numeric"!==e&&e!==t||"numeric"===e&&"string"===t))throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}function Ae(e,t,r,s="numeric"){if(e instanceof ae)return Fe(s,e.dtype,t,r),e;let a=q(e);if("string"!==a&&["bool","int32","float32"].indexOf(s)>=0&&(a=s),Fe(s,a,t,r),null==e||!M(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const n=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${r}' must be a Tensor or TensorLike, but got '${n}'`)}const o=Ne(e,a);M(e)||Array.isArray(e)||(e=[e]);const i="string"!==a?O(e,a,n().getBool("DEBUG")):w(e,[],!0);return ke.makeTensor(i,o,a)}function Me(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,r)=>Ae(e,`${t}[${r}]`,n),r)}function _e(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Te(e,t,n){const r=e.length+t.length,s=[];let a=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(e[a++]):s.push(t[o++]);return s}function Be(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map(t=>e[t])]}function Ce(e,t){return Te(e,t.map(e=>1),t)}function Re(e,t){if(_e(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function qe(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Pe(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}function ze(e,t){const n=e[0].length;e.forEach((e,t)=>{m(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),m(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,s)=>{for(let a=0;a<n;a++)m(a===t||e[a]===r[a],()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function Le(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function Oe(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));const s=(...e)=>{ke.startScope(n);try{const t=r(...e);return t instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),ke.endScope(t),t}catch(e){throw ke.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const We=Oe({complex_:function(e,t){const n=Ae(e,"real","complex"),r=Ae(t,"imag","complex");return g(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`),ke.runKernelFunc(e=>e.complex(n,r),{$real:n,$imag:r})}}),Ke=Oe({real_:function(e){const t=Ae(e,"input","real");return ke.runKernelFunc(e=>e.real(t),{$input:t})}}),Ge=Oe({imag_:function(e){const t=Ae(e,"input","imag");return ke.runKernelFunc(e=>e.imag(t),{$input:t})}});function He(e,t,n){return Ue(e,t,Ne(e,n),n)}function Ue(e,t,r,s){if(null==s&&(s=q(e)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!M(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){U(t);const e=y(t),n=y(r);m(e===n,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${n}`);for(let e=0;e<r.length;++e){const n=r[e],s=e!==r.length-1||n!==y(t.slice(e));m(r[e]===t[e]||!s,()=>`Error creating a new Tensor. Inferred shape (${r}) does not match the provided shape (${t}). `)}}return M(e)||Array.isArray(e)||(e=[e]),t=t||r,e="string"!==s?O(e,s,n().getBool("DEBUG")):w(e,[],!0),ke.makeTensor(e,t,s)}function Ve(e,t){if((M(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&M(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ue(e,[],[],t)}function je(e,t){b(e);const n=Ne(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ue(e,null,n,t)}function Je(e,t,n){if(b(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ne(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ue(e,t,r,n)}function Ye(e,t,n){if(b(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Ne(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ue(e,t,r,n)}function Xe(e,t,n){if(b(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Ne(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ue(e,t,r,n)}function Ze(e,t,n){if(b(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Ne(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ue(e,t,r,n)}function Qe(e,t,n){if(b(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Ne(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ue(e,t=t||r,r,n)}function et(e,t=!0,n,r){return ke.makeVariable(e,t,n,r)}function tt(e,t="float32"){if("complex64"===t){const t=tt(e,"float32"),n=nt(e,"float32");return We(t,n)}const n=K(y(e),t);return ke.makeTensor(n,e,t)}function nt(e,t="float32"){if("complex64"===t){const t=nt(e,"float32"),n=nt(e,"float32");return We(t,n)}const n=G(y(e),t);return ke.makeTensor(n,e,t)}function rt(e,t,n){return ke.runKernelFunc(r=>r.fill(e,t,n),{})}function st(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");return ke.runKernelFunc(r=>r.linspace(e,t,n),{})}function at(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");if(e===t||e<t&&n<0||t<e&&n>1)return nt([0],r);const s=G(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return je(s,r)}const ot=Oe({onesLike_:function(e){const t=Ae(e,"x","onesLike");if("complex64"===t.dtype){const e=ot(Ke(t)),n=it(Ge(t));return We(e,n)}return ke.runKernelFunc(e=>e.onesLike(t),{x:t},(e,t)=>({x:()=>it(e)}),"OnesLike")}}),it=Oe({zerosLike_:function(e){const t=Ae(e,"x","zerosLike");return ke.runKernelFunc(e=>e.zerosLike(t),{x:t},(e,t)=>({x:()=>it(e)}),"ZerosLike")}});const ut=Oe({concat_:function(e,t=0){m(e.length>=1,()=>"Pass at least one tensor to concat");let n=Me(e,"tensors","concat");"complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)});const r=S(t,n[0].shape)[0],s=Le(n.map(e=>e.shape),r);if(0===y(s))return He([],s);if(n=n.filter(e=>e.size>0),1===n.length)return n[0];ze(n.map(e=>e.shape),r);const a=n,o={axis:t};return ke.runKernelFunc((e,r)=>{const s=S(t,n[0].shape)[0],a=e.concat(n,s);return r(n),a},a,null,"Concat",o)}});function lt(e,t="float32",n){return t=t||"float32",U(e),new ne(e,t,n)}function ct(e,t=!1){console.log(e.toString(t))}const ht=Oe({cast_:function(e,t){const n=Ae(e,"x","cast");if(!F(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={dtype:t};return ke.runKernelFunc(e=>e.cast(n,t),{x:n},e=>({x:()=>e.clone()}),"Cast",r)}}),dt=Oe({cumsum_:function(e,t=0,n=!1,r=!1){const s=Ae(e,"x","cumsum"),a=Re([t|=0],s.rank);let o=s;null!=a&&(o=s.transpose(a));const i=Pe(1,s.rank)[0];let u=ke.runKernelFunc(e=>e.cumsum(o,i,n,r),{permutedX:o},e=>({permutedX:()=>e.cumsum(t,n,!r)}));return null!=a&&(u=u.transpose(a)),u}}),pt=Oe({expandDims_:function(e,t=0){const n=Ae(e,"x","expandDims",null);m(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r=n.shape.slice();return t<0&&(m(-(n.rank+1)<=t,()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`),t=n.rank+t+1),r.splice(t,0,1),ft(n,r)}}),ft=Oe({reshape_:function(e,t){const n=Ae(e,"x","reshape",null);t=E(t,n.size),m(n.size===y(t),()=>"new shape and old shape must have the same number of elements.");const r={shape:t};return ke.runKernelFunc(e=>e.reshape(n,t),{x:n},e=>({x:()=>e.reshape(n.shape)}),"Reshape",r)}}),mt=Oe({squeeze_:function(e,t){const n=Ae(e,"x","squeeze");return ft(n,D(n.shape,t).newShape)}}),gt=Oe({stack_:function(e,t=0){const n=Me(e,"tensors","stack");if(m(n.length>=1,()=>"Pass at least one tensor to tf.stack"),1===n.length)return n[0].expandDims(t);const r=n[0].rank,s=n[0].shape,a=n[0].dtype;m(t<=r,()=>"Axis must be <= rank of the tensor"),n.forEach(e=>{g(s,e.shape,"All tensors passed to stack must have matching shapes")}),n.forEach(e=>{m(a===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=n.map(e=>e.expandDims(t));return ut(o,t)}}),bt=Oe({unstack_:function(e,t=0){t=t||0;const n=Ae(e,"x","unstack");m(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),t<0&&(t+=n.shape.length);const r={axis:t};return ke.runKernelFunc(e=>e.unstack(n,t),{x:n},e=>({x:()=>gt(e,t)}),"Unpack",r)}}),wt=async function(e,t){const n=Ae(e,"x","setdiff1d"),r=Ae(t,"y","setdiff1d");m(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),m(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),m(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await n.data(),a=await r.data(),o=new Set(a);let i=0;for(let e=0;e<s.length;e++)o.has(s[e])||i++;const u=new ne([i],n.dtype),l=new ne([i],"int32");for(let e=0,t=0;e<s.length;e++)o.has(s[e])||(u.values[t]=s[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]};const yt=Oe({matMul_:function(e,t,n=!1,r=!1){let s=Ae(e,"a","matMul"),a=Ae(t,"b","matMul");[s,a]=fe(s,a),m(s.rank>=2&&a.rank>=2&&s.rank===a.rank,()=>`Error in matMul: inputs must have the same rank of at least 2, got ranks ${s.rank} and ${a.rank}.`);const o=n?s.shape[s.rank-2]:s.shape[s.rank-1],i=r?a.shape[a.rank-1]:a.shape[a.rank-2],u=n?s.shape[s.rank-1]:s.shape[s.rank-2],l=r?a.shape[a.rank-2]:a.shape[a.rank-1],c=s.shape.slice(0,-2),h=a.shape.slice(0,-2),d=y(c),p=y(h);m(k(c,h),()=>`Error in matMul: outer dimensions (${c}) and (${h}) of Tensors with shapes ${s.shape} and `+a.shape+" must match."),m(o===i,()=>`Error in matMul: inner shapes (${o}) and (${i}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${n} and transposeB=${r} must match.`);const f=s.shape.slice(0,-2).concat([u,l]),g=ft(s,n?[d,o,u]:[d,u,o]),b=ft(a,r?[p,l,i]:[p,i,l]),w={a:g,b:b},v={transposeA:n,transposeB:r},x=ke.runKernelFunc((e,t)=>(t([g,b]),e.batchMatMul(g,b,n,r)),w,null,"BatchMatMul",v);return ft(x,f)}}),kt={kernelName:"BatchMatMul",inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:o}=n;return a||o?!a&&o?{a:()=>yt(e,s,!1,!1),b:()=>yt(e,r,!0,!1)}:a&&!o?{a:()=>yt(s,e,!1,!0),b:()=>yt(r,e,!1,!1)}:{a:()=>yt(s,e,!0,!0),b:()=>yt(e,r,!0,!0)}:{a:()=>yt(e,s,!1,!0),b:()=>yt(r,e,!0,!1)}}};const vt=Oe({spaceToBatchND_:function(e,t,n){const r=Ae(e,"x","spaceToBatchND");m(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),m(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),m(r.shape.reduce((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const s={x:r},a={blockShape:t,paddings:n};return ke.runKernelFunc(e=>e.spaceToBatchND(r,t,n),s,null,"SpaceToBatchND",a)}}),xt={kernelName:"BatchToSpaceND",gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>vt(e,r,s)}}};function Et(e,t){m(P(e),()=>"The f passed in variableGrads(f) must be a function"),m(null==t||Array.isArray(t)&&t.every(e=>e instanceof oe),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in ke.registeredVariables)t.push(ke.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,s=t.length;m((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:a,grads:o}=ke.gradients(e,t,null,!0);m(o.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),m(0===a.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const i={};return t.forEach((e,t)=>{null!=o[t]&&(i[e.name]=o[t])}),null!=r&&r.forEach(e=>i[e.name]=null),{value:a,grads:i}}function St(e){return ke.customGrad(e)}function Dt(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function It(e,t,n,r,s){return t.rank<n.rank&&(t=t.reshape(Ce(t.shape,r))),e.rank<n.rank&&(e=e.reshape(Ce(e.shape,r))),{x:()=>{const r=e.mul(n.equal(t).cast(e.dtype));return null==s?r:r.transpose(s)}}}const $t=Oe({all_:function(e,t=null,n=!1){let r=Ae(e,"x","all","bool");const s=S(t,r.shape);let a=s;const o=Re(a,r.rank);null!=o&&(r=r.transpose(o),a=Pe(a.length,r.rank));const i=ke.runKernelFunc(e=>e.all(r,a),{$x:r});if(n){const e=Ce(i.shape,s);return i.reshape(e)}return i}}),Nt=Oe({any_:function(e,t=null,n=!1){let r=Ae(e,"x","any","bool");const s=S(t,r.shape);let a=s;const o=Re(a,r.rank);null!=o&&(r=r.transpose(o),a=Pe(a.length,r.rank));const i=ke.runKernelFunc(e=>e.any(r,a),{$x:r});if(n){const e=Ce(i.shape,s);return i.reshape(e)}return i}}),Ft=Oe({argMax_:function(e,t=0){let n=Ae(e,"x","argMax");null==t&&(t=0);let r=S(t,n.shape);const s=Re(r,n.rank);null!=s&&(n=n.transpose(s),r=Pe(r.length,n.rank));const a={axis:r[0]},o=[n];return ke.runKernelFunc((e,t)=>{const s=e.argMax(n,r[0]);return t([n]),s},{x:n},(e,t)=>{const[n]=t;return{x:()=>it(n)}},"ArgMax",a,o)}}),At=Oe({argMin_:function(e,t=0){let n=Ae(e,"x","argMin");null==t&&(t=0);let r=S(t,n.shape);const s=Re(r,n.rank);return null!=s&&(n=n.transpose(s),r=Pe(r.length,n.rank)),ke.runKernelFunc((e,t)=>{const s=e.argMin(n,r[0]);return t([n]),s},{$x:n},(e,t)=>{const[n]=t;return{$x:()=>it(n)}})}}),Mt=Oe({logSumExp_:function(e,t=null,n=!1){const r=Ae(e,"x","logSumExp"),s=S(t,r.shape),a=r.max(s,!0),o=r.sub(a).exp().sum(s).log(),i=a.reshape(o.shape).add(o);if(n){const e=Ce(i.shape,s);return i.reshape(e)}return i}}),_t=Oe({mean_:function(e,t=null,n=!1){const r=Ae(e,"x","mean"),s=S(t,r.shape),a=y(Be(r.shape,s)[1]);return St(e=>{const r=Ve(a);return{value:(r.dtype===e.dtype?e:e.cast(r.dtype)).div(r).sum(t,n),gradFunc:t=>{const n=e.shape.slice();return s.forEach(e=>{n[e]=1}),t.reshape(n).mul(tt(e.shape,"float32")).div(a)}}})(r)}}),Tt=Oe({min_:function(e,t=null,n=!1){let r=Ae(e,"x","min");const s=r,a=S(t,r.shape);let o=a;const i=Re(o,r.rank);null!=i&&(r=r.transpose(i),o=Pe(o.length,r.rank));const u=[r];let l=ke.runKernelFunc((e,t)=>{const n=e.min(r,o);return t([s,n]),n},{x:r},(e,t)=>It(e,t[1],t[0],a,i),"Min",{axes:o},u,[!0]);if(n){const e=Ce(l.shape,a);l=l.reshape(e)}return l}}),Bt=Oe({moments_:function(e,t=null,n=!1){const r=S(t,(e=Ae(e,"x","moments")).shape),s=e.mean(r,n);let a=s.shape;n||(a=Ce(s.shape,r));const o=e.toFloat().sub(s.reshape(a)).square();return{mean:s,variance:o.mean(r,n)}}}),Ct=Oe({sum_:function(e,t=null,n=!1){let r=Ae(e,"x","sum");"bool"===r.dtype&&(r=r.toInt());const s=S(t,r.shape);return St(e=>{const t=Re(s,e.rank);let r=s,a=e;null!=t&&(a=e.transpose(t),r=Pe(r.length,e.rank));const o=t=>{const n=e.shape.slice();return s.forEach(e=>{n[e]=1}),t.reshape(n).mul(tt(e.shape,"float32"))},i={axes:r};let u=ke.runKernelFunc(e=>e.sum(a,r),{x:a},e=>({x:()=>o(e)}),"Sum",i);if(n){const e=Ce(u.shape,s);u=u.reshape(e)}return{value:u,gradFunc:o}})(r)}}),Rt=Oe({prod_:function(e,t=null,n=!1){let r=Ae(e,"x","prod");"bool"===r.dtype&&(r=r.toInt());const s=S(t,r.shape),a=Re(s,r.rank);let o=s,i=r;null!=a&&(i=r.transpose(a),o=Pe(o.length,r.rank));let u=ke.runKernelFunc(e=>e.prod(i,o),{permutedX:i});if(n){const e=Ce(u.shape,s);u=u.reshape(e)}return u}}),qt={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,o=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])o[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const i=[];for(let e=0;e<o.length;e++)o[e]>1&&i.push(e);return{x:()=>Ct(e,i,!0)}}};const Pt=Oe({split_:function(e,t,n=0){const r=Ae(e,"x","split"),s=S(n,r.shape)[0];let a;"number"==typeof t?(m(r.shape[s]%t==0,()=>"Number of splits must evenly divide the axis."),a=new Array(t).fill(r.shape[s]/t)):(m(r.shape[s]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),a=t);const o={x:r},i={numOrSizeSplits:t,axis:n};return ke.runKernelFunc((e,t)=>e.split(r,a,s),o,null,"SplitV",i)}}),zt={kernelName:"Concat",saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:s}=n,a=S(s,t[0].shape)[0],o=r.map(e=>e[a]);return Pt(e,o,a).map(e=>()=>e)}};function Lt(e,t,n,r,s,a,o="channelsLast"){const[i,u]=Ht(t);let l;if("channelsLast"===o)l=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);l=[i,u,e[1],e[1]]}return Wt(e,l,n,r,s,a,!1,o)}function Ot(e,t,n,r,s,a,o="NDHWC"){const[i,u,l]=Ut(t);let c,h;if("NDHWC"===o)h="channelsLast",c=[i,u,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat "+o);h="channelsFirst",c=[i,u,l,e[1],e[1]]}return Kt(e,c,n,r,s,!1,h,a)}function Wt(e,t,n,r,s,a,o=!1,i="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,h,l,c]=e}const[d,p,,f]=t,[g,b]=Ht(n),[w,y]=Ht(r),k=Vt(d,w),x=Vt(p,y),{padInfo:E,outHeight:S,outWidth:D}=function(e,t,n,r,s,a,o,i){let u,l,c;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=Gt(e,t,n));const a=e[0],o=e[1],i=jt((a-t+2*r)/n+1,s);m(v(i),()=>`The output # of rows (${i}) must be an integer. Change the stride and/or zero pad parameters`);const u=jt((o-t+2*r)/n+1,s);return m(v(u),()=>`The output # of columns (${u}) must be an integer. Change the stride and/or zero pad parameters`),[i,u]}([t,n],a,r,e,i);l=s[0],c=s[1]}else if("same"===e){l=Math.ceil(t/r),c=Math.ceil(n/s);const e=Math.max(0,(l-1)*r+a-t),i=Math.max(0,(c-1)*s+o-n),h=Math.floor(e/2),d=e-h,p=Math.floor(i/2);u={top:h,bottom:d,left:p,right:i-p,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-a+1)/r),c=Math.ceil((n-o+1)/s)}return{padInfo:u,outHeight:l,outWidth:c}}(s,l,c,g,b,k,x,a),I=o?f*h:f;let $;return"channelsFirst"===i?$=[u,I,S,D]:"channelsLast"===i&&($=[u,S,D,I]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:c,inChannels:h,outHeight:S,outWidth:D,outChannels:I,padInfo:E,strideHeight:g,strideWidth:b,filterHeight:d,filterWidth:p,effectiveFilterHeight:k,effectiveFilterWidth:x,dilationHeight:w,dilationWidth:y,inShape:e,outShape:$,filterShape:t}}function Kt(e,t,n,r,s,a=!1,o="channelsLast",i){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h,d]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[u,d,l,c,h]=e}const[p,f,g,,b]=t,[w,y,k]=Ut(n),[x,E,S]=Ut(r),D=Vt(p,x),I=Vt(f,E),$=Vt(g,S),{padInfo:N,outDepth:F,outHeight:A,outWidth:M}=function(e,t,n,r,s,a,o,i,u,l,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=Gt(e,t,r));const o=e[0],i=e[1],u=e[2],l=jt((o-t+2*s)/r+1,a);m(v(l),()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`);const c=jt((i-t+2*s)/r+1,a);m(v(c),()=>`The output # of rows (${c}) must be an integer. Change the stride and/or zero pad parameters`);const h=jt((u-t+2*s)/r+1,a);return m(v(h),()=>`The output # of columns (${h}) must be an integer. Change the stride and/or zero pad parameters`),[l,c,h,n]}([t,n,r,1],i,1,s,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/o);const e=(d-1)*s+i-t,c=(p-1)*a+u-n,m=(f-1)*o+l-r,g=Math.floor(e/2),b=e-g,w=Math.floor(c/2),y=c-w,k=Math.floor(m/2);h={top:w,bottom:y,left:k,right:m-k,front:g,back:b,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-i+1)/s),p=Math.ceil((n-u+1)/a),f=Math.ceil((r-l+1)/o)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,l,c,h,w,y,k,D,I,$,i),_=a?b*d:b;let T;return"channelsFirst"===o?T=[u,_,F,A,M]:"channelsLast"===o&&(T=[u,F,A,M,_]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:F,outHeight:A,outWidth:M,outChannels:_,padInfo:N,strideDepth:w,strideHeight:y,strideWidth:k,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:D,effectiveFilterHeight:I,effectiveFilterWidth:$,dilationDepth:x,dilationHeight:E,dilationWidth:S,inShape:e,outShape:T,filterShape:t}}function Gt(e,t,n,r=1){const s=Vt(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Ht(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Ut(e){return"number"==typeof e?[e,e,e]:e}function Vt(e,t){return t<=1?e:e+(e-1)*(t-1)}function jt(e,t){if(!t)return e;switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function Jt(e){const[t,n,r]=Ht(e);return 1===t&&1===n&&1===r}function Yt(e,t){return Jt(e)||Jt(t)}function Xt(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}const Zt=Oe({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",o){let i=e;3===e.rank&&(i=ft(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=ft(t,[1,t.shape[0],t.shape[1],t.shape[2]])),m(4===i.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+i.shape+"."),m(4===u.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."),m(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const l="NHWC"===a?i.shape[3]:i.shape[1],c="NHWC"===a?u.shape[3]:u.shape[1];m(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),m(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),null!=o&&m(v(s),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);const h={x:i,dy:u},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:o};return ke.runKernelFunc(e=>{const t=Xt(a),l=Wt(i.shape,n,r,1,s,o,!1,t);return e.conv2dDerFilter(i,u,l)},h,null,"Conv2DBackpropFilter",d)}});const Qt=Oe({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",o){m(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,u=t,l=!1;3===t.rank&&(l=!0,u=ft(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),m(4===i.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+i.length+"."),m(4===u.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank),m(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const c="NHWC"===a?i[3]:i[1],h="NHWC"===a?u.shape[3]:u.shape[1];m(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),m(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),null!=o&&m(v(s),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);const d={dy:u,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:o},f=ke.runKernelFunc((e,t)=>{const l=Xt(a),c=Wt(i,n.shape,r,1,s,o,!1,l),h=e.conv2dDerInput(u,n,c);return t([u,n]),h},d,null,"Conv2DBackpropInput",p);return l?ft(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),en={kernelName:"Conv2D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:o,pad:i,dataFormat:u}=n;return m(Jt(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Qt(r.shape,e,s,o,i,u),filter:()=>Zt(r,e,s.shape,o,i,u)}}};const tn=Oe({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],o){const i=Ae(e,"x","conv2d"),u=Ae(t,"filter","conv2d");let l=i,c=!1;3===i.rank&&(c=!0,l=ft(i,[1,i.shape[0],i.shape[1],i.shape[2]])),m(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),m(4===u.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."),null!=o&&m(v(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const h="NHWC"===s?l.shape[3]:l.shape[1];m(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),m(Yt(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},f=ke.runKernelFunc((e,t)=>{const i=Xt(s),c=Wt(l.shape,u.shape,n,a,r,o,!1,i),h=e.conv2d(l,u,c);return t([l,u]),h},d,null,"Conv2D",p);return c?ft(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),nn={kernelName:"Conv2DBackpropInput",inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>tn(e,s,a,o,i,1,u),filter:()=>Zt(e,r,s.shape,a,o,i,u)}}};const rn=Oe({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=ft(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=ft(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),m(5===a.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+a.shape+"."),m(5===o.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+o.shape+"."),m(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),m(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),m(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);const i={x:a,y:o},u={strides:r,pad:s};return ke.runKernelFunc(e=>{const t=Kt(a.shape,n,r,1,s);return e.conv3dDerFilter(a,o,t)},i,null,"Conv3DBackpropFilterV2",u)}});const sn=Oe({conv3DBackpropInput_:function(e,t,n,r,s){m(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;4===t.rank&&(i=!0,o=ft(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const u=a[4],l=o.shape[4];m(5===a.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+a.length+"."),m(5===o.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+o.rank),m(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),m(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),m(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c={dy:o},h={pad:s},d=ke.runKernelFunc(e=>{const t=Kt(a,n.shape,r,1,s);return e.conv3dDerInput(o,n,t)},c,null,"Conv3DBackpropInputV2",h);return i?ft(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),an={kernelName:"Conv3D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;m(Jt(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[o,i]=t;return{x:()=>sn(o.shape,e,i,s,a),filter:()=>rn(o,e,i.shape,s,a)}}};const on=Oe({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r){let s=e;3===e.rank&&(s=ft(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let a=t;3===a.rank&&(a=ft(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const o={x:s,dy:a};return ke.runKernelFunc(e=>e.depthwiseConv2DDerFilter(s,a,r),o,null,"DepthwiseConv2dNativeBackpropFilter")}});const un=Oe({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r){let s=t,a=!1;3===t.rank&&(a=!0,s=ft(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const o={dy:s},i=ke.runKernelFunc(e=>e.depthwiseConv2DDerInput(s,n,r),o,null,"DepthwiseConv2dNativeBackpropInput");return a?ft(i,[i.shape[1],i.shape[2],i.shape[3]]):i}}),ln={kernelName:"DepthwiseConv2dNative",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:o}=n,i=null==r?[1,1]:r;m(Jt(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[u,l]=t;m(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),m(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),m(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),m(Yt(s,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${i}'.`),null!=o&&m(v(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);const c=Wt(u.shape,l.shape,s,i,a,o,!0);return{x:()=>un(u.shape,e,l,c),filter:()=>on(u,e,l.shape,c)}}};function cn(e){n().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function hn(e,t){return ke.tidy(e,t)}function dn(e){ge(e).forEach(e=>e.dispose())}function pn(e){return ke.keep(e)}const fn=Oe({add_:function(e,t){let n=Ae(e,"a","add"),r=Ae(t,"b","add");[n,r]=fe(n,r);const s={a:n,b:r};return ke.runKernelFunc((e,t)=>{const s=e.add(n,r);return t([n,r]),s},s,null,"Add")}});const mn=Oe({abs_:function(e){const t=Ae(e,"x","abs");return"complex64"===t.dtype?ke.runKernelFunc(e=>e.complexAbs(t),{$x:t}):ke.runKernelFunc((e,n)=>{const r=e.abs(t);return n([t]),r},{x:t},(e,t)=>{const[n]=t;return{x:()=>e.mul(n.toFloat().step(-1))}},"Abs")}}),gn=Oe({acos_:function(e){const t=Ae(e,"x","acos");return ke.runKernelFunc((e,n)=>{const r=e.acos(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>{const t=n.toFloat().square(),r=Ve(1).sub(t).sqrt();return e.div(r).neg()}}})}}),bn=Oe({acosh_:function(e){const t=Ae(e,"x","acosh");return ke.runKernelFunc((e,n)=>{const r=e.acosh(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>{const t=n.toFloat().square().sub(1).sqrt();return e.div(t)}}})}}),wn=Oe({asin_:function(e){const t=Ae(e,"x","asin");return ke.runKernelFunc((e,n)=>{const r=e.asin(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>e.div(Ve(1).sub(n.toFloat().square()).sqrt())}})}}),yn=Oe({asinh_:function(e){const t=Ae(e,"x","asinh");return ke.runKernelFunc((e,n)=>{const r=e.asinh(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>{const t=Ve(1).add(n.toFloat().square()).sqrt();return e.div(t)}}})}}),kn=Oe({atan_:function(e){const t=Ae(e,"x","atan");return ke.runKernelFunc((e,n)=>{const r=e.atan(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>e.div(n.toFloat().square().add(1))}})}}),vn=Oe({atanh_:function(e){const t=Ae(e,"x","atanh");return ke.runKernelFunc((e,n)=>{const r=e.atanh(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>e.div(Ve(1).sub(n.toFloat().square()))}})}}),xn=Oe({ceil_:function(e){const t=Ae(e,"x","ceil");return ke.runKernelFunc(e=>e.ceil(t),{$x:t},e=>({$x:()=>it(e)}))}}),En=Oe({clipByValue_:function(e,t,n){const r=Ae(e,"x","clipByValue");m(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const s=[r],a={min:t,max:n};return ke.runKernelFunc((e,s)=>{const a=e.clip(r,t,n);return s([r]),a},{x:r},(e,r)=>{const[s]=r;return{x:()=>e.where(s.greaterEqual(t).logicalAnd(s.lessEqual(n)),it(e))}},"ClipByValue",a,s)}}),Sn=Oe({cos_:function(e){const t=Ae(e,"x","cos"),n=[t];return ke.runKernelFunc((e,n)=>{const r=e.cos(t);return n([t]),r},{x:t},(e,t)=>{const[n]=t;return{x:()=>n.toFloat().sin().neg().mul(e)}},"Cos",{},n)}}),Dn=Oe({cosh_:function(e){const t=Ae(e,"x","cosh");return ke.runKernelFunc((e,n)=>{const r=e.cosh(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>n.toFloat().sinh().mul(e)}})}}),In=Oe({erf_:function(e){let t=Ae(e,"x","erf");return m("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=t.toFloat()),ke.runKernelFunc((e,n)=>{const r=e.erf(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>e.mul(n.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}})}}),$n=Oe({exp_:function(e){const t=Ae(e,"x","exp");return ke.runKernelFunc((e,n)=>{const r=e.exp(t);return n([r]),r},{x:t},(e,t)=>({x:()=>e.mul(t[0])}),"Exp",{},[],[!0])}}),Nn=Oe({expm1_:function(e){const t=Ae(e,"x","expm1");return ke.runKernelFunc((e,n)=>{const r=e.expm1(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>e.mul(n.exp())}})}}),Fn=Oe({floor_:function(e){const t=Ae(e,"x","floor");return ke.runKernelFunc(e=>e.floor(t),{$x:t},e=>({$x:()=>it(e)}))}}),An=Oe({log_:function(e){const t=Ae(e,"x","log"),n=[t];return ke.runKernelFunc((e,n)=>{const r=e.log(t);return n([t]),r},{x:t},(e,t)=>{const[n]=t;return{x:()=>e.div(n.toFloat())}},"Log",{},n)}}),Mn=Oe({log1p_:function(e){const t=Ae(e,"x","log1p");return ke.runKernelFunc((e,n)=>{const r=e.log1p(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>e.div(n.add(1))}})}}),_n=Oe({logSigmoid_:function(e){const t=Ae(e,"x","logSigmoid");return ke.runKernelFunc((e,n)=>{const r=e.softplus(t.neg()).neg();return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>e.mul(n.neg().sigmoid())}})}}),Tn=Oe({neg_:function(e){const t=Ae(e,"x","neg"),n=[t];return ke.runKernelFunc(e=>e.neg(t),{x:t},e=>({x:()=>e.neg()}),"Neg",{},n)}}),Bn=Oe({reciprocal_:function(e){const t=Ae(e,"x","reciprocal");return ke.runKernelFunc((e,n)=>{const r=e.reciprocal(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>e.div(n.square().neg())}})}}),Cn=Oe({round_:function(e){const t=Ae(e,"x","round");return ke.runKernelFunc(e=>e.round(t),{$x:t},e=>({$x:()=>it(e)}))}}),Rn=Oe({rsqrt_:function(e){const t=Ae(e,"x","rsqrt"),n=[t];return ke.runKernelFunc((e,n)=>{const r=e.rsqrt(t);return n([t]),r},{x:t},(e,t)=>{const[n]=t;return{x:()=>e.div(n.pow(1.5).mul(2)).neg()}},"Rsqrt",{},n)}}),qn=Oe({sigmoid_:function(e){const t=Ae(e,"x","sigmoid");return ke.runKernelFunc((e,n)=>{const r=e.sigmoid(t);return n([r]),r},{x:t},(e,t)=>{const[n]=t;return{x:()=>e.mul(n.mul(Ve(1).sub(n)))}},"Sigmoid")}}),Pn=Oe({sign_:function(e){const t=Ae(e,"x","sign");return ke.runKernelFunc(e=>e.sign(t),{$x:t},e=>({$x:()=>it(e)}))}}),zn=Oe({isNaN_:function(e){const t=Ae(e,"x","isNaN");return ke.runKernelFunc(e=>e.isNaN(t),{$x:t},e=>({$x:()=>it(e)}))}}),Ln=Oe({isInf_:function(e){const t=Ae(e,"x","isInf");return ke.runKernelFunc(e=>e.isInf(t),{$x:t},e=>({$x:()=>it(e)}))}}),On=Oe({isFinite_:function(e){const t=Ae(e,"x","isFinite");return ke.runKernelFunc(e=>e.isFinite(t),{$x:t},e=>({$x:()=>it(e)}))}}),Wn=Oe({sin_:function(e){const t=Ae(e,"x","sin"),n=[t];return ke.runKernelFunc((e,n)=>{const r=e.sin(t);return n([t]),r},{x:t},(e,t)=>{const[n]=t;return{x:()=>n.toFloat().cos().mul(e)}},"Sin",{},n)}}),Kn=Oe({sinh_:function(e){const t=Ae(e,"x","sinh");return ke.runKernelFunc((e,n)=>{const r=e.sinh(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>n.toFloat().cosh().mul(e)}})}}),Gn=Oe({softplus_:function(e){const t=Ae(e,"x","softplus");return ke.runKernelFunc((e,n)=>{const r=e.softplus(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>e.mul(n.sigmoid())}})}}),Hn=Oe({sqrt_:function(e){const t=Ae(e,"x","sqrt");return ke.runKernelFunc((e,n)=>{const r=e.sqrt(t);return n([t]),r},{x:t},(e,t)=>{const[n]=t;return{x:()=>e.div(n.toFloat().sqrt().mul(2))}},"Sqrt",{})}}),Un=Oe({step_:function(e,t=0){const n=Ae(e,"x","step");return ke.runKernelFunc(e=>e.step(n,t),{$x:n},e=>({$x:()=>it(e)}))}}),Vn=Oe({tan_:function(e){const t=Ae(e,"x","tan");return ke.runKernelFunc((e,n)=>{const r=e.tan(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>e.div(n.cos().square())}})}}),jn=Oe({tanh_:function(e){const t=Ae(e,"x","tanh");return ke.runKernelFunc((e,n)=>{const r=e.tanh(t);return n([r]),r},{x:t},(e,t)=>{const[n]=t;return{x:()=>Ve(1).sub(n.square()).mul(e)}},"Tanh",{},null,[!0])}});const Jn=Oe({addStrict_:function(e,t){cn("strict variants of ops have been deprecated and will be removed in future");const n=Ae(e,"a","addStrict"),r=Ae(t,"b","addStrict");return g(n.shape,r.shape,"Error in addStrict: "),n.add(r)}}),Yn=Oe({atan2_:function(e,t){let n=Ae(e,"a","atan2"),r=Ae(t,"b","atan2");[n,r]=fe(n,r);const s=De(n.shape,r.shape);return ke.runKernelFunc((e,t)=>{const s=e.atan2(n,r);return t([n,r]),s},{$a:n,$b:r},(e,t)=>{const[n,r]=t;return{$a:()=>{const t=fn(n.square(),r.square());let a=e.mul(r.div(t));const o=Se(n.shape,s);return o.length>0&&(a=a.sum(o)),a.reshape(n.shape)},$b:()=>{const t=fn(n.square(),r.square());let a=Tn(e.mul(n.div(t)));const o=Se(r.shape,s);return o.length>0&&(a=a.sum(o)),a.reshape(r.shape)}}})}}),Xn=Oe({divStrict_:function(e,t){cn("strict variants of ops have been deprecated and will be removed in future");const n=Ae(e,"a","div"),r=Ae(t,"b","div");return g(n.shape,r.shape,"Error in divideStrict: "),n.div(r)}}),Zn=Oe({floorDiv_:function(e,t){let n=Ae(e,"a","floorDiv"),r=Ae(t,"b","floorDiv");[n,r]=fe(n,r);const s=De(n.shape,r.shape);return ke.runKernelFunc((e,t)=>{const s=e.floorDiv(n,r);return t([n,r]),s},{a:n,b:r},(e,t)=>{const[n,r]=t;return{a:()=>{const t=e.div(r.toFloat()),a=Se(n.shape,s);return a.length>0?t.sum(a).reshape(n.shape):t},b:()=>{let t=e.mul(n.toFloat());const a=Se(r.shape,s);a.length>0&&(t=t.sum(a).reshape(r.shape));const o=r.square();return t.div(o.toFloat()).neg()}}},"FloorDiv")}}),Qn=Oe({maximum_:function(e,t){let n=Ae(e,"a","maximum"),r=Ae(t,"b","maximum");return[n,r]=fe(n,r),"bool"===n.dtype&&(n=n.toInt(),r=r.toInt()),De(n.shape,r.shape),ke.runKernelFunc((e,t)=>{const s=e.maximum(n,r);return t([n,r]),s},{a:n,b:r},(e,t)=>{const[n,r]=t;return{a:()=>e.mul(n.greaterEqual(r).toFloat()),b:()=>e.mul(n.less(r).toFloat())}},"Maximum")}}),er=Oe({maximumStrict_:function(e,t){cn("strict variants of ops have been deprecated and will be removed in future");const n=Ae(e,"a","maximumStrict"),r=Ae(t,"b","maximumStrict");return g(n.shape,r.shape,"Error in maximumStrict: "),n.maximum(r)}}),tr=Oe({minimum_:function(e,t){let n=Ae(e,"a","minimum"),r=Ae(t,"b","minimum");return[n,r]=fe(n,r),"bool"===n.dtype&&(n=n.toInt(),r=r.toInt()),De(n.shape,r.shape),ke.runKernelFunc((e,t)=>{const s=e.minimum(n,r);return t([n,r]),s},{a:n,b:r},(e,t)=>{const[n,r]=t;return{a:()=>e.mul(n.lessEqual(r).toFloat()),b:()=>e.mul(n.greater(r).toFloat())}},"Minimum")}}),nr=Oe({minimumStrict_:function(e,t){cn("strict variants of ops have been deprecated and will be removed in future");const n=Ae(e,"a","minimumStrict"),r=Ae(t,"b","minimumStrict");return g(n.shape,r.shape,"Error in minimumStrict: "),n.minimum(r)}}),rr=Oe({mod_:function(e,t){let n=Ae(e,"a","mod"),r=Ae(t,"b","mod");[n,r]=fe(n,r);const s=De(n.shape,r.shape);return ke.runKernelFunc((e,t)=>{const s=e.mod(n,r);return t([n,r]),s},{$a:n,$b:r},(e,t)=>{const[n,r]=t;return{$a:()=>{const t=Se(n.shape,s);return t.length>0?e.sum(t).reshape(n.shape):e},$b:()=>{const t=e.mul(n.div(r).floor().neg()),a=Se(r.shape,s);return a.length>0?t.sum(a).reshape(r.shape):t}}})}}),sr=Oe({modStrict_:function(e,t){cn("strict variants of ops have been deprecated and will be removed in future");const n=Ae(e,"a","modStrict"),r=Ae(t,"b","modStrict");return g(n.shape,r.shape,"Error in modStrict: "),n.mod(r)}}),ar=Oe({mul_:function(e,t){let n=Ae(e,"a","mul"),r=Ae(t,"b","mul");[n,r]=fe(n,r);const s=De(n.shape,r.shape);return ke.runKernelFunc((e,t)=>{const s=e.multiply(n,r);return t([n,r]),s},{a:n,b:r},(e,t)=>{const[n,r]=t;return{a:()=>{const t=e.mul(r.toFloat()),a=Se(n.shape,s);return a.length>0?t.sum(a).reshape(n.shape):t},b:()=>{const t=e.mul(n.toFloat()),a=Se(r.shape,s);return a.length>0?t.sum(a).reshape(r.shape):t}}},"Mul")}}),or=Oe({mulStrict_:function(e,t){cn("strict variants of ops have been deprecated and will be removed in future");const n=Ae(e,"a","mul"),r=Ae(t,"b","mul");return g(n.shape,r.shape,"Error in multiplyStrict: "),n.mul(r)}}),ir=Oe({pow_:function(e,t){let n=Ae(e,"base","pow"),r=Ae(t,"exp","pow");[n,r]=fe(n,r);const s=De(n.shape,r.shape),a=[n,r];return ke.runKernelFunc((e,t)=>{const s=e.pow(n,r);return t([n,r,s]),s},{a:n,b:r},(e,t)=>{const[n,r,a]=t;return{a:()=>{const t=r.toFloat();let a=e.mul(t.mul(n.pow(t.sub(Ve(1)))));const o=Se(n.shape,s);return o.length>0&&(a=a.sum(o)),a.reshape(n.shape)},b:()=>{const t=n.greater(0),o=n.log().where(t,it(n));let i=e.mul(a.mul(o));const u=Se(r.shape,s);return u.length>0&&(i=i.sum(u)),i.reshape(r.shape)}}},"Pow",{},a,[!0])}}),ur=Oe({powStrict_:function(e,t){return cn("strict variants of ops have been deprecated and will be removed in future"),g(e.shape,t.shape,"Error in powStrict: "),e.pow(t)}}),lr=Oe({squaredDifferenceStrict_:function(e,t){cn("strict variants of ops have been deprecated and will be removed in future");const n=Ae(e,"a","squaredDifferenceStrict"),r=Ae(t,"b","squaredDifferenceStrict");return g(n.shape,r.shape,"Error in squaredDifferenceStrict: "),n.squaredDifference(r)}}),cr=Oe({subStrict_:function(e,t){cn("strict variants of ops have been deprecated and will be removed in future");const n=Ae(e,"a","subStrict"),r=Ae(t,"b","subStrict");return g(n.shape,r.shape,"Error in subStrict: "),n.sub(r)}});const hr=Oe({div_:function(e,t){let n=Ae(e,"a","div"),r=Ae(t,"b","div");if([n,r]=fe(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Zn(n,r);const s={a:n,b:r};return ke.runKernelFunc((e,t)=>{const s=e.realDivide(n,r);return t([n,r]),s},s,null,"Div",{})}});const dr=Oe({square_:function(e){const t=Ae(e,"x","square"),n=[t];return ke.runKernelFunc((e,n)=>(n([t]),e.square(t)),{x:t},null,"Square",{},n,[])}}),pr={kernelName:"Div",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=De(n.shape,r.shape);return{a:()=>{const t=hr(e,r.toFloat()),a=Se(n.shape,s);return a.length>0?Ct(t,a).reshape(n.shape):t},b:()=>{let t=ar(e,n.toFloat());const a=Se(r.shape,s);a.length>0&&(t=ft(Ct(t,a),r.shape));const o=dr(r);return Tn(hr(t,o.toFloat()))}}}};const fr=Oe({sub_:function(e,t){let n=Ae(e,"a","sub"),r=Ae(t,"b","sub");[n,r]=fe(n,r);const s={a:n,b:r};return ke.runKernelFunc((e,t)=>{const s=e.subtract(n,r);return t([n,r]),s},s,null,"Sub")}});const mr=Oe({tile_:function(e,t){const n=Ae(e,"x","tile",null);m(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r=[n],s={x:n},a={reps:t};return ke.runKernelFunc((e,r)=>{const s=e.tile(n,t);return r([n]),s},s,null,"Tile",a,r)}}),gr={kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,o,i]=t,u=null==i?Ve(1):i,l=Se(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=fr(s,a),d=ar(e,u),p=Rn(fn(o,Ve(r))),f=ar(ar(ar(p,p),p),Ve(-.5));return{x:()=>1===a.rank?ft(ar(ar(e,mr(p.as4D(1,1,1,a.shape[0]),c)),u),s.shape):ft(ar(ar(e,p),u),s.shape),mean:()=>{let e=ar(ar(p,Ve(-1)),d);return 1===a.rank&&(e=Ct(e,l)),ft(e,a.shape)},variance:()=>{let e=ar(ar(f,h),d);return 1===a.rank&&(e=Ct(e,l)),ft(e,a.shape)},scale:()=>{const t=ar(h,p);let n=ar(e,t);return 1===a.rank&&(n=Ct(n,l)),ft(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=Ct(t,l)),ft(t,a.shape)}}}},br={kernelName:"GreaterEqual",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>it(n),b:()=>it(r)}}},wr={kernelName:"Identity",gradFunc:e=>({x:()=>e.toFloat()})};const yr=Oe({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,o=.5){const i={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:o};return ke.runKernelFunc(i=>i.LRNGrad(n,e,t,r,s,a,o),i,null,"LRNBackprop",u)}}),kr={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:o,alpha:i,beta:u}=n;return{x:()=>yr(r,s,e,a,o,i,u)}}};const vr=Oe({transpose_:function(e,t){const n=Ae(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),m(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{m(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1)return n.clone();const r={perm:t};return ke.runKernelFunc(e=>e.transpose(n,t),{x:n},null,"Transpose",r)}}),xr={kernelName:"Max",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,[a,o]=t,i=S(s,a.shape),u=Re(i,a.rank),l=It(e,o,a,i,u);return{x:()=>{let e=l.x();return null!=u&&(e=vr(e)),e}}}},Er={kernelName:"OneHot",inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>nt(n.shape,"float32")}}},Sr={kernelName:"PadV2",inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map(e=>e[0]);return{x:()=>e.slice(a,r.shape)}}};const Dr=Oe({batchToSpaceND_:function(e,t,n){const r=Ae(e,"x","batchToSpaceND"),s=t.reduce((e,t)=>e*t);m(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),m(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),m(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`);const a={x:r},o={blockShape:t,crops:n};return ke.runKernelFunc(e=>e.batchToSpaceND(r,t,n),a,null,"BatchToSpaceND",o)}}),Ir={kernelName:"SpaceToBatchND",gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Dr(e,r,s)}}},$r={kernelName:"SplitV",gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>ut(e,r)}}},Nr={kernelName:"Square",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ar(e,ar(n.toFloat(),2))}}},Fr={kernelName:"SquaredDifference",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ve(2);return{a:()=>ar(e,ar(s,fr(n,r))),b:()=>ar(e,ar(s,fr(r,n)))}}},Ar={kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=De(n.shape,r.shape);return{a:()=>{let t=e;const r=Se(n.shape,s);return r.length>0&&(t=Ct(t,r)),ft(t,n.shape)},b:()=>{let t=e;const n=Se(r.shape,s);return n.length>0&&(t=Ct(t,n)),ft(Tn(t),r.shape)}}}};const Mr=Oe({pad_:function(e,t,n=0){const r=Ae(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return ke.runKernelFunc((e,s)=>(s([r]),e.pad(r,t,n)),a,null,"PadV2",s)}});function _r(e,t,n){m(e.rank===t.length,()=>`Error in slice${e.rank}D: Length of begin ${t} must match the rank of the array (${e.rank}).`),m(e.rank===n.length,()=>`Error in slice${e.rank}D: Length of size ${n} must match the rank of the array (${e.rank}).`);for(let r=0;r<e.rank;++r)m(t[r]+n[r]<=e.shape[r],()=>`Error in slice${e.rank}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function Tr(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Br(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Cr(e,t,n,r,s){let a=t[s];const o=n[s]||1;(e&1<<s||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const i=r[s];return a<0&&(a+=i),a=f(0,a,i-1),a}function Rr(e,t,n,r,s){let a=t[s];const o=n[s]||1;(e&1<<s||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const i=r[s];return a<0&&(a+=i),a=o>0?f(0,a,i):f(-1,a,i-1),a}var qr=Object.freeze({__proto__:null,assertParamsValid:_r,maskToAxes:Tr,computeOutShape:Br,startForAxis:Cr,stopForAxis:Rr,isSliceContinous:function(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0},computeFlatOffset:function(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}});const Pr=Oe({slice_:function(e,t,n){const r=Ae(e,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");let s,a;s="number"==typeof t?[t,...new Array(r.rank-1).fill(0)]:t.length<r.rank?t.concat(new Array(r.rank-t.length).fill(0)):t.slice(),s.forEach(e=>{m(-1!==e,()=>"slice() does not support negative begin indexing.")}),a=null==n?new Array(r.rank).fill(-1):"number"==typeof n?[n,...new Array(r.rank-1).fill(-1)]:n.length<r.rank?n.concat(new Array(r.rank-n.length).fill(-1)):n,a=a.map((e,t)=>e>=0?e:(m(-1===e,()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${t}.`),r.shape[t]-s[t])),_r(r,s,a);const o=r.shape,i={begin:s,size:a};return ke.runKernelFunc(e=>e.slice(r,s,a),{x:r},e=>{const t=[];for(let n=0;n<e.rank;n++)t.push([s[n],o[n]-s[n]-a[n]]);return{x:()=>Mr(e,t)}},"Slice",i)}}),zr=Oe({slice1d_:function(e,t,n){const r=Ae(e,"x","slice1d");return m(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Pr(r,[t],[n])}}),Lr=Oe({slice2d_:function(e,t,n){const r=Ae(e,"x","slice2d");return m(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Pr(r,t,n)}}),Or=Oe({slice3d_:function(e,t,n){const r=Ae(e,"x","slice3d");return m(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Pr(r,t,n)}}),Wr=Oe({slice4d_:function(e,t,n){const r=Ae(e,"x","slice4d");return m(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Pr(r,t,n)}}),Kr=[Ie,$e,kt,xt,qt,zt,en,nn,an,ln,pr,gr,br,wr,kr,Er,Sr,$r,xr,Ir,Nr,Fr,{kernelName:"Tile",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=it(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=fn(t,Pr(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=fn(t,Pr(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)t=fn(t,Pr(e,[n*r.shape[0],a*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)for(let i=0;i<s[3];++i)t=fn(t,Pr(e,[n*r.shape[0],a*r.shape[1],o*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:"Transpose",gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=qe(s);return{x:()=>vr(e,a)}}},Ar];for(const e of Kr)h(e);class Gr{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}n().get("IS_BROWSER")&&n().setPlatform("browser",new Gr);const Hr=()=>require("node-fetch");let Ur;class Vr{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=n().global.fetch?n().global.fetch(e,t):(null==Ur&&(Ur=Hr()),Ur(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}n().get("IS_NODE")&&n().setPlatform("node",new Vr);const jr={float32:4,int32:4,uint16:2,uint8:1,bool:1};function Jr(e,t){const n={};let r=0;for(const s of t){const t=s.name,a=s.dtype,o=s.shape,i=y(o);let u;if("quantization"in s){const n=s.quantization;if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8' and 'uint16'.`);const o=jr[n.dtype],l=e.slice(r,r+i*o),c="uint8"===n.dtype?new Uint8Array(l):new Uint16Array(l);if("float32"===a){u=new Float32Array(c.length);for(let e=0;e<c.length;e++){const t=c[e];u[e]=t*n.scale+n.min}}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);u=new Int32Array(c.length);for(let e=0;e<c.length;e++){const t=c[e];u[e]=Math.round(t*n.scale+n.min)}}r+=i*o}else if("string"===a){const t=y(s.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(r,r+4))[0];r+=4;const n=new Uint8Array(e.slice(r,r+t));u.push(n),r+=t}}else{const n=jr[a],s=e.slice(r,r+i*n);if("float32"===a)u=new Float32Array(s);else if("int32"===a)u=new Int32Array(s);else{if("bool"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);u=new Uint8Array(s)}r+=i*n}n[t]=He(u,o,a)}return n}function Yr(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});const r=new Uint8Array(t);let s=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength}),r.buffer}const Xr="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Zr(e){return Xr?Buffer.byteLength(e):new Blob([e]).size}function Qr(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function es(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function ts(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Zr(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Zr(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class ns{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ns.instance&&(ns.instance=new ns),ns.instance}static registerSaveRouter(e){ns.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ns.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ns.getHandlers(e,"save")}static getLoadHandlers(e,t){return ns.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?ns.getInstance().loadRouters:ns.getInstance().saveRouters).forEach(t=>{const s=t(e,n);null!==s&&r.push(s)}),r}}class rs{constructor(){this.managers={}}static getInstance(){return null==rs.instance&&(rs.instance=new rs),rs.instance}static registerManager(e,t){m(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),m(e.length>0,()=>"scheme must not be an empty string.");const n=rs.getInstance();m(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function ss(e){if(-1===e.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+rs.getSchemes().join(","));return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function as(e,t,n=!1){m(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=ns.getLoadHandlers(e);m(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),m(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const s=r[0],a=ns.getSaveHandlers(t);m(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),m(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const o=a[0],i=ss(e).scheme,u=ss(e).path,l=i===ss(e).scheme,c=await s.load();n&&l&&await rs.getManager(i).removeModel(u);const h=await o.save(c);return n&&!l&&await rs.getManager(i).removeModel(u),h.modelArtifactsInfo}function os(){if(!n().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e=window||self,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function is(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class us{constructor(e){if(this.indexedDB=os(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>is(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=ts(t),a=s.transaction("model_info_store","readwrite");let o=a.objectStore("model_info_store");const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=s.transaction("models_store","readwrite");const i=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=a.objectStore("model_info_store");const t=o.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(i.error)),t.onerror=e=>(s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)})}}us.URL_SCHEME="indexeddb://";const ls=e=>{return n().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(us.URL_SCHEME)?(t=e.slice(us.URL_SCHEME.length),new us(t)):null;var t};ns.registerSaveRouter(ls),ns.registerLoadRouter(ls);class cs{constructor(){this.indexedDB=os()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>is(n),n.onsuccess=()=>{const r=n.result,s=r.transaction("model_info_store","readonly"),a=s.objectStore("model_info_store").getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(us.URL_SCHEME)?t.slice(us.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>is(r),r.onsuccess=()=>{const s=r.result,a=s.transaction("model_info_store","readwrite"),o=a.objectStore("model_info_store"),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),a=()=>{u=s.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)})}}if(n().getBool("IS_BROWSER"))try{rs.registerManager(us.URL_SCHEME,new cs)}catch(e){}const hs="tensorflowjs_models",ds="info",ps="model_topology",fs="weight_specs",ms="weight_data",gs="model_metadata";function bs(e){return{info:[hs,e,ds].join("/"),topology:[hs,e,ps].join("/"),weightSpecs:[hs,e,fs].join("/"),weightData:[hs,e,ms].join("/"),modelMetadata:[hs,e,gs].join("/")}}function ws(e){const t=e.split("/");if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join("/")}class ys{constructor(e){if(!n().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=bs(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=ts(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Xr)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,t.userDefinedMetadata=e.userDefinedMetadata}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Xr){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}ys.URL_SCHEME="localstorage://";const ks=e=>{return n().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ys.URL_SCHEME)?(t=e.slice(ys.URL_SCHEME.length),new ys(t)):null;var t};ns.registerSaveRouter(ks),ns.registerLoadRouter(ks);class vs{constructor(){m(n().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),m("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=hs+"/",n="/"+ds;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[ws(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=bs(e=(t=e).startsWith(ys.URL_SCHEME)?t.slice(ys.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}if(n().getBool("IS_BROWSER"))try{rs.registerManager(ys.URL_SCHEME,new vs)}catch(e){}function xs(e){return new Promise(e=>setTimeout(e)).then(e)}class Es{constructor(e){if(!n().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Es.URL_SCHEME)&&(e=e.slice(Es.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await xs(()=>a.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await xs(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ts(e)}}}}Es.URL_SCHEME="downloads://";class Ss{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise((n,r)=>{const s=new FileReader;s.onload=s=>{const a=JSON.parse(s.target.result),o=a.modelTopology;if(null==o)return void r(new Error("modelTopology field is missing from file "+e.name));0===t.length&&n({modelTopology:o});const i=a.weightsManifest;if(null==i)return void r(new Error("weightManifest field is missing from file "+e.name));let u;try{u=this.checkManifestAndWeightFiles(i,t)}catch(e){return void r(e)}const l=[],c=[],h=[];i.forEach(e=>{e.paths.forEach(e=>{c.push(e),h.push(null)}),l.push(...e.weights)}),i.forEach(e=>{e.paths.forEach(e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,s=c.indexOf(e);h[s]=r,-1===h.indexOf(null)&&n({modelTopology:o,weightSpecs:l,weightData:Qr(h),format:a.format,generatedBy:a.generatedBy,convertedBy:a.convertedBy,userDefinedMetadata:a.userDefinedMetadata})},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])})})},s.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(e)})}checkManifestAndWeightFiles(e,t){const n=[],r=t.map(e=>es(e.name)),s={};for(const a of e)a.paths.forEach(e=>{const a=es(e);if(-1!==n.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(n.push(a),-1===r.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);s[e]=t[r.indexOf(a)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return s}}function Ds(e,t,n,r){!function(e){m(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){m(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),m(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),m(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map(a=>(a.then(a=>{const o=n+ ++s/e.length*(r-n);return t(o),a}),a)))}async function Is(e,t){null==t&&(t={});const r=null==t.fetchFunc?n().platform.fetch:t.fetchFunc,s=e.map(e=>r(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(s):await Ds(s,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await Ds(a,t.onProgress,.5,1)}function $s(e){return async(t,n="",r)=>{const s=t.map(()=>!1),a={},o=null!=r?r.map(()=>!1):[],i=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=jr[u]*y(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach((t,n)=>{t===e.name&&(c(),o[n]=!0)}):c(),i.push(e.name),n+=l})}),!o.every(e=>e)){const e=r.filter((e,t)=>!o[t]);throw new Error("Could not find weights in manifest with names: "+e.join(", ")+". \nManifest JSON has weights with names: "+i.join(", ")+".")}const u=s.reduce((e,t,n)=>(t&&e.push(n),e),[]),l=[];u.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)})});const c=await e(l),h={};let d=0;return u.forEach(e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[d+e].byteLength;const s=new ArrayBuffer(r),o=new Uint8Array(s);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[d+e]);o.set(t,i),i+=t.byteLength}a[e].forEach(e=>{const t=Jr(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]}),d+=n}),h}}ns.registerSaveRouter(e=>n().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Es.URL_SCHEME)?function(e="model"){return new Es(e)}(e.slice(Es.URL_SCHEME.length)):null);class Ns{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,null!=t.fetchFunc?(m("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=n().platform.fetch,m(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&m(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:n};t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:ts(e),responses:[s]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+s.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,o=t.format,i=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const e=await this.loadWeights(r);[u,l]=e}return{modelTopology:n,weightSpecs:u,weightData:l,userDefinedMetadata:i,generatedBy:s,convertedBy:a,format:o}}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const o=[];return e.forEach(e=>{e.paths.forEach(e=>{o.push(s+e+r)})}),[a,Qr(await Is(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Fs(e){return null!=e.match(Ns.URL_SCHEME_REGEX)}Ns.URL_SCHEME_REGEX=/^https?:\/\//;const As=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Fs(e)):Fs(e),n)return Ms(e,t)}return null};function Ms(e,t){return new Ns(e,t)}ns.registerSaveRouter(As),ns.registerLoadRouter(As);class _s{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Ts{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}var Bs=Object.freeze({__proto__:null,browserFiles:function(e){return new Ss(e)},browserHTTPRequest:function(e,t){return Ms(e,t)},concatenateArrayBuffers:Qr,decodeWeights:Jr,encodeWeights:async function(e,t){const n=[],r=[],s=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let a=0;a<s.length;++a){const o=s[a],i=Array.isArray(e)?e[a].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise(async e=>{const t=await i.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)});r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:Yr(await Promise.all(r)),specs:n}},fromMemory:function(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new _s(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new _s({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new _s({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})},getLoadHandlers:(e,t)=>ns.getLoadHandlers(e,t),getModelArtifactsInfoForJSON:ts,getSaveHandlers:e=>ns.getSaveHandlers(e),http:Ms,isHTTPScheme:Fs,loadWeights:async function(e,t="",n,r){return $s(e=>Is(e,{requestInit:r}))(e,t,n)},registerLoadRouter:e=>ns.registerLoadRouter(e),registerSaveRouter:e=>ns.registerSaveRouter(e),weightsLoaderFactory:$s,withSaveHandler:function(e){return new Ts(e)},copyModel:async function(e,t){return as(e,t,!1)},listModels:async function(){const e=rs.getSchemes(),t={};for(const n of e){const e=await rs.getManager(n).listModels();for(const r in e){t[n+"://"+r]=e[r]}}return t},moveModel:async function(e,t){return as(e,t,!0)},removeModel:async function(e){const t=ss(e);return rs.getManager(t.scheme).removeModel(t.path)}});const Cs=Oe({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);let s=Ae(e,"indices","oneHot","int32");const a=[...s.shape,t];s=s.flatten();const o={indices:s},i={depth:t,onValue:n,offValue:r};return ke.runKernelFunc((e,o)=>(o([s]),ft(e.oneHot(s,t,n,r),a)),o,null,"OneHot",i)}});const Rs=Oe({confusionMatrix_:function(e,t,n){const r=Ae(e,"labels","confusionMatrix"),s=Ae(t,"predictions","confusionMatrix");m(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),m(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),m(1===s.rank,()=>"Expected the rank of predictions to be 1, but got "+s.rank),m(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),m(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const a=Cs(r.asType("int32"),n),o=Cs(s.asType("int32"),n);return a.transpose().matMul(o).asType("int32")}});var qs=Object.freeze({__proto__:null,confusionMatrix:Rs});let Ps;const zs=Oe({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else{if(null==e.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);o=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=u("FromPixels",ke.backendName))return ke.runKernel("FromPixels",{pixels:e},{numChannels:t});const[i,l]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(o?c=e.getContext("2d").getImageData(0,0,i,l).data:r||n?c=e.data:(a||s)&&(null==Ps&&(Ps=document.createElement("canvas").getContext("2d")),Ps.canvas.width=i,Ps.canvas.height=l,Ps.drawImage(e,0,0,i,l),c=Ps.getImageData(0,0,i,l).data),4===t)h=new Int32Array(c);else{const e=i*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Ye(h,[l,i,t],"int32")}});var Ls=Object.freeze({__proto__:null,toPixels:async function(e,t){let n=Ae(e,"img","toPixels");if(!(e instanceof ae)){const e=n;n=e.toInt(),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+a);const o=await n.data(),i=n.min(),u=n.max(),l=await Promise.all([i.data(),u.data()]),c=l[0],h=l[1],d=c[0],p=h[0];if(i.dispose(),u.dispose(),"float32"===n.dtype){if(d<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but got range [${d} - ${p}].`)}else{if("int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);if(d<0||p>255)throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but got range [${d} - ${p}].`)}const f="float32"===n.dtype?255:1,m=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){let t,n,r,s;1===a?(t=o[e]*f,n=o[e]*f,r=o[e]*f,s=255):3===a?(t=o[3*e]*f,n=o[3*e+1]*f,r=o[3*e+2]*f,s=255):4===a&&(t=o[4*e]*f,n=o[4*e+1]*f,r=o[4*e+2]*f,s=o[4*e+3]*f);const i=4*e;m[i+0]=Math.round(t),m[i+1]=Math.round(n),m[i+2]=Math.round(r),m[i+3]=Math.round(s)}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(m,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),m},fromPixels:zs});function Os(e,t){if(e.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[t.rank-1]>e.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[t.rank-1]} vs. ${e.rank}`);if(0===e.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const n=t.shape,r=n[n.length-1];let s=1;for(let e=0;e<n.length-1;++e)s*=n[e];const a=e.shape,o=n.slice();o.pop();let i=1;for(let t=r;t<e.rank;++t)i*=a[t],o.push(a[t]);const u=[...L(e.shape).map(e=>e/i),1].slice(0,r);return[o,s,i,u]}var Ws=Object.freeze({__proto__:null,prepareAndValidate:Os});function Ks(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+" Output shape length < "+(r+(n.rank-s)));if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Gs(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}Ks(n,t,e)}function Hs(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let o=1;for(let e=s;e<a;++e)o*=n[e];const i=s<1?1:s;return{sliceRank:s,numUpdates:y(t.shape)/i,sliceSize:o,strides:[...L(n.slice(0,s)),1],outputSize:y(n)}}var Us=Object.freeze({__proto__:null,validateUpdateShape:Ks,validateInput:Gs,calculateShapes:Hs});class Vs{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class js{constructor(){this.classNameMap={}}static getMap(){return null==js.instance&&(js.instance=new js),js.instance}static register(e){js.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Js(e){m(null!=e.className,()=>"Class being registered does not have the static className property defined."),m("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),m(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),js.register(e)}var Ys=Object.freeze({__proto__:null,Serializable:Vs,SerializationMap:js,registerClass:Js});function Xs(){return 32===ke.backend.floatPrecision()?.001:.1}function Zs(e,t,n){let r=!0;if((M(e)||M(t))&&(r=!1),M(e)&&M(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(e)&&Array.isArray(t)){const n=Ne(e),r=Ne(t);if(!k(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=M(e)?e:w(e),a=M(t)?t:w(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=s[e],r=a[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${s}.\nExpected: ${a}.`)}}function Qs(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}var ea=Object.freeze({__proto__:null,TEST_EPSILON_FLOAT16:.1,expectArraysClose:function(e,t,n){return null==n&&(n=Xs()),Zs(e,t,(e,t)=>Qs(e,t,n))},testEpsilon:Xs,expectPromiseToFail:function(e,t){e().then(()=>t.fail(),()=>t())},expectArraysEqual:function(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return B(e)||B(e[0])||B(t)||B(t[0])?Zs(e,n,(e,t)=>e==t):Zs(e,t,(e,t)=>Qs(e,t,0))},expectNumbersClose:function(e,t,n){if(null==n&&(n=Xs()),!Qs(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)},expectValuesInRange:function(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)},expectArrayBuffersEqual:function(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}});const ta=Oe({addN_:function(e){m(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),m(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>Ae(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!k(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return ke.runKernelFunc((e,n)=>{const r=e.addN(t);return n(t),r},r,null,"AddN")}});function na(e){return null==e?null:0===e.rank?e.as1D():1===e.rank?e:2===e.rank?e.as4D(1,1,e.shape[0],e.shape[1]):3===e.rank?e.as4D(1,e.shape[0],e.shape[1],e.shape[2]):e}const ra=Oe({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const o=Ae(e,"x","batchNorm"),i=Ae(t,"mean","batchNorm"),u=Ae(n,"variance","batchNorm");let l,c;null!=s&&(l=Ae(s,"scale","batchNorm")),null!=r&&(c=Ae(r,"offset","batchNorm")),m(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),m(null==c||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),m(null==l||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h=function(e){let t;return t=0===e.rank||1===e.rank?e.as4D(1,1,1,e.size):2===e.rank?e.as4D(1,1,e.shape[0],e.shape[1]):3===e.rank?e.as4D(1,e.shape[0],e.shape[1],e.shape[2]):e,t}(o),d={x:h,scale:l,offset:c,mean:i,variance:u},p={varianceEpsilon:a},f=ke.runKernelFunc((e,t)=>(t([h,i,u,l]),e.batchNorm(h,na(i),na(u),na(c),na(l),a)),d,null,"FusedBatchNorm",p);return ft(f,o.shape)}});const sa=Oe({batchNorm2d_:function(e,t,n,r,s,a){const o=Ae(e,"x","batchNorm"),i=Ae(t,"mean","batchNorm"),u=Ae(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ae(s,"scale","batchNorm")),null!=r&&(c=Ae(r,"offset","batchNorm")),m(2===o.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+o.rank+"."),m(2===i.rank||1===i.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),m(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=l&&m(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=c&&m(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),ra(o,i,u,c,l,a)}});const aa=Oe({batchNorm3d_:function(e,t,n,r,s,a){const o=Ae(e,"x","batchNorm"),i=Ae(t,"mean","batchNorm"),u=Ae(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ae(s,"scale","batchNorm")),null!=r&&(c=Ae(r,"offset","batchNorm")),m(3===o.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+o.rank+"."),m(3===i.rank||1===i.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),m(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=l&&m(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=c&&m(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),ra(o,i,u,c,l,a)}});const oa=Oe({batchNorm4d_:function(e,t,n,r,s,a){const o=Ae(e,"x","batchNorm"),i=Ae(t,"mean","batchNorm"),u=Ae(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ae(s,"scale","batchNorm")),null!=r&&(c=Ae(r,"offset","batchNorm")),m(4===o.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+o.rank+"."),m(4===i.rank||1===i.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),m(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=l&&m(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=c&&m(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),ra(o,i,u,c,l,a)}});const ia=Oe({clone_:function(e){const t=Ae(e,"x","clone",null);return ke.runKernelFunc(()=>ke.makeTensorFromDataId(t.dataId,t.shape,t.dtype),{x:t},null,"Identity")}});const ua=Oe({broadcastTo_:function(e,t){let n=Ae(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=ft(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return ia(n);const o={x:n},i={shape:t,inputShape:s};return ke.runKernelFunc(e=>e.tile(n,a),o,null,"BroadcastTo",i)}});const la=Oe({concat1d_:function(e){return ut(e,0)}});const ca=Oe({concat2d_:function(e,t){return ut(e,t)}});const ha=Oe({concat3d_:function(e,t){return ut(e,t)}});const da=Oe({concat4d_:function(e,t){return ut(e,t)}});const pa=Oe({conv1d_:function(e,t,n,r,s="NWC",a=1,o){const i=Ae(e,"x","conv1d"),u=Ae(t,"filter","conv1d");let l=i,c=!1;2===i.rank&&(c=!0,l=ft(i,[1,i.shape[0],i.shape[1]])),m(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),m(3===u.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."),null!=o&&m(v(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`),m(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),m(Yt(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),m("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=ft(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=ft(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=tn(d,h,[1,n],r,"NHWC",[1,a],o);return ft(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const fa=Oe({conv2dTranspose_:function(e,t,n,r,s,a){const o=Ae(e,"x","conv2dTranspose"),i=Ae(t,"filter","conv2dTranspose");return Qt(n,o,i,r,s,"NHWC",a)}});const ma=Oe({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const o=Ae(e,"x","conv3d"),i=Ae(t,"filter","conv3d");let u=o,l=!1;4===o.rank&&(l=!0,u=ft(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),m(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),m(5===i.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+i.rank+"."),m(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),m(Yt(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),m("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const c={x:u,filter:i},h={strides:n,pad:r,dataFormat:s,dilations:a},d=ke.runKernelFunc((e,t)=>{const s=Kt(u.shape,i.shape,n,a,r),o=e.conv3d(u,i,s);return t([u,i]),o},c,null,"Conv3D",h);return l?d.as4D(d.shape[1],d.shape[2],d.shape[3],d.shape[4]):d}});const ga=Oe({conv3dTranspose_:function(e,t,n,r,s){const a=Ae(e,"x","conv3dTranspose"),o=Ae(t,"filter","conv3dTranspose");return sn(n,a,o,r,s)}});const ba=Oe({depthToSpace_:function(e,t,n="NHWC"){const r=Ae(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];m(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),m(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`),m(o%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`);const i={x:r},u={blockSize:t,dataFormat:n};return ke.runKernelFunc(e=>e.depthToSpace(r,t,n),i,null,"DepthToSpace",u)}});const wa=Oe({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],o){const i=Ae(e,"x","depthwiseConv2d"),u=Ae(t,"filter","depthwiseConv2d");let l=i,c=!1;3===i.rank&&(c=!0,l=ft(i,[1,i.shape[0],i.shape[1],i.shape[2]])),m(4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),m(4===u.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."),m(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=o&&m(v(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const h={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},p=ke.runKernelFunc((e,t)=>{null==a&&(a=[1,1]),m(Yt(n,a),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const s=Wt(l.shape,u.shape,n,a,r,o,!0),i=e.depthwiseConv2D(l,u,s);return t([l,u]),i},h,null,"DepthwiseConv2dNative",d);return c?ft(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const ya=Oe({diag_:function(e){const t=Ae(e,"x","diag").flatten(),n={x:t};return ke.runKernelFunc(n=>{const r=n.diag(t),s=[...e.shape,...e.shape];return ft(r,s)},n,null,"Diag")}});function ka(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=lt(e,"int32"),s=lt([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),o=t*e.length;s.values.set(a,o)}return s.toTensor()}const va=Oe({logicalAnd_:function(e,t){const n=Ae(e,"a","logicalAnd","bool"),r=Ae(t,"b","logicalAnd","bool");return De(n.shape,r.shape),ke.runKernelFunc(e=>e.logicalAnd(n,r),{a:n,b:r},null,"LogicalAnd")}}),xa=Oe({logicalNot_:function(e){const t=Ae(e,"x","logicalNot","bool");return ke.runKernelFunc(e=>e.logicalNot(t),{$x:t})}}),Ea=Oe({logicalOr_:function(e,t){const n=Ae(e,"a","logicalOr","bool"),r=Ae(t,"b","logicalOr","bool");return De(n.shape,r.shape),ke.runKernelFunc(e=>e.logicalOr(n,r),{$a:n,$b:r})}}),Sa=Oe({logicalXor_:function(e,t){const n=Ae(e,"a","logicalXor","bool"),r=Ae(t,"b","logicalXor","bool");return De(n.shape,r.shape),Ea(e,t).logicalAnd(va(e,t).logicalNot())}}),Da=Oe({where_:function(e,t,n){const r=Ae(t,"a","where"),s=Ae(n,"b","where"),a=Ae(e,"condition","where","bool");return g(r.shape,s.shape,"Error in where: "),1===a.rank?m(a.shape[0]===r.shape[0],()=>"The first dimension of `a` must match the size of `condition`."):g(a.shape,s.shape,"Error in where: "),ke.runKernelFunc((e,t)=>{const n=e.select(a,r,s);return t([a]),n},{$condition:a,$a:r,$b:s},(e,t)=>{const[n]=t;return{$condition:()=>it(n).toFloat(),$a:()=>e.mul(n.cast(e.dtype)),$b:()=>e.mul(n.logicalNot().cast(e.dtype))}})}}),Ia=async function(e){const t=Ae(e,"condition","whereAsync","bool"),n=await t.data(),r=ka(t.shape,n);return e!==t&&t.dispose(),r};const $a=Oe({divNoNan_:function(e,t){let n=Ae(e,"a","div"),r=Ae(t,"b","div");[n,r]=fe(n,r);const s=hr(n,r),a=it(s),o=r.equal(a);return Da(o,a,s)}});const Na=Oe({dot_:function(e,t){const n=Ae(e,"t1","dot"),r=Ae(t,"t2","dot");m(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(m(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),1===n.rank&&1===r.rank){const e=ft(n,[1,-1]),t=ft(r,[-1,1]),s=yt(e,t);return ft(s,[])}if(1===n.rank&&2===r.rank){const e=ft(n,[1,-1]),t=ft(r,[r.shape[0],r.shape[1]]),s=yt(e,t);return ft(s,[s.size])}if(2===n.rank&&1===r.rank){const e=ft(r,[-1,1]),t=yt(n,e);return ft(t,[t.size])}{const e=ft(r,[r.shape[0],r.shape[1]]);return yt(n,e)}}});const Fa=Oe({equal_:function(e,t){let n=Ae(e,"a","equal"),r=Ae(t,"b","equal");[n,r]=fe(n,r),De(n.shape,r.shape);const s={a:n,b:r};return ke.runKernelFunc(e=>e.equal(n,r),s,null,"Equal")}});const Aa=Oe({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=lt([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const o=s.toTensor().as2D(e,t);if(null==n)return o;if(1===n.length)return mr(pt(o,0),[n[0],1,1]);if(2===n.length)return mr(pt(pt(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return mr(pt(pt(pt(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const Ma=Oe({greater_:function(e,t){let n=Ae(e,"a","greater"),r=Ae(t,"b","greater");[n,r]=fe(n,r),De(n.shape,r.shape);const s={a:n,b:r};return ke.runKernelFunc(e=>e.greater(n,r),s,null,"Greater")}});const _a=Oe({greaterEqual_:function(e,t){let n=Ae(e,"a","greaterEqual"),r=Ae(t,"b","greaterEqual");[n,r]=fe(n,r),De(n.shape,r.shape);const s={a:n,b:r};return ke.runKernelFunc((e,t)=>{const s=e.greaterEqual(n,r);return t([n,r]),s},s,null,"GreaterEqual")}});const Ta=Oe({less_:function(e,t){let n=Ae(e,"a","less"),r=Ae(t,"b","less");[n,r]=fe(n,r),De(n.shape,r.shape);const s={a:n,b:r};return ke.runKernelFunc(e=>e.less(n,r),s,null,"Less")}});const Ba=Oe({lessEqual_:function(e,t){let n=Ae(e,"a","lessEqual"),r=Ae(t,"b","lessEqual");[n,r]=fe(n,r),De(n.shape,r.shape);const s={a:n,b:r};return ke.runKernelFunc((e,t)=>{const s=e.lessEqual(n,r);return t([n,r]),s},s,null,"LessEqual")}});const Ca=Oe({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Ae(e,"x","localResponseNormalization");m(4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`),m(v(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;3===a.rank&&(i=!0,o=ft(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:o},l={depthRadius:t,bias:n,alpha:r,beta:s},c=ke.runKernelFunc((e,a)=>{const i=e.localResponseNormalization4D(o,t,n,r,s);return a([o,i]),i},u,null,"LRN",l);return i?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}});const Ra=Oe({max_:function(e,t=null,n=!1){const r=Ae(e,"x","max"),s={x:r},a={reductionIndices:t,keepDims:n},o=ke.runKernelFunc((e,n)=>{let s=S(t,r.shape);const a=Re(s,r.rank);let o=r;null!=a&&(o=vr(r,a),s=Pe(s.length,o.rank));const i=e.max(o,s);return n([r,i]),null!=a&&e.disposeData(o.dataId),i},s,null,"Max",a);return n?ft(o,Ce(o.shape,S(t,r.shape))):o}});const qa=Oe({multinomial_:function(e,t,n,r=!1){const s=Ae(e,"logits","multinomial"),a=s.size,o=s.rank;if(a<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+a+".");if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+o);n=n||Math.random();const i=1===o?s.as2D(1,-1):s,u=ke.runKernelFunc(e=>e.multinomial(i,r,t,n),{logits2D:i});return 1===o?u.as1D():u}});const Pa=Oe({notEqual_:function(e,t){let n=Ae(e,"a","notEqual"),r=Ae(t,"b","notEqual");[n,r]=fe(n,r),De(n.shape,r.shape);const s={a:n,b:r};return ke.runKernelFunc(e=>e.notEqual(n,r),s,null,"NotEqual")}});const za=Oe({outerProduct_:function(e,t){const n=Ae(e,"v1","outerProduct"),r=Ae(t,"v2","outerProduct");m(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=ft(n,[-1,1]),a=ft(r,[1,-1]);return yt(s,a)}});const La=Oe({pad1d_:function(e,t,n=0){return m(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Mr(e,[t],n)}});const Oa=Oe({pad2d_:function(e,t,n=0){return m(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Mr(e,t,n)}});const Wa=Oe({pad3d_:function(e,t,n=0){return m(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Mr(e,t,n)}});const Ka=Oe({pad4d_:function(e,t,n=0){return m(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Mr(e,t,n)}});const Ga=Oe({rand_:function(e,t,n){const r=y(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return ke.makeTensor(s,e,n)}});"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function Ha(e,t){return e(t={exports:{}},t.exports),t.exports}var Ua=Ha((function(e){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function s(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function a(e,t){var n=new r(e),a=t&&t.state,o=n.next;return o.int32=function(){return 4294967296*n.next()|0},o.double=function(){return o()+11102230246251565e-32*(2097152*o()|0)},o.quick=o,a&&("object"==typeof a&&s(a,n),o.state=function(){return s(n,{})}),o}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.alea=a}(0,e,!1)})),Va=Ha((function(e){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function a(e,t){var n=new r(e),a=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,a&&("object"==typeof a&&s(a,n),o.state=function(){return s(n,{})}),o}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xor128=a}(0,e,!1)})),ja=Ha((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function a(e,t){var n=new r(e),a=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,a&&("object"==typeof a&&s(a,n),o.state=function(){return s(n,{})}),o}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xorwow=a}(0,e,!1)})),Ja=Ha((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function s(e,t){return t.x=e.x.slice(),t.i=e.i,t}function a(e,t){null==e&&(e=+new Date);var n=new r(e),a=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,a&&(a.x&&s(a,n),o.state=function(){return s(n,{})}),o}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xorshift7=a}(0,e,!1)})),Ya=Ha((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(o=o+1640531527|0,s=0==(n=i[127&a]^=r+o)?s+1:0);for(s>=128&&(i[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;e.w=o,e.X=i,e.i=s}(t,e)}function s(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function a(e,t){null==e&&(e=+new Date);var n=new r(e),a=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,a&&(a.X&&s(a,n),o.state=function(){return s(n,{})}),o}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.xor4096=a}(0,e,!1)})),Xa=Ha((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function a(e,t){var n=new r(e),a=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,a&&("object"==typeof a&&s(a,n),o.state=function(){return s(n,{})}),o}t&&t.exports?t.exports=a:n&&n.amd?n((function(){return a})):this.tychei=a}(0,e,!1)})),Za=Ha((function(e){!function(t,n){var r,s=this,a=n.pow(256,6),o=n.pow(2,52),i=2*o;function u(e,u,p){var f=[],m=h(function e(t,n){var r,s=[],a=typeof t;if(n&&"object"==a)for(r in t)try{s.push(e(t[r],n-1))}catch(e){}return s.length?s:"string"==a?t:t+"\0"}((u=1==u?{entropy:!0}:u||{}).entropy?[e,d(t)]:null==e?function(){try{var e;return r&&(e=r.randomBytes)?e=e(256):(e=new Uint8Array(256),(s.crypto||s.msCrypto).getRandomValues(e)),d(e)}catch(e){var n=s.navigator,a=n&&n.plugins;return[+new Date,s,a,s.screen,d(t)]}}():e,3),f),g=new l(f),b=function(){for(var e=g.g(6),t=a,n=0;e<o;)e=256*(e+n),t*=256,n=g.g(1);for(;e>=i;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|g.g(4)},b.quick=function(){return g.g(4)/4294967296},b.double=b,h(d(g.S),t),(u.pass||p||function(e,t,r,s){return s&&(s.S&&c(s,g),e.state=function(){return c(g,{})}),r?(n.random=e,t):e})(b,m,"global"in u?u.global:this==n,u.state)}function l(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);s<256;)o[s]=s++;for(s=0;s<256;s++)o[s]=o[a=255&a+e[s%n]+(t=o[s])],o[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,o=r.S;e--;)t=o[s=255&s+1],n=256*n+o[255&(o[s]=o[a=255&a+t])+(o[a]=t)];return r.i=s,r.j=a,n})(256)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function h(e,t){for(var n,r=e+"",s=0;s<r.length;)t[255&s]=255&(n^=19*t[255&s])+r.charCodeAt(s++);return d(t)}function d(e){return String.fromCharCode.apply(0,e)}if(n.seedrandom=u,h(n.random(),t),e.exports){e.exports=u;try{r=require("crypto")}catch(e){}}}([],Math)}));Za.alea=Ua,Za.xor128=Va,Za.xorwow=ja,Za.xorshift7=Ja,Za.xor4096=Ya,Za.tychei=Xa;var Qa=Za.alea;class eo{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Qa(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class to{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Qa(s.toString()),this.randn=new eo(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class no{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Qa(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ro=Oe({randomGamma_:function(e,t,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const a=new to(t,n,r,s),o=lt(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}});const so=Oe({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const a=new eo(t,n,r,!1,s),o=lt(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}});const ao=Oe({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=lt(e,r),o=new no(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=o.nextValue();return a.toTensor()}});const oo=Oe({separableConv2d_:function(e,t,n,r,s,a=[1,1],o="NHWC"){const i=Ae(e,"x","separableConv2d"),u=Ae(t,"depthwiseFilter","separableConv2d"),l=Ae(n,"pointwiseFilter","separableConv2d");let c=i,h=!1;if(3===i.rank&&(h=!0,c=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");m(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),m(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),m(4===l.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),m(1===l.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),m(1===l.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const d=u.shape[2],p=u.shape[3];m(l.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`);const f=wa(c,u,r,s,o,a),g=tn(f,l,1,"valid",o);return h?g.as3D(g.shape[1],g.shape[2],g.shape[3]):g}});const io=Oe({squaredDifference_:function(e,t){let n=Ae(e,"a","squaredDifference"),r=Ae(t,"b","squaredDifference");[n,r]=fe(n,r),De(n.shape,r.shape);const s={a:n,b:r};return ke.runKernelFunc((e,t)=>{const s=e.squaredDifference(n,r);return t([n,r]),s},s,null,"SquaredDifference",{})}});const uo=Oe({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new eo(t,n,r,!0,s),o=lt(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}});function lo(e,t,n){const r=e.shape[n],s=[];let a=1,o=1;for(let t=0;t<n;t++)s.push(e.shape[t]),a*=e.shape[t];for(let e=0;e<t.rank;e++)s.push(t.shape[e]);for(let t=n+1;t<e.rank;t++)s.push(e.shape[t]),o*=e.shape[t];return{batchSize:a,sliceSize:o,dimSize:r,outputShape:s}}var co=Object.freeze({__proto__:null,segOpComputeOptimalWindowSize:function(e,t){let n,r=!1;for(e<=30?(n=e,r=!0):n=z(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=z(e,n+1);return n},computeOutShape:function(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r},collectGatherOpShapeInfo:lo});function ho(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function po(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const fo=Oe({gather_:function(e,t,n=0){const r=Ae(e,"x","gather"),s=Ae(t,"indices","gather","int32");n=S(n,r.shape)[0];const a=lo(r,s,n);return ke.runKernelFunc((e,t)=>{const a=e.gather(r,s.flatten(),n);return t([s]),a},{x:r,indices:s},(e,t)=>{const[s]=t;return{x:()=>{const t=r.shape,a=s.size,o=t.slice(0,n),i=o.length,u=t.slice(n,t.length).slice(1),l=u.length,c=ho(0,i),h=ho(i+1,i+1+l),d=po([o,[a],u]),p=e.reshape(d),f=s.reshape([a]),m=po([[i],c,h]),g=p.transpose(m);let b=mo(g,f,r.shape[n]);const w=qe(m);return b=b.transpose(w),b},indices:()=>s}},"Gather",{axis:n}).reshape(a.outputShape)}}),mo=Oe({unsortedSegmentSum_:function(e,t,n){const r=Ae(e,"x","unsortedSegmentSum"),s=Ae(t,"segmentIds","unsortedSegmentSum","int32");return m(v(n),()=>"numSegments must be of dtype int"),ke.runKernelFunc((e,t)=>{const a=e.unsortedSegmentSum(r,s,n);return t([s]),a},{$x:r},(e,t)=>{const[n]=t;return{$x:()=>function(e,t){const n=Qn(t,it(t)),r=fo(e,n);let s=_a(t,Ve(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=pt(s,e+1);s=va(s,tt(r.shape,"bool"));const o=it(r);return Da(s,r,o)}(e,n)}})}});const go=async function(e,t,n){const r=Ae(e,"tensor","boolMask"),s=Ae(t,"mask","boolMask","bool"),a=null==n?0:n,o=s.rank,i=r.shape;m(o>0,()=>"mask cannot be scalar"),g(i.slice(a,a+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=a;e<a+o;e++)u*=i[e];const l=i.slice(0,a).concat([u],i.slice(a+o)),c=r.reshape(l),h=s.reshape([-1]),d=await Ia(h),p=d.squeeze([1]),f=fo(c,p,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f};const bo=Oe({reverse_:function(e,t){const n=Ae(e,"x","reverse");if(0===n.rank)return n.clone();const r=S(t,n.shape);return ke.runKernelFunc(e=>e.reverse(n,r),{$x:n},e=>({$x:()=>e.reverse(r)})).reshapeAs(n)}}),wo=Oe({reverse1d_:function(e){const t=Ae(e,"x","reverse");return m(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),bo(t,0)}}),yo=Oe({reverse2d_:function(e,t){const n=Ae(e,"x","reverse");return m(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),bo(n,t)}}),ko=Oe({reverse3d_:function(e,t){const n=Ae(e,"x","reverse");return m(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),bo(n,t)}}),vo=Oe({reverse4d_:function(e,t){const n=Ae(e,"x","reverse");return m(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),bo(n,t)}});function xo(e,t,n,r,s,a){const o=Ae(e,"x","maxPool");let i=o,u=!1;3===o.rank&&(u=!0,i=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),null==r&&(r=[1,1]),m(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),m(Yt(n,r),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`),null!=a&&m(v(s),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const l=Lt(i.shape,t,n,r,s,a);if(1===l.filterWidth&&1===l.filterHeight&&k(l.inShape,l.outShape))return o.clone();const c=[i],h=ke.runKernelFunc((e,t)=>{const n=e.maxPool(i,l);return t([i,n]),n},{x:i},(e,a)=>{const[o,i]=a;return{x:()=>function(e,t,n,r,s,a,o,i){const u=Ae(e,"dy","maxPoolBackprop"),l=Ae(t,"input","maxPoolBackprop"),c=Ae(n,"output","maxPoolBackprop");m(l.rank===u.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${u.rank})`),null==a&&(a=[1,1]);m(Yt(s,a),()=>`Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`),m(4===u.rank,()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+u.rank+"."),m(4===l.rank,()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+l.rank+"."),null!=i&&m(v(o),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`);const h=Lt(l.shape,r,s,a,o,i);return ke.runKernelFunc(e=>e.maxPoolBackprop(u,l,c,h),{$dy:u,$input:l})}(e,o,i,t,n,r,s)}},"MaxPool",l,c);return u?h.as3D(h.shape[1],h.shape[2],h.shape[3]):h}function Eo(e,t,n,r,s,a){const o=Ae(e,"x","avgPool","float32");null==r&&(r=[1,1]),m(Yt(n,r),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`);let i=o,u=!1;3===o.rank&&(u=!0,i=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),m(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),null!=a&&m(v(s),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const l=Lt(i.shape,t,n,r,s,a);if(1===l.filterWidth&&1===l.filterHeight&&k(l.inShape,l.outShape))return o.clone();let c=ke.runKernelFunc(e=>e.avgPool(i,l),{x:i},e=>({x:()=>function(e,t,n,r,s,a){const o=Ae(e,"dy","avgPoolBackprop"),i=Ae(t,"input","avgPoolBackprop");m(i.rank===o.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${o.rank})`),null==s&&(s=[1,1]);m(Yt(r,s),()=>`Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`);let u=i,l=o,c=!1;3===i.rank&&(c=!0,u=i.as4D(1,i.shape[0],i.shape[1],i.shape[2]),l=o.as4D(1,o.shape[0],o.shape[1],o.shape[2]));m(4===l.rank,()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+l.rank+"."),m(4===u.rank,()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+u.rank+".");const h=Lt(u.shape,n,r,s,a),d=ke.runKernelFunc(e=>e.avgPoolBackprop(l,u,h),{dy4D:l,input4D:u});if(c)return d.as3D(d.shape[1],d.shape[2],d.shape[3]);return d}(e,i,t,n,r,s)}),"AvgPool",l);return c=c.cast(o.dtype),u?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}const So=Oe({maxPool_:function(e,t,n,r,s){return xo(e,t,n,1,r,s)}}),Do=Oe({avgPool_:function(e,t,n,r,s){return Eo(e,t,n,1,r,s)}}),Io=Oe({pool_:function(e,t,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=Ae(e,"x","maxPool");let i=o,u=!1;3===o.rank&&(u=!0,i=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),m(Yt(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);const l=Lt(i.shape,t,a,s,r),c=[l.dilationHeight,l.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),s=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],s[t]])}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(e,t,n){const r=n.map(e=>e[0]),s=n.map(e=>e[1]),a=e.concat(r,s),o=t.map((e,t)=>(e-a[t]%e)%e),i=s.map((e,t)=>e+o[t]),u=t.map((e,t)=>[r[t],i[t]]),l=t.map((e,t)=>[0,o[t]]);return[u,l]}([l.inHeight,l.inWidth],c,h),g=d?r:"valid",b=d?i:vt(i,c,p),w=("avg"===n?()=>Eo(b,t,a,1,g):()=>xo(b,t,a,1,g))(),y=d?w:Dr(w,c,f);return u?y.as3D(y.shape[1],y.shape[2],y.shape[3]):y}}),$o=Oe({maxPool3d_:function(e,t,n,r,s,a="NDHWC",o){const i=Ae(e,"x","maxPool3d");let u=i,l=!1;4===i.rank&&(l=!0,u=i.as5D(1,i.shape[0],i.shape[1],i.shape[2],i.shape[3])),null==o&&(o=[1,1,1]),m(5===u.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`),m("NDHWC"===a,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+a),m(Yt(n,o),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),null!=s&&m(v(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const c=Ot(u.shape,t,n,o,r,s,a),h=ke.runKernelFunc((e,t)=>{const n=e.maxPool3d(u,c);return t([u,n]),n},{x:u},(e,a)=>{const[i,u]=a;return{x:()=>function(e,t,n,r,s,a,o,i){const u=Ae(e,"dy","maxPool3dBackprop"),l=Ae(t,"input","maxPool3dBackprop"),c=Ae(n,"output","maxPool3dBackprop");let h=u,d=l,p=c,f=!1;4===l.rank&&(f=!0,h=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]),d=l.as5D(1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]),p=c.as5D(1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]));m(5===h.rank,()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+h.rank+"."),m(5===d.rank,()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+d.rank+"."),m(5===p.rank,()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+p.rank+"."),null==a&&(a=[1,1,1]);m(Yt(s,a),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`),null!=i&&m(v(o),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`);const g=Ot(d.shape,r,s,a,o,i),b=ke.runKernelFunc(e=>e.maxPool3dBackprop(h,d,p,g),{dy5D:h,input5D:d});if(f)return b.as4D(b.shape[1],b.shape[2],b.shape[3],b.shape[4]);return b}(e,i,u,t,n,o,r,s)}});return l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),No=Oe({avgPool3d_:function(e,t,n,r,s,a="NDHWC",o){const i=Ae(e,"x","avgPool3d","float32");let u=i,l=!1;4===i.rank&&(l=!0,u=i.as5D(1,i.shape[0],i.shape[1],i.shape[2],i.shape[3])),null==o&&(o=[1,1,1]),m(5===u.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`),m("NDHWC"===a,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+a),m(Yt(n,o),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),null!=s&&m(v(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const c=Ot(u.shape,t,n,o,r,s,a);let h=ke.runKernelFunc(e=>e.avgPool3d(u,c),{x:u},e=>({x:()=>function(e,t,n,r,s,a,o){const i=Ae(e,"dy","avgPool3dBackprop"),u=Ae(t,"input","avgPool3dBackprop");let l=i,c=u,h=!1;4===u.rank&&(h=!0,l=i.as5D(1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]),c=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]));m(5===l.rank,()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+"."),m(5===c.rank,()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+c.rank+"."),null==s&&(s=[1,1,1]);m(Yt(r,s),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`),null!=o&&m(v(a),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);const d=Ot(c.shape,n,r,s,a,o),p=ke.runKernelFunc(e=>e.avgPool3dBackprop(l,c,d),{dy5D:l,input5D:c});if(h)return p.as4D(p.shape[1],p.shape[2],p.shape[3],p.shape[4]);return p}(e,u,t,n,o,r,s)}));return h=h.cast(u.dtype),l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),Fo=Oe({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a=Ae(e,"x","maxPoolWithArgmax"),o={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},i=ke.runKernel("MaxPoolWithArgmax",{x:a},o);return{result:i[0],indexes:i[1]}}});const Ao=Oe({equalStrict_:function(e,t){cn("strict variants of ops have been deprecated and will be removed in future");const n=Ae(e,"a","equalStrict"),r=Ae(t,"b","equalStrict");return g(n.shape,r.shape,"Error in equalStrict: "),n.equal(r)}}),Mo=Oe({greaterEqualStrict_:function(e,t){cn("strict variants of ops have been deprecated and will be removed in future");const n=Ae(e,"a","greaterEqualStrict"),r=Ae(t,"b","greaterEqualStrict");return g(n.shape,r.shape,"Error in greaterEqualStrict: "),n.greaterEqual(r)}}),_o=Oe({greaterStrict_:function(e,t){cn("strict variants of ops have been deprecated and will be removed in future");const n=Ae(e,"a","greaterStrict"),r=Ae(t,"b","greaterStrict");return g(n.shape,r.shape,"Error in greaterStrict: "),n.greater(r)}}),To=Oe({lessEqualStrict_:function(e,t){cn("strict variants of ops have been deprecated and will be removed in future");const n=Ae(e,"a","lessEqualStrict"),r=Ae(t,"b","lessEqualStrict");return g(n.shape,r.shape,"Error in lessEqualStrict: "),n.lessEqual(r)}}),Bo=Oe({lessStrict_:function(e,t){cn("strict variants of ops have been deprecated and will be removed in future");const n=Ae(e,"a","lessStrict"),r=Ae(t,"b","lessStrict");return g(n.shape,r.shape,"Error in lessStrict: "),n.less(r)}}),Co=Oe({notEqualStrict_:function(e,t){cn("strict variants of ops have been deprecated and will be removed in future");const n=Ae(e,"a","notEqualStrict"),r=Ae(t,"b","notEqualStrict");return g(n.shape,r.shape,"Error in notEqualStrict: "),n.notEqual(r)}});const Ro=Oe({elu_:function(e){const t=Ae(e,"x","elu");return ke.runKernelFunc((e,n)=>{const r=e.elu(t);return n([r]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>ke.runKernelFunc(t=>t.eluDer(e,n),{dy:e,y:n})}})}}),qo=Oe({leakyRelu_:function(e,t=.2){const n=Ae(e,"x","leakyRelu");return Qn(Ve(t).mul(n),n)}}),Po=Oe({prelu_:function(e,t){const n=Ae(e,"x","prelu"),r=Ae(t,"alpha","prelu");return ke.runKernelFunc((e,t)=>{const s=e.prelu(n,r);return t([n,r]),s},{x:n,alpha:r},(e,t)=>{const[n,r]=t,s=n.greater(0);return{x:()=>Da(s,e,e.mul(r)),alpha:()=>{let t=Da(s,it(e),e.mul(n));const a=Se(r.shape,e.shape);return a.length>0&&(t=t.sum(a)),t.reshape(r.shape)}}},"Prelu")}}),zo=Oe({relu_:function(e){const t=Ae(e,"x","relu");return"bool"===t.dtype?t.toInt():ke.runKernelFunc((e,n)=>{const r=e.relu(t);return n([t]),r},{x:t},(e,t)=>{const[n]=t;return{x:()=>ar(e,n.step().toFloat())}},"Relu")}}),Lo=Oe({relu6_:function(e){const t=Ae(e,"x","relu6");return"bool"===t.dtype?t.toInt():ke.runKernelFunc((e,n)=>{const r=e.relu6(t);return n([t]),r},{x:t},(e,t)=>{const[n]=t,r=n.lessEqual(6).mul(n.step());return{x:()=>ar(e,r.toFloat())}},"Relu6")}}),Oo=Oe({selu_:function(e){const t=Ae(e,"x","selu");return ke.runKernelFunc((e,n)=>{const r=e.selu(t);return n([t]),r},{$x:t},(e,t)=>{const[n]=t;return{$x:()=>{const t=n.greater(Ve(0)),r=Ve(1.7580993408473768),s=Ve(1.0507009873554805),a=e.mul(s),o=e.mul(r).mul(n.toFloat().exp());return Da(t,a,o)}}})}});const Wo=Oe({softmax_:function(e,t=-1){const n=Ae(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);return ke.runKernelFunc((e,r)=>{const s=e.softmax(n,t);return r([s]),s},{logits:n},(e,n)=>{const[r]=n,s=e.mul(r);return{logits:()=>s.sub(s.sum([t],!0).mul(r))}},"Softmax",{dim:t},[],[!0])}}),Ko=Oe({logSoftmax_:function(e,t=-1){const n=Ae(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return St((e,n)=>{const r=e.max(t,!0),s=e.sub(r),a=s.toFloat().sub(s.exp().sum(t,!0).log());n([a]);return{value:a,gradFunc:(e,n)=>{const[r]=n,s=r.exp();return e.sub(e.sum(t,!0).mul(s))}}})(n)}});const Go=Oe({norm_:function(e,t="euclidean",n=null,r=!1){const s=function e(t,n,r=null){if(0===t.rank)return t.abs();if(1!==t.rank&&null===r)return e(t.reshape([-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return t.abs().sum(r);if(n===1/0)return t.abs().max(r);if(n===-1/0)return t.abs().min(r);if("euclidean"===n||2===n)return t.abs().pow(Ve(2,"int32")).sum(r).sqrt();throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return t.abs().sum(r[0]).max(r[1]-1);if(n===1/0)return t.abs().sum(r[1]).max(r[0]);if(n===-1/0)return t.abs().sum(r[1]).min(r[0]);if("fro"===n||"euclidean"===n)return t.square().sum(r).sqrt();throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=Ae(e,"x","norm"),t,n);let a=s.shape;if(r){const t=S(n,e.shape);a=Ce(s.shape,t)}return s.reshape(a)}});const Ho=Oe({basicLSTMCell_:function(e,t,n,r,s,a){const o=Ae(e,"forgetBias","basicLSTMCell"),i=Ae(t,"lstmKernel","basicLSTMCell"),u=Ae(n,"lstmBias","basicLSTMCell"),l=Ae(r,"data","basicLSTMCell"),c=Ae(s,"c","basicLSTMCell"),h=Ae(a,"h","basicLSTMCell"),d=l.concat(h,1).matMul(i).add(u),p=d.shape[0],f=d.shape[1]/4,m=[p,f],g=d.slice([0,0],m),b=d.slice([0,f],m),w=d.slice([0,2*f],m),y=d.slice([0,3*f],m),k=g.sigmoid().mul(b.tanh()).add(c.mul(o.add(w).sigmoid())),v=k.tanh().mul(y.sigmoid());return[k,v]}}),Uo=Oe({multiRNNCell_:function(e,t,n,r){const s=Ae(t,"data","multiRNNCell"),a=Me(n,"c","multiRNNCell"),o=Me(r,"h","multiRNNCell");let i=s;const u=[];for(let t=0;t<e.length;t++){const n=e[t](i,a[t],o[t]);u.push(n[0]),u.push(n[1]),i=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}});const Vo=Oe({movingAverage_:function(e,t,n,r,s=!0){const a=Ae(e,"v","movingAverage"),o=Ae(t,"x","movingAverage"),i=Ae(n,"decay","movingAverage");me(a,o),m(k(a.shape,o.shape),()=>"Shape mismatch in v and x");const u=Ve(1),l=u.sub(i);let c=o.sub(a).mul(l);if(s){m(null!=r,()=>"When using zeroDebias: true, step is required.");const e=Ae(r,"step","movingAverage");c=c.div(u.sub(ir(i,e)))}return a.add(c)}});const jo=Oe({stridedSlice_:function(e,t,n,r,s=0,a=0,o=0,i=0,u=0){if(null==r&&(r=new Array(t.length)),0!==o)throw new Error("ellipsis mask is not yet supported");let l=Ae(e,"x","stridedSlice");const c=Tr(i),h=l.shape.slice();c.forEach(e=>{t[e]=0,n[e]=1,h.splice(e,0,1)}),l=l.reshape(h);for(let e=0;e<l.rank;e++)t[e]=Cr(s,t,r,l.shape,e),n[e]=Rr(a,n,r,l.shape,e),r[e]=r[e]||1;const d=Tr(u);d.forEach(e=>{n[e]=t[e]+1,r[e]=1});const p=Br(t,n,r),f=p.filter((e,t)=>-1===d.indexOf(t));return r.every(e=>1===e)?Pr(l,t,p).reshape(f):ke.runKernelFunc(e=>e.stridedSlice(l,t,n,r),{$x:l}).reshape(f)}});const Jo=Oe({topk_:function(e,t=1,n=!0){const r=Ae(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got `+t);const[a,o]=ke.runKernelFunc(e=>e.topk(r,t,n),{$x:r});return{values:a,indices:o}}});const Yo=Oe({scatterND_:function(e,t,n){const r=Ae(e,"indices","scatterND","int32"),s=Ae(t,"updates","scatterND");return Gs(s,r,n),ke.runKernelFunc(e=>e.scatterND(r,s,n),{indices:r,updates:s},null,"ScatterNd",{shape:n})}});const Xo=Oe({fft_:function(e){m("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t=e.shape[e.shape.length-1],n=e.size/t,r=e.as2D(n,t);return ke.runKernelFunc(e=>e.fft(r),{input:e}).reshape(e.shape)}}),Zo=Oe({ifft_:function(e){m("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t=e.shape[e.shape.length-1],n=e.size/t,r=e.as2D(n,t);return ke.runKernelFunc(e=>e.ifft(r),{input:e}).reshape(e.shape)}}),Qo=Oe({rfft_:function(e,t){m("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map(e=>0),a=e.shape.map(e=>e);a[e.shape.length-1]=t,s=e.slice(r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,s=e.concat(nt(r),e.shape.length-1),n=t}else s=e;const a=s.zerosLike(),o=We(s,a).as2D(r,n),i=Xo(o),u=Math.floor(n/2)+1,l=Ke(i),c=Ge(i),h=l.split([u,n-u],l.shape.length-1),d=c.split([u,n-u],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,We(h[0],d[0]).reshape(p)}}),ei=Oe({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;if(t<=2){const r=e.as2D(n,t),s=Zo(r);return Ke(s)}{const r=[n,2*(t-1)],s=Ke(e).as2D(n,t),a=Ge(e).as2D(n,t),o=s.slice([0,1],[n,t-2]).reverse(1),i=a.slice([0,1],[n,t-2]).reverse(1).mul(Ve(-1)),u=s.concat(o,1),l=a.concat(i,1),c=We(u,l).as2D(r[0],r[1]),h=Zo(c);return Ke(h)}}});var ti=Object.freeze({__proto__:null,fft:Xo,ifft:Zo,rfft:Qo,irfft:ei});const ni=Oe({sparseToDense_:function(e,t,n,r=0){const s=Ae(e,"sparseIndices","sparseToDense","int32"),a=Ae(t,"sparseValues","sparseToDense"),o=Ae(r,"defaultValue","sparseToDense",a.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,o),ke.runKernelFunc(e=>e.sparseToDense(s,a,n,o),{$sparseIndices:s,$sparseValues:a,$defaultValue:o})}});const ri=Oe({gatherND_:function(e,t){const n=Ae(t,"indices","gatherND","int32"),r=Ae(e,"x","gatherND");return ke.runKernelFunc(e=>e.gatherND(r,n),{x:r,indices:n},null,"GatherNd")}});const si=Oe({dropout_:function(e,t,n,r){const s=Ae(e,"x","dropout");if(m("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),m(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof ae?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(k(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),o=1-t,i=ao(a,0,1,"float32",r).add(o).floor().div(o);return s.mul(i)}});function ai(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const o=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(o)}return je(s,"float32")}const oi=Oe({hannWindow_:function(e){return ai(e,.5,.5)}}),ii=Oe({hammingWindow_:function(e){return ai(e,.54,.46)}}),ui=Oe({frame_:function(e,t,n,r=!1,s=0){let a=0;const o=[];for(;a+t<=e.size;)o.push(Pr(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,i=ut([Pr(e,a,t-r),rt([r],s)]);o.push(i),a+=n}return 0===o.length?Je([],[0,t]):ut(o).as2D(o.length,t)}}),li=Oe({stft_:function(e,t,n,r,s=oi){var a;null==r&&(a=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const o=ui(e,t,n),i=ar(o,s(t)),u=[];for(let e=0;e<o.shape[0];e++)u.push(Qo(i.slice([e,0],[1,t]),r));return ut(u)}});var ci=Object.freeze({__proto__:null,hannWindow:oi,hammingWindow:ii,frame:ui,stft:li});const hi=async function(e,t,n=1){const r=Ae(e,"predictions","inTopK"),s=Ae(t,"targets","inTopK");m(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),m(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),g(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];m(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);const o=await r.data(),i=await s.data(),[u,l]=[o.length/a,a],c=I("bool",u);for(let e=0;e<u;e++){const t=e*l,r=o.subarray(t,t+l),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort((e,t)=>t.value-e.value),c[e]=0;for(let t=0;t<n;t++)if(s[t].index===i[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),He(c,s.shape,"bool")};var di;(di=e.Reduction||(e.Reduction={}))[di.NONE=0]="NONE",di[di.MEAN=1]="MEAN",di[di.SUM=2]="SUM",di[di.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const pi=Oe({absoluteDifference_:function(t,n,r,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const a=Ae(t,"labels","absoluteDifference"),o=Ae(n,"predictions","absoluteDifference");let i=null;null!=r&&(i=Ae(r,"weights","absoluteDifference")),g(a.shape,o.shape,"Error in absoluteDifference: ");const u=a.sub(o).abs();return fi(u,i,s)}}),fi=Oe({computeWeightedLoss_:function(t,n,r=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const s=Ae(t,"losses","computeWeightedLoss");let a=null;null!=n&&(a=Ae(n,"weights","computeWeightedLoss"));const o=null==a?s:s.mul(a);if(r===e.Reduction.NONE)return o;if(r===e.Reduction.SUM)return o.sum();if(r===e.Reduction.MEAN){if(null==a)return o.mean();{const e=s.size/a.size,t=o.sum().div(a.sum());return e>1?t.div(Ve(e)):t}}if(r===e.Reduction.SUM_BY_NONZERO_WEIGHTS){if(null==a)return o.sum().div(Ve(s.size));{const e=a.mul(tt(s.shape)).notEqual(Ve(0)).sum().toFloat();return o.sum().div(e)}}throw Error("Unknown reduction: "+r)}}),mi=Oe({cosineDistance_:function(t,n,r,s,a=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const o=Ae(t,"labels","cosineDistance"),i=Ae(n,"predictions","cosineDistance");let u=null;null!=s&&(u=Ae(s,"weights","cosineDistance")),g(o.shape,i.shape,"Error in cosineDistance: ");const l=Ve(1).sub(o.mul(i).sum(r,!0));return fi(l,u,a)}}),gi=Oe({hingeLoss_:function(t,n,r,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){let a=Ae(t,"labels","hingeLoss");const o=Ae(n,"predictions","hingeLoss");let i=null;null!=r&&(i=Ae(r,"weights","hingeLoss")),g(a.shape,o.shape,"Error in hingeLoss: ");const u=Ve(1);a=Ve(2).mul(a).sub(u);const l=u.sub(a.mul(o)).relu();return fi(l,i,s)}}),bi=Oe({huberLoss_:function(t,n,r,s=1,a=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const o=Ae(t,"labels","huberLoss"),i=Ae(n,"predictions","huberLoss");let u=null;null!=r&&(u=Ae(r,"weights","huberLoss")),g(o.shape,i.shape,"Error in huberLoss: ");const l=Ve(s),c=i.sub(o).abs(),h=tr(c,l),d=c.sub(h),p=Ve(.5).mul(h.square()).add(l.mul(d));return fi(p,u,a)}}),wi=Oe({logLoss_:function(t,n,r,s=1e-7,a=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const o=Ae(t,"labels","logLoss"),i=Ae(n,"predictions","logLoss");let u=null;null!=r&&(u=Ae(r,"weights","logLoss")),g(o.shape,i.shape,"Error in logLoss: ");const l=Ve(1),c=Ve(s),h=o.mul(i.add(c).log()).neg().sub(l.sub(o).mul(l.sub(i).add(c).log()));return fi(h,u,a)}}),yi=Oe({meanSquaredError_:function(t,n,r,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const a=Ae(t,"labels","meanSquaredError"),o=Ae(n,"predictions","meanSquaredError");let i=null;null!=r&&(i=Ae(r,"weights","meanSquaredError")),g(a.shape,o.shape,"Error in meanSquaredError: ");const u=a.squaredDifference(o);return fi(u,i,s)}}),ki=Oe({sigmoidCrossEntropy_:function(t,n,r,s=0,a=e.Reduction.SUM_BY_NONZERO_WEIGHTS){let o=Ae(t,"multiClassLabels","sigmoidCrossEntropy");const i=Ae(n,"logits","sigmoidCrossEntropy");let u=null;if(null!=r&&(u=Ae(r,"weights","sigmoidCrossEntropy")),g(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=Ve(s),t=Ve(1),n=Ve(.5);o=o.mul(t.sub(e)).add(n.mul(e))}const l=function(e,t){const n=Ae(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ae(t,"logits","sigmoidCrossEntropyWithLogits");g(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=r.relu(),a=r.mul(n),o=r.abs().neg().exp().log1p();return s.sub(a).add(o)}(o,i);return fi(l,u,a)}}),vi=Oe({softmaxCrossEntropy_:function(t,n,r,s=0,a=e.Reduction.SUM_BY_NONZERO_WEIGHTS){let o=Ae(t,"onehotLabels","softmaxCrossEntropy");const i=Ae(n,"logits","softmaxCrossEntropy");let u=null;if(null!=r&&(u=Ae(r,"weights","softmaxCrossEntropy")),g(o.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const e=Ve(s),t=Ve(1),n=Ve(o.shape[1]);o=o.mul(t.sub(e)).add(e.div(n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return St((e,t,r)=>{const s=t.logSumExp([n],!0),a=t.toFloat().sub(s);r([e,a]);return{value:a.mul(e).neg().sum([n]),gradFunc:(e,t)=>{const[r,s]=t,a=Ce(e.shape,[n]);return[e.reshape(a).mul(r.toFloat().sub(s.exp())),e.reshape(a).mul(s.exp().sub(r.toFloat()))]}}})(e,t)}(o,i);return fi(l,u,a)}});var xi=Object.freeze({__proto__:null,get Reduction(){return e.Reduction},absoluteDifference:pi,computeWeightedLoss:fi,cosineDistance:mi,hingeLoss:gi,huberLoss:bi,logLoss:wi,meanSquaredError:yi,sigmoidCrossEntropy:ki,softmaxCrossEntropy:vi});function Ei(e,t=!1){return ke.tidy(()=>{if(2!==e.shape.length)throw new Error(`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let s=Aa(n),a=e.clone();const o=Je([[1]],[1,1]);let i=o.clone();const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=i,l=s;[i,a,s]=ke.tidy(()=>{const t=a.slice([e,e],[n-e,1]),u=t.norm(),l=a.slice([e,e],[1,1]),c=Je([[-1]]).where(l.greater(0),Je([[1]])),h=l.sub(c.mul(u)),d=t.div(h);i=1===d.shape[0]?o.clone():o.concat(d.slice([1,0],[d.shape[0]-1,d.shape[1]]),0);const p=c.matMul(h).div(u).neg(),f=a.slice([e,0],[n-e,r]),m=p.mul(i),g=i.transpose();if(0===e)a=f.sub(m.matMul(g.matMul(f)));else{const t=f.sub(m.matMul(g.matMul(f)));a=a.slice([0,0],[e,r]).concat(t,0)}const b=m.transpose(),w=s.slice([0,e],[n,s.shape[1]-e]);if(0===e)s=w.sub(w.matMul(i).matMul(b));else{const t=w.sub(w.matMul(i).matMul(b));s=s.slice([0,0],[n,e]).concat(t,1)}return[i,a,s]}),dn([t,u,l])}return!t&&n>r&&(s=s.slice([0,0],[n,r]),a=a.slice([0,0],[r,r])),[s,a]})}const Si=Oe({bandPart_:function(e,t,n){if(t%1!=0)throw new Error(`bandPart(): numLower must be an integer, got ${t}.`);if(n%1!=0)throw new Error(`bandPart(): numUpper must be an integer, got ${n}.`);const r=Ae(e,"a","bandPart");if(r.rank<2)throw new Error(`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[a,o]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);const i=at(0,a,1,"int32").reshape([-1,1]),u=at(0,o,1,"int32"),l=fr(i,u),c=va(l.lessEqual(Ve(+t,"int32")),l.greaterEqual(Ve(-n,"int32"))),h=nt([a,o],r.dtype);return gt(bt(r.reshape([-1,a,o])).map(e=>Da(c,e,h))).reshape(s)}}),Di=Oe({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,m(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)m(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Pt(e,e.shape[0],0).map(e=>mt(e,[0]));m(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ke.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Ct(n[r].mul(e)).mul(n[r]);e=e.sub(t)}return e.div(Go(e,"euclidean"))}));return t?gt(n,0):n}}),Ii=Oe({qr_:function(e,t=!1){if(e.rank<2)throw new Error("qr() requires input tensor to have a rank >= 2, but got rank "+e.rank);if(2===e.rank)return Ei(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=bt(e.reshape([n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach(e=>{const[n,r]=Ei(e,t);s.push(n),a.push(r)}),[gt(s,0).reshape(e.shape),gt(a,0).reshape(e.shape)]}}});var $i=Object.freeze({__proto__:null,bandPart:Si,gramSchmidt:Di,qr:Ii});function Ni(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,o=!1;for(;r<s;){a=r+(s-r>>>1);const i=n(t,e[a]);i>0?r=a+1:(s=a,o=!i)}return o?r:-r-1}(e,t,n||Fi)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Fi(e,t){return e>t?1:e<t?-1:0}function Ai(e,t,n,r,s){const a=_i(e,t,n,r,s,0);return a.selectedScores.dispose(),a.numValidOutputs.dispose(),a.selectedIndices}function Mi(e,t,n,r,s,a){const o=_i(e,t,n,r,s,a,!0);return o.numValidOutputs.dispose(),{selectedIndices:o.selectedIndices,selectedScores:o.selectedScores}}function _i(e,t,n,r,s,a,o=!1,i=!1){const u=Array.from(t).map((e,t)=>({score:e,boxIndex:t,suppressBeginIndex:0})).filter(e=>e.score>s).sort(Ci),l=a>0?-.5/a:0,c=[],h=[];for(;c.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:o}=t;if(n<s)break;let i=!1;for(let n=c.length-1;n>=o;--n){const o=Ti(e,a,c[n]);if(o>=r){i=!0;break}if(t.score=t.score*Bi(r,l,o),t.score<=s)break}t.suppressBeginIndex=c.length,i||(t.score===n?(c.push(a),h.push(t.score)):t.score>s&&Ni(u,t,Ci))}const d=c.length;return i&&(c.fill(0,d),h.fill(0,d)),{selectedIndices:je(c,"int32"),selectedScores:je(h,"float32"),numValidOutputs:Ve(d,"int32")}}function Ti(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(i-a)*(u-o),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(o,c),b=Math.min(i,h),w=Math.min(u,d),y=Math.max(b-m,0)*Math.max(w-g,0);return y/(p+f-y)}function Bi(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Ci(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}function Ri(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const o=e.shape[0];return n=Math.min(n,o),m(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),m(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),m(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),m(1===t.rank,()=>"scores must be a 1D tensor"),m(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was `+t.shape[0]),m(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const qi=Oe({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ae(e,"boxes","nonMaxSuppression"),o=Ae(t,"scores","nonMaxSuppression"),i=Ri(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return ke.runKernelFunc(e=>e.nonMaxSuppression(a,o,n,r,s),{boxes:a,scores:o},null,"NonMaxSuppressionV3",u)}});const Pi=Oe({resizeBilinear_:function(e,t,n=!1){const r=Ae(e,"images","resizeBilinear");m(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),m(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+".");let s=r,a=!1;3===r.rank&&(a=!0,s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));const[o,i]=t,u=ke.runKernelFunc((e,t)=>(t([s]),e.resizeBilinear(s,o,i,n)),{x:s},(e,t)=>({x:()=>ke.runKernelFunc(r=>r.resizeBilinearBackprop(e,t[0],n),{})}),"ResizeBilinear",{alignCorners:n,newHeight:o,newWidth:i});return a?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),zi=Oe({resizeNearestNeighbor_:function(e,t,n=!1){const r=Ae(e,"images","resizeNearestNeighbor");m(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),m(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),m("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype");let s=r,a=!1;3===r.rank&&(a=!0,s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));const[o,i]=t,u=ke.runKernelFunc((e,t)=>(t([s]),e.resizeNearestNeighbor(s,o,i,n)),{batchImages:s},(e,t)=>({batchImages:()=>ke.runKernelFunc(r=>r.resizeNearestNeighborBackprop(e,t[0],n),{})}));return a?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Li=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ae(e,"boxes","nonMaxSuppressionAsync"),o=Ae(t,"scores","nonMaxSuppressionAsync"),i=Ri(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u=await Promise.all([a.data(),o.data()]),l=Ai(u[0],u[1],n,r,s);return a!==e&&a.dispose(),o!==t&&o.dispose(),l},Oi=Oe({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=Ae(e,"boxes","nonMaxSuppression"),i=Ae(t,"scores","nonMaxSuppression"),u=Ri(o,i,n,r,s,a),l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},c=ke.runKernel("NonMaxSuppressionV5",{boxes:o,scores:i},l);return{selectedIndices:c[0],selectedScores:c[1]}}}),Wi=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=Ae(e,"boxes","nonMaxSuppressionAsync"),i=Ae(t,"scores","nonMaxSuppressionAsync"),u=Ri(o,i,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),c=Mi(l[0],l[1],n,r,s,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),c},Ki=Oe({cropAndResize_:function(e,t,n,r,s,a){const o=Ae(e,"image","cropAndResize"),i=Ae(t,"boxes","cropAndResize","float32"),u=Ae(n,"boxInd","cropAndResize","int32");s=s||"bilinear",a=a||0;const l=i.shape[0];return m(4===o.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),m(2===i.rank&&4===i.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),m(1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),m(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),m(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),m("bilinear"===s||"nearest"===s,()=>"method must be bilinear or nearest, but was "+s),ke.runKernelFunc((e,t)=>e.cropAndResize(o,i,u,r,s,a),{images:o,boxes:i,boxInd:u},null,"CropAndResize",{method:s,extrapolationValue:a,cropSize:r})}});var Gi=Object.freeze({__proto__:null,resizeBilinear:Pi,resizeNearestNeighbor:zi,nonMaxSuppressionAsync:Li,nonMaxSuppressionWithScore:Oi,nonMaxSuppressionWithScoreAsync:Wi,cropAndResize:Ki,nonMaxSuppression:qi});const Hi=(e,t)=>!(e>0)||"linear"===t,Ui=(e,t,n)=>{if(null==n||"linear"===n)return e;if("relu"===n)return e.mul(t.step());throw new Error(`Gradient for activation ${n} has not been implemented yet.`)},Vi=(e,t)=>{let n=t;const r=Se(e.shape,t.shape);return r.length>0&&(n=n.sum(r)),n.reshape(e.shape)},ji=(e,t,n)=>{if("linear"===t)return e;if("relu"===t)return zo(e);if("elu"===t)return Ro(e);if("relu6"===t)return Lo(e);if("prelu"===t)return Po(e,n);throw new Error(`Unknown fused activation ${t}.`)};const Ji=Oe({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:o}){if(!1===Hi(ke.state.gradientDepth,a)){let i=yt(e,t,n,r);return null!=s&&(i=fn(i,s)),ji(i,a,o)}let i=Ae(e,"a","fused matMul"),u=Ae(t,"b","fused matMul");[i,u]=fe(i,u);const l=n?i.shape[i.rank-2]:i.shape[i.rank-1],c=r?u.shape[u.rank-1]:u.shape[u.rank-2],h=n?i.shape[i.rank-1]:i.shape[i.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],p=i.shape.slice(0,-2),f=u.shape.slice(0,-2),g=y(p),b=y(f);m(i.rank>=2&&u.rank>=2&&i.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${i.rank} and ${u.rank}.`),m(k(p,f),()=>`Error in fused matMul: outer dimensions (${p}) and (${f}) of Tensors with shapes ${i.shape} and `+u.shape+" must match."),m(l===c,()=>`Error in fused matMul: inner shapes (${l}) and (${c}) of Tensors with shapes ${i.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);const w=i.shape.slice(0,-2).concat([h,d]),v=n?i.as3D(g,l,h):i.as3D(g,h,l),x=r?u.as3D(b,d,c):u.as3D(b,c,d);let E,S;null!=s&&(E=Ae(s,"bias","fused matMul"),[E]=fe(E,i),De(w,E.shape)),null!=o&&(S=Ae(o,"prelu weights","fused matMul"));const D={a:v,b:x};null!=s&&(D.bias=E),null!=o&&(D.preluActivationWeights=S);const I=[v,x];return ke.runKernelFunc((e,t)=>{const s=e.fusedBatchMatMul({a:v,b:x,transposeA:n,transposeB:r,bias:E,activation:a,preluActivationWeights:S});return t([v,x,s]),s},D,(e,t)=>{const[o,i,u]=t,l=Ui(e,u,a);let c={};return null!=s&&(c={bias:()=>Vi(E,l)}),n||r?!n&&r?Object.assign({a:()=>l.matMul(i,!1,!1),b:()=>l.matMul(o,!0,!1)},c):n&&!r?Object.assign({a:()=>i.matMul(l,!1,!0),b:()=>o.matMul(l,!1,!1)},c):Object.assign({a:()=>i.matMul(l,!0,!0),b:()=>l.matMul(o,!0,!0)},c):Object.assign({a:()=>l.matMul(i,!1,!0),b:()=>o.matMul(l,!0,!1)},c)},"_FusedMatMul",{transposeA:n,transposeB:r,activation:a},I,[!0]).reshape(w)}}),Yi=Oe({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l}){if(u=u||"linear",!1===Hi(ke.state.gradientDepth,u)){let c=tn(e,t,n,r,s,a,o);return null!=i&&(c=fn(c,i)),ji(c,u,l)}const c=Ae(e,"x","conv2d"),h=Ae(t,"filter","conv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=c.as4D(1,c.shape[0],c.shape[1],c.shape[2])),m(4===d.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+d.rank+"."),m(4===h.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+h.rank+"."),null!=o&&m(v(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`),m(d.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${h.shape[2]}.`),m(Yt(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),m("NHWC"===s,()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`);const f=Wt(d.shape,h.shape,n,a,r,o);let g,b;null!=i&&(g=Ae(i,"bias","fused conv2d"),[g]=fe(g,c),De(f.outShape,g.shape)),null!=l&&(b=Ae(l,"prelu weights","fused conv2d"));const w={x:d,filter:h};null!=i&&(w.bias=g),null!=l&&(w.preluActivationWeights=b);const y=[h,d],k=ke.runKernelFunc((e,t)=>{const n=e.fusedConv2d({input:d,filter:h,convInfo:f,bias:g,activation:u,preluActivationWeights:b});return t([h,d,n]),n},w,(e,t)=>{const[s,o,l]=t,c=Ui(e,l,u);m(Jt(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let h={};return null!=i&&(h={bias:()=>Vi(g,c)}),Object.assign({x:()=>Qt(o.shape,c,s,n,r),filter:()=>Zt(o,c,s.shape,n,r)},h)},"FusedConv2D",{convInfo:f,activation:u},y,[!0]);return p?k.as3D(k.shape[1],k.shape[2],k.shape[3]):k}}),Xi=Oe({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l}){if(!1===Hi(ke.state.gradientDepth,u)){let c=wa(e,t,n,r,s,a,o);return null!=i&&(c=fn(c,i)),ji(c,u,l)}const c=Ae(e,"x","depthwiseConv2d"),h=Ae(t,"filter","depthwiseConv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=c.as4D(1,c.shape[0],c.shape[1],c.shape[2])),m(4===d.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),m(4===h.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),m(d.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),null==a&&(a=[1,1]),m(Yt(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),null!=o&&m(v(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${r}.`);const f=Wt(d.shape,h.shape,n,a,r,o,!0);let g,b;null!=i&&(g=Ae(i,"bias","fused conv2d"),[g]=fe(g,c),De(f.outShape,g.shape)),null!=l&&(b=Ae(l,"prelu weights","fused depthwiseConv2d"));const w={x:d,filter:h};null!=i&&(w.bias=g),null!=l&&(w.preluActivationWeights=b);const y=[h,d],k=ke.runKernelFunc((e,t)=>{const n=e.fusedDepthwiseConv2D({input:d,filter:h,convInfo:f,bias:g,activation:u,preluActivationWeights:b});return t([h,d,n]),n},w,(e,t)=>{m(Jt(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[n,r,s]=t,o=Ui(e,s,u);let l={};return null!=i&&(l={bias:()=>Vi(g,o)}),Object.assign({x:()=>un(r.shape,o,n,f),filter:()=>on(r,o,n.shape,f)},l)},"FusedDepthwiseConv2D",{convInfo:f,activation:u},y,[!0]);return p?k.as3D(k.shape[1],k.shape[2],k.shape[3]):k}});var Zi=Object.freeze({__proto__:null,matMul:Ji,conv2d:Yi,depthwiseConv2d:Xi}),Qi=Object.freeze({__proto__:null,image:Gi,linalg:$i,losses:xi,spectral:ti,fused:Zi,signal:ci,add:fn,addN:ta,batchToSpaceND:Dr,batchNorm:ra,batchNorm2d:sa,batchNorm3d:aa,batchNorm4d:oa,broadcastTo:ua,clone:ia,concat:ut,concat1d:la,concat2d:ca,concat3d:ha,concat4d:da,conv1d:pa,conv2d:tn,conv2dTranspose:fa,conv3d:ma,conv3dTranspose:ga,depthToSpace:ba,depthwiseConv2d:wa,diag:ya,div:hr,divNoNan:$a,dot:Na,equal:Fa,eye:Aa,greater:Ma,greaterEqual:_a,less:Ta,lessEqual:Ba,localResponseNormalization:Ca,matMul:yt,max:Ra,multinomial:qa,notEqual:Pa,oneHot:Cs,outerProduct:za,pad:Mr,pad1d:La,pad2d:Oa,pad3d:Wa,pad4d:Ka,rand:Ga,randomGamma:ro,randomNormal:so,randomUniform:ao,separableConv2d:oo,spaceToBatchND:vt,split:Pt,square:dr,squaredDifference:io,sub:fr,tile:mr,truncatedNormal:uo,op:Oe,booleanMaskAsync:go,complex:We,real:Ke,imag:Ge,reverse:bo,reverse1d:wo,reverse2d:yo,reverse3d:ko,reverse4d:vo,maxPool:So,avgPool:Do,pool:Io,maxPool3d:$o,avgPool3d:No,maxPoolWithArgmax:Fo,slice:Pr,slice1d:zr,slice2d:Lr,slice3d:Or,slice4d:Wr,abs:mn,acos:gn,acosh:bn,asin:wn,asinh:yn,atan:kn,atanh:vn,ceil:xn,clipByValue:En,cos:Sn,cosh:Dn,erf:In,exp:$n,expm1:Nn,floor:Fn,log:An,log1p:Mn,logSigmoid:_n,neg:Tn,reciprocal:Bn,round:Cn,rsqrt:Rn,sigmoid:qn,sign:Pn,isNaN:zn,isInf:Ln,isFinite:On,sin:Wn,sinh:Kn,softplus:Gn,sqrt:Hn,step:Un,tan:Vn,tanh:jn,all:$t,any:Nt,argMax:Ft,argMin:At,logSumExp:Mt,mean:_t,min:Tt,moments:Bt,sum:Ct,prod:Rt,equalStrict:Ao,greaterEqualStrict:Mo,greaterStrict:_o,lessEqualStrict:To,lessStrict:Bo,notEqualStrict:Co,addStrict:Jn,atan2:Yn,divStrict:Xn,floorDiv:Zn,maximum:Qn,maximumStrict:er,minimum:tr,minimumStrict:nr,mod:rr,modStrict:sr,mul:ar,mulStrict:or,pow:ir,powStrict:ur,squaredDifferenceStrict:lr,subStrict:cr,elu:Ro,leakyRelu:qo,prelu:Po,relu:zo,relu6:Lo,selu:Oo,logicalAnd:va,logicalNot:xa,logicalOr:Ea,logicalXor:Sa,where:Da,whereAsync:Ia,buffer:lt,print:ct,cast:ht,cumsum:dt,expandDims:pt,reshape:ft,squeeze:mt,stack:gt,unstack:bt,setdiff1dAsync:wt,fill:rt,linspace:st,ones:tt,range:at,scalar:Ve,tensor:He,tensor1d:je,tensor2d:Je,tensor3d:Ye,tensor4d:Xe,tensor5d:Ze,tensor6d:Qe,variable:et,zeros:nt,onesLike:ot,zerosLike:it,transpose:vr,softmax:Wo,logSoftmax:Ko,norm:Go,gather:fo,unsortedSegmentSum:mo,basicLSTMCell:Ho,multiRNNCell:Uo,movingAverage:Vo,stridedSlice:jo,topk:Jo,scatterND:Yo,fft:Xo,ifft:Zo,rfft:Qo,irfft:ei,sparseToDense:ni,gatherND:ri,dropout:si,hannWindow:oi,hammingWindow:ii,frame:ui,stft:li,inTopKAsync:hi});class eu extends Vs{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:s[e.name]}));this.applyGradients(e)}else this.applyGradients(s);return dn(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Et(e,t)}dispose(){null!=this.iterations_&&dn(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ve(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(eu,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class tu extends eu{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ke.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ke.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:hn(()=>it(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:hn(()=>it(r).variable(!1))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;hn(()=>{const e=a.mul(this.rho).add(s.square().mul(1-this.rho)),t=o.add(this.epsilon).sqrt().div(a.add(this.epsilon).sqrt()).mul(s),n=o.mul(this.rho).add(t.square().mul(1-this.rho));a.assign(e),o.assign(n);const i=t.mul(-this.learningRate).add(r);r.assign(i)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(dn(this.accumulatedGrads.map(e=>e.variable)),dn(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}tu.className="Adadelta",Js(tu);class nu extends eu{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ke.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:hn(()=>rt(r.shape,this.initialAccumulatorValue).variable(e))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;hn(()=>{const e=a.add(s.square());a.assign(e);const t=s.div(e.add(ke.backend.epsilon()).sqrt()).mul(-this.learningRate).add(r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&dn(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}nu.className="Adagrad",Js(nu);class ru extends eu{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],hn(()=>{this.accBeta1=Ve(t).variable(),this.accBeta2=Ve(n).variable()}),null==r&&(this.epsilon=ke.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);hn(()=>{const n=fr(1,this.accBeta1),r=fr(1,this.accBeta2);t.forEach((t,s)=>{const a=ke.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:t+"/m",variable:hn(()=>it(a).variable(!1))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:t+"/v",variable:hn(()=>it(a).variable(!1))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=i.mul(this.beta1).add(o.mul(1-this.beta1)),c=u.mul(this.beta2).add(o.square().mul(1-this.beta2)),h=l.div(n),d=c.div(r);i.assign(l),u.assign(c);const p=h.div(d.sqrt().add(this.epsilon)).mul(-this.learningRate).add(a);a.assign(p)}),this.accBeta1.assign(this.accBeta1.mul(this.beta1)),this.accBeta2.assign(this.accBeta2.mul(this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&dn(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&dn(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),hn(()=>{this.accBeta1.assign(ir(this.beta1,this.iterations_+1)),this.accBeta2.assign(ir(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}ru.className="Adam",Js(ru);class su extends eu{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],hn(()=>{this.iteration=Ve(0).variable(),this.accBeta1=Ve(t).variable()}),null==r&&(this.epsilon=ke.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);hn(()=>{const n=fr(1,this.accBeta1),r=hr(-this.learningRate,this.iteration.mul(this.decay).add(1));t.forEach((t,s)=>{const a=ke.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:t+"/m",variable:it(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:t+"/v",variable:it(a).variable(!1)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=i.mul(this.beta1).add(o.mul(1-this.beta1)),c=u.mul(this.beta2),h=o.abs(),d=c.maximum(h);i.assign(l),u.assign(d);const p=r.div(n).mul(l.div(d.add(this.epsilon))).add(a);a.assign(p)}),this.iteration.assign(this.iteration.add(1)),this.accBeta1.assign(this.accBeta1.mul(this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&dn(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&dn(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}su.className="Adamax",Js(su);class au extends eu{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=ke.registeredVariables[t];hn(()=>{const e=this.c.mul(r).add(s);s.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=pn(Ve(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}au.className="SGD",Js(au);class ou extends au{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ve(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ke.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:hn(()=>it(r).variable(e))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&hn(()=>{let e;const t=this.m.mul(s).add(a);e=this.useNesterov?this.c.mul(a.add(t.mul(this.m))).add(r):this.c.mul(t).add(r),s.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&dn(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}ou.className="Momentum",Js(ou);class iu extends eu{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=ke.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ke.registeredVariables[t];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:hn(()=>it(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:hn(()=>it(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:hn(()=>it(r).variable(!1))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;hn(()=>{const e=a.mul(this.decay).add(s.square().mul(1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,i=t.mul(this.decay).add(s.mul(1-this.decay)),u=o.mul(this.momentum).add(s.mul(this.learningRate).div(e.sub(i.square().add(this.epsilon)).sqrt()));a.assign(e),t.assign(i),o.assign(u);const l=r.sub(u);r.assign(l)}else{const e=a.mul(this.decay).add(s.square().mul(1-this.decay)),t=o.mul(this.momentum).add(s.mul(this.learningRate).div(e.add(this.epsilon).sqrt()));a.assign(e),o.assign(t);const n=r.sub(t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&dn(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&dn(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&dn(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}iu.className="RMSProp",Js(iu);class uu{static sgd(e){return new au(e)}static momentum(e,t,n=!1){return new ou(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new iu(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new ru(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new tu(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new su(e,t,n,r,s)}static adagrad(e,t=.1){return new nu(e,t)}}const lu={sgd:uu.sgd,momentum:uu.momentum,adadelta:uu.adadelta,adagrad:uu.adagrad,rmsprop:uu.rmsprop,adamax:uu.adamax,adam:uu.adam},cu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();var hu=Object.freeze({__proto__:null,segment_util:co,castTensor:function(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=nt(e.shape),r=e.toFloat(),s=n.complex(r,t);return t.dispose(),r.dispose(),s}if(!A(e.dtype,t))return ke.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const r=n.real(e),s=r.cast(t);return r.dispose(),s}if("int32"===t)return n.int(e);if("bool"===t){const t=Ve(0,e.dtype),r=n.notEqual(e,t);return t.dispose(),r}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)},reshapeTensor:function(e,t){return ke.makeTensorFromDataId(e.dataId,t,e.dtype)},linspaceImpl:function(e,t,n){const r=(t-e)/(n-1),s=G(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return je(s,"float32")},nonMaxSuppressionV3:Ai,nonMaxSuppressionV5:Mi,upcastType:pe,axesAreInnerMostDims:_e,combineLocations:Te,computeOutAndReduceShapes:Be,expandShapeToKeepDim:Ce,assertAxesAreInnerMostDims:function(e,t,n){m(_e(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)},getAxesPermutation:Re,getUndoAxesPermutation:qe,getInnerMostAxes:Pe,getBroadcastDims:function(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,o=e[a]||1;(t[t.length-1-s]||1)>1&&1===o&&r.unshift(a)}return r},getReductionAxes:Se,assertAndGetBroadcastShape:De,assertParamsConsistent:ze,computeOutShape:Le,computePool2DInfo:Lt,computePool3DInfo:Ot,computeConv2DInfo:Wt,computeConv3DInfo:Kt,computeDefaultPad:Gt,tupleValuesAreOne:Jt,eitherStridesOrDilationsAreOne:Yt,convertConv2DDataFormat:Xt,PARALLELIZE_THRESHOLD:30,computeOptimalWindowSize:function(e){return e<=30?e:z(e,Math.floor(Math.sqrt(e)))},getReshaped:function(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s},getPermuted:function(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r},getReshapedPermuted:function(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s},getSliceBeginCoords:function(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n},getSliceSize:function(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r},prepareAndValidate:Os,validateUpdateShape:Ks,validateInput:Gs,calculateShapes:Hs,SELU_SCALEALPHA:1.7580993408473768,SELU_SCALE:1.0507009873554805,shouldFuse:Hi,ERF_P:.3275911,ERF_A1:.254829592,ERF_A2:-.284496736,ERF_A3:1.421413741,ERF_A4:-1.453152027,ERF_A5:1.061405429,warn:function(...e){n().getBool("IS_TEST")||console.warn(...e)},log:function(...e){n().getBool("IS_TEST")||console.log(...e)},mergeRealAndImagArrays:function(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n},splitRealAndImagArrays:function(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}},complexWithEvenIndex:function(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}},complexWithOddIndex:function(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}},getComplexWithIndex:function(e,t){return{real:e[2*t],imag:e[2*t+1]}},assignToTypedArray:function(e,t,n,r){e[2*r]=t,e[2*r+1]=n},exponents:function(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}},exponent:function(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}});var du=Object.freeze({__proto__:null,nonMaxSuppressionV3:Ai,nonMaxSuppressionV5:Mi,split:function(e,t,n){const r=new Array(e.rank).fill(0),s=e.shape.slice();return t.map(t=>{const a=[...s];a[n]=t;const o=e.slice(r,a);return r[n]+=t,o})},tile:function(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=lt(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r.toTensor()},topkImpl:function(e,t,n,r,s){const a=t[t.length-1],[o,i]=[e.length/a,a],u=I(n,o*r),l=I("int32",o*r);for(let t=0;t<o;t++){const n=t*i,s=e.subarray(n,n+i),a=[];for(let e=0;e<s.length;e++)a.push({value:s[e],index:e});a.sort((e,t)=>t.value-e.value);const o=t*r,c=u.subarray(o,o+r),h=l.subarray(o,o+r);for(let e=0;e<r;e++)c[e]=a[e].value,h[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[He(u,c,n),He(l,c,"int32")]},whereImpl:ka});function pu(e){throw new Error(`'${e}' not yet implemented or not found in the registry. Did you forget to import the kernel?`)}ae.prototype.add=function(e){return this.throwIfDisposed(),fn(this,e)},ae.prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),ra(this,e,t,n,r,s)},ae.prototype.broadcastTo=function(e){return this.throwIfDisposed(),ua(this,e)},ae.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Dr(this,e,t)},ae.prototype.max=function(e,t){return this.throwIfDisposed(),Ra(this,e,t)},ae.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ae&&(e=[e]),ut([this,...e],t)},ae.prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),pa(this,e,t,n,r,s,a)},ae.prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),tn(this,e,t,n,r,s,a)},ae.prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),fa(this,e,t,n,r,s)},ae.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),ba(this,e,t)},ae.prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),wa(this,e,t,n,r,s,a)},ae.prototype.depthwiseConv2D=function(e,t,n,r,s,a){return cn("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),wa(this,e,t,n,r,s,a)},ae.prototype.div=function(e){return this.throwIfDisposed(),hr(this,e)},ae.prototype.divNoNan=function(e){return this.throwIfDisposed(),$a(this,e)},ae.prototype.dot=function(e){return this.throwIfDisposed(),Na(this,e)},ae.prototype.equal=function(e){return this.throwIfDisposed(),Fa(this,e)},ae.prototype.greater=function(e){return this.throwIfDisposed(),Ma(this,e)},ae.prototype.greaterEqual=function(e){return this.throwIfDisposed(),_a(this,e)},ae.prototype.less=function(e){return this.throwIfDisposed(),Ta(this,e)},ae.prototype.lessEqual=function(e){return this.throwIfDisposed(),Ba(this,e)},ae.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Ca(this,e,t,n,r)},ae.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),yt(this,e,t,n)},ae.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Cs(this,e,t,n)},ae.prototype.notEqual=function(e){return this.throwIfDisposed(),Pa(this,e)},ae.prototype.pad=function(e,t){return this.throwIfDisposed(),Mr(this,e,t)},ae.prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),oo(this,e,t,n,r,s,a)},ae.prototype.split=function(e,t){return this.throwIfDisposed(),Pt(this,e,t)},ae.prototype.squaredDifference=function(e){return this.throwIfDisposed(),io(this,e)},ae.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),vt(this,e,t)},ae.prototype.sub=function(e){return this.throwIfDisposed(),fr(this,e)},ae.prototype.tile=function(e){return this.throwIfDisposed(),mr(this,e)},ae.prototype.transpose=function(e){return this.throwIfDisposed(),vr(this,e)},se=Qi,e.AdadeltaOptimizer=tu,e.AdagradOptimizer=nu,e.AdamOptimizer=ru,e.AdamaxOptimizer=su,e.Add="Add",e.AddN="AddN",e.BatchMatMul="BatchMatMul",e.BatchToSpaceND="BatchToSpaceND",e.BroadcastTo="BroadcastTo",e.Concat="Concat",e.Conv2D="Conv2D",e.Conv2DBackpropFilter="Conv2DBackpropFilter",e.Conv2DBackpropInput="Conv2DBackpropInput",e.Conv3D="Conv3D",e.Conv3DBackpropFilterV2="Conv3DBackpropFilterV2",e.Conv3DBackpropInputV2="Conv3DBackpropInputV2",e.DataStorage=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},e.DepthToSpace="DepthToSpace",e.DepthwiseConv2dNative="DepthwiseConv2dNative",e.DepthwiseConv2dNativeBackpropFilter="DepthwiseConv2dNativeBackpropFilter",e.DepthwiseConv2dNativeBackpropInput="DepthwiseConv2dNativeBackpropInput",e.Diag="Diag",e.Div="Div",e.Environment=t,e.Equal="Equal",e.FromPixels="FromPixels",e.FusedBatchNorm="FusedBatchNorm",e.Greater="Greater",e.GreaterEqual="GreaterEqual",e.Identity="Identity",e.KernelBackend=class{time(e){return pu("time")}read(e){return pu("read")}readSync(e){return pu("readSync")}numDataIds(){return pu("numDataIds")}disposeData(e){return pu("disposeData")}write(e,t,n){return pu("write")}move(e,t,n,r){return pu("move")}memory(){return pu("memory")}floatPrecision(){return pu("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return pu("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:o}){return pu("fusedBatchMatMul")}slice(e,t,n){return pu("slice")}stridedSlice(e,t,n,r){return pu("stridedSlice")}unstack(e,t){return pu("unstack")}reverse(e,t){return pu("reverse")}concat(e,t){return pu("concat")}neg(e){return pu("neg")}add(e,t){return pu("add")}addN(e){return pu("addN")}subtract(e,t){return pu("subtract")}multiply(e,t){return pu("multiply")}realDivide(e,t){return pu("realDivide")}floorDiv(e,t){return pu("floorDiv")}sum(e,t){return pu("sum")}prod(e,t){return pu("prod")}unsortedSegmentSum(e,t,n){return pu("unsortedSegmentSum")}argMin(e,t){return pu("argMin")}argMax(e,t){return pu("argMax")}equal(e,t){return pu("equal")}notEqual(e,t){return pu("notEqual")}less(e,t){return pu("less")}lessEqual(e,t){return pu("lessEqual")}greater(e,t){return pu("greater")}greaterEqual(e,t){return pu("greaterEqual")}logicalNot(e){return pu("logicalNot")}logicalAnd(e,t){return pu("logicalAnd")}logicalOr(e,t){return pu("logicalOr")}where(e){return pu("where")}select(e,t,n){return pu("select")}topk(e,t,n){return pu("topk")}min(e,t){return pu("min")}minimum(e,t){return pu("minimum")}mod(e,t){return pu("mod")}max(e,t){return pu("max")}maximum(e,t){return pu("maximum")}all(e,t){return pu("all")}any(e,t){return pu("any")}squaredDifference(e,t){return pu("squaredDifference")}ceil(e){return pu("ceil")}floor(e){return pu("floor")}round(e){return pu("round")}sign(e){return pu("sign")}isNaN(e){return pu("isNaN")}isInf(e){return pu("isInf")}isFinite(e){return pu("isFinite")}pow(e,t){return pu("pow")}exp(e){return pu("exp")}expm1(e){return pu("expm1")}softmax(e,t){return pu("softmax")}log(e){return pu("log")}log1p(e){return pu("log1p")}sqrt(e){return pu("sqrt")}rsqrt(e){return pu("rsqrt")}square(e){return pu("square")}reciprocal(e){return pu("reciprocal")}relu(e){return pu("relu")}relu6(e){return pu("relu6")}prelu(e,t){return pu("prelu")}elu(e){return pu("elu")}eluDer(e,t){return pu("eluDer")}selu(e){return pu("selu")}int(e){return pu("int")}clip(e,t,n){return pu("clip")}abs(e){return pu("abs")}complexAbs(e){return pu("complexAbs")}sigmoid(e){return pu("sigmoid")}softplus(e){return pu("softplus")}sin(e){return pu("sin")}cos(e){return pu("cos")}tan(e){return pu("tan")}asin(e){return pu("asin")}acos(e){return pu("acos")}atan(e){return pu("atan")}atan2(e,t){return pu("atan2")}sinh(e){return pu("sinh")}cosh(e){return pu("cosh")}tanh(e){return pu("tanh")}asinh(e){return pu("asinh")}acosh(e){return pu("acosh")}atanh(e){return pu("atanh")}erf(e){return pu("erf")}step(e,t){return pu("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return pu("fusedConv2d")}conv2d(e,t,n){return pu("conv2d")}conv2dDerInput(e,t,n){return pu("conv2dDerInput")}conv2dDerFilter(e,t,n){return pu("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return pu("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return pu("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return pu("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return pu("depthwiseConv2DDerFilter")}conv3d(e,t,n){return pu("conv3d")}conv3dDerInput(e,t,n){return pu("conv3dDerInput")}conv3dDerFilter(e,t,n){return pu("conv3dDerFilter")}maxPool(e,t){return pu("maxPool")}maxPoolBackprop(e,t,n,r){return pu("maxPoolBackprop")}avgPool(e,t){return pu("avgPool")}avgPoolBackprop(e,t,n){return pu("avgPoolBackprop")}avgPool3d(e,t){return pu("avgPool3d")}avgPool3dBackprop(e,t,n){return pu("avgPool3dBackprop")}maxPool3d(e,t){return pu("maxPool3d")}maxPool3dBackprop(e,t,n,r){return pu("maxPool3dBackprop")}reshape(e,t){return pu("reshape")}cast(e,t){return pu("cast")}tile(e,t){return pu("tile")}pad(e,t,n){return pu("pad")}transpose(e,t){return pu("transpose")}gather(e,t,n){return pu("gather")}gatherND(e,t){return pu("gatherND")}scatterND(e,t,n){return pu("scatterND")}batchToSpaceND(e,t,n){return pu("batchToSpaceND")}spaceToBatchND(e,t,n){return pu("spaceToBatchND")}resizeBilinear(e,t,n,r){return pu("resizeBilinear")}resizeBilinearBackprop(e,t,n){return pu("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r){return pu("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return pu("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,s,a){return pu("batchNorm")}localResponseNormalization4D(e,t,n,r,s){return pu("localResponseNormalization4D")}LRNGrad(e,t,n,r,s,a,o){return pu("LRNGrad")}multinomial(e,t,n,r){return pu("multinomial")}oneHot(e,t,n,r){return pu("oneHot")}cumsum(e,t,n,r){return pu("cumsum")}nonMaxSuppression(e,t,n,r,s){return pu("nonMaxSuppression")}fft(e){return pu("fft")}ifft(e){return pu("ifft")}complex(e,t){return pu("complex")}real(e){return pu("real")}imag(e){return pu("imag")}cropAndResize(e,t,n,r,s,a){return pu("cropAndResize")}depthToSpace(e,t,n){return pu("depthToSpace")}split(e,t,n){return pu("split")}sparseToDense(e,t,n,r){return pu("sparseToDense")}diag(e){return pu("diag")}fill(e,t,n){return pu("fill")}onesLike(e){return pu("onesLike")}zerosLike(e){return pu("zerosLike")}linspace(e,t,n){return pu("linspace")}dispose(){return pu("dispose")}},e.LRN="LRN",e.LRNBackprop="LRNBackprop",e.Less="Less",e.LessEqual="LessEqual",e.Max="Max",e.MaxPoolWithArgmax="MaxPoolWithArgmax",e.MomentumOptimizer=ou,e.NonMaxSuppressionV3="NonMaxSuppressionV3",e.NonMaxSuppressionV5="NonMaxSuppressionV5",e.NotEqual="NotEqual",e.OneHot="OneHot",e.Optimizer=eu,e.PadV2="PadV2",e.RMSPropOptimizer=iu,e.SGDOptimizer=au,e.SpaceToBatchND="SpaceToBatchND",e.SplitV="SplitV",e.Square="Square",e.SquaredDifference="SquaredDifference",e.Sub="Sub",e.Tensor=ae,e.TensorBuffer=ne,e.Tile="Tile",e.Transpose="Transpose",e.Variable=oe,e.abs=mn,e.acos=gn,e.acosh=bn,e.add=fn,e.addN=ta,e.addStrict=Jn,e.all=$t,e.any=Nt,e.argMax=Ft,e.argMin=At,e.asin=wn,e.asinh=yn,e.atan=kn,e.atan2=Yn,e.atanh=vn,e.avgPool=Do,e.avgPool3d=No,e.backend=function(){return ke.backend},e.backend_util=hu,e.basicLSTMCell=Ho,e.batchNorm=ra,e.batchNorm2d=sa,e.batchNorm3d=aa,e.batchNorm4d=oa,e.batchToSpaceND=Dr,e.booleanMaskAsync=go,e.broadcastTo=ua,e.browser=Ls,e.buffer=lt,e.cast=ht,e.ceil=xn,e.clipByValue=En,e.clone=ia,e.complex=We,e.concat=ut,e.concat1d=la,e.concat2d=ca,e.concat3d=ha,e.concat4d=da,e.conv1d=pa,e.conv2d=tn,e.conv2dTranspose=fa,e.conv3d=ma,e.conv3dTranspose=ga,e.cos=Sn,e.cosh=Dn,e.cumsum=dt,e.customGrad=St,e.deprecationWarn=cn,e.depthToSpace=ba,e.depthwiseConv2d=wa,e.device_util=xe,e.diag=ya,e.disableDeprecationWarnings=function(){n().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")},e.dispose=dn,e.disposeVariables=function(){ke.disposeVariables()},e.div=hr,e.divNoNan=$a,e.divStrict=Xn,e.dot=Na,e.dropout=si,e.elu=Ro,e.enableDebugMode=function(){n().set("DEBUG",!0)},e.enableProdMode=function(){n().set("PROD",!0)},e.engine=function(){return ke},e.env=n,e.equal=Fa,e.equalStrict=Ao,e.erf=In,e.exp=$n,e.expandDims=pt,e.expm1=Nn,e.eye=Aa,e.fft=Xo,e.fill=rt,e.findBackend=function(e){return ke.findBackend(e)},e.findBackendFactory=function(e){return ke.findBackendFactory(e)},e.floor=Fn,e.floorDiv=Zn,e.frame=ui,e.fused=Zi,e.gather=fo,e.gatherND=ri,e.gather_util=Ws,e.getBackend=function(){return ke.backendName},e.getGradient=l,e.getKernel=u,e.getKernelsForBackend=c,e.grad=function(e){return m(P(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=Ae(t,"x","tf.grad",null),s=null!=n?Ae(n,"dy","tf.grad"):null;return ke.tidy(()=>{const{value:t,grads:n}=ke.gradients(()=>e(r),[r],s);return null!=s&&g(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Dt(n),n[0]})}},e.grads=function(e){return m(P(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{m(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=Me(t,"args","tf.grads",null),s=null!=n?Ae(n,"dy","tf.grads"):null;return ke.tidy(()=>{const{value:t,grads:n}=ke.gradients(()=>e(...r),r,s);return null!=s&&g(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Dt(n),n})}},e.greater=Ma,e.greaterEqual=_a,e.greaterEqualStrict=Mo,e.greaterStrict=_o,e.hammingWindow=ii,e.hannWindow=oi,e.ifft=Zo,e.imag=Ge,e.image=Gi,e.inTopKAsync=hi,e.io=Bs,e.irfft=ei,e.isFinite=On,e.isInf=Ln,e.isNaN=zn,e.keep=pn,e.kernel_impls=du,e.leakyRelu=qo,e.less=Ta,e.lessEqual=Ba,e.lessEqualStrict=To,e.lessStrict=Bo,e.linalg=$i,e.linspace=st,e.localResponseNormalization=Ca,e.log=An,e.log1p=Mn,e.logSigmoid=_n,e.logSoftmax=Ko,e.logSumExp=Mt,e.logicalAnd=va,e.logicalNot=xa,e.logicalOr=Ea,e.logicalXor=Sa,e.losses=xi,e.matMul=yt,e.math=qs,e.max=Ra,e.maxPool=So,e.maxPool3d=$o,e.maxPoolWithArgmax=Fo,e.maximum=Qn,e.maximumStrict=er,e.mean=_t,e.memory=function(){return ke.memory()},e.min=Tt,e.minimum=tr,e.minimumStrict=nr,e.mod=rr,e.modStrict=sr,e.moments=Bt,e.movingAverage=Vo,e.mul=ar,e.mulStrict=or,e.multiRNNCell=Uo,e.multinomial=qa,e.neg=Tn,e.nextFrame=function(){return new Promise(e=>cu(()=>e()))},e.norm=Go,e.notEqual=Pa,e.notEqualStrict=Co,e.oneHot=Cs,e.ones=tt,e.onesLike=ot,e.op=Oe,e.outerProduct=za,e.pad=Mr,e.pad1d=La,e.pad2d=Oa,e.pad3d=Wa,e.pad4d=Ka,e.pool=Io,e.pow=ir,e.powStrict=ur,e.prelu=Po,e.print=ct,e.prod=Rt,e.profile=function(e){return ke.profile(e)},e.rand=Ga,e.randomGamma=ro,e.randomNormal=so,e.randomUniform=ao,e.range=at,e.ready=function(){return ke.ready()},e.real=Ke,e.reciprocal=Bn,e.registerBackend=function(e,t,n=1){return ke.registerBackend(e,t,n)},e.registerGradient=h,e.registerKernel=function(e){const{kernelName:t,backendName:n}=e,r=d(t,n);o.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),o.set(r,e)},e.relu=zo,e.relu6=Lo,e.removeBackend=function(e){ke.removeBackend(e)},e.reshape=ft,e.reverse=bo,e.reverse1d=wo,e.reverse2d=yo,e.reverse3d=ko,e.reverse4d=vo,e.rfft=Qo,e.round=Cn,e.rsqrt=Rn,e.scalar=Ve,e.scatterND=Yo,e.scatter_util=Us,e.selu=Oo,e.separableConv2d=oo,e.serialization=Ys,e.setBackend=function(e){return ke.setBackend(e)},e.setPlatform=function(e,t){n().setPlatform(e,t)},e.setdiff1dAsync=wt,e.sigmoid=qn,e.sign=Pn,e.signal=ci,e.sin=Wn,e.sinh=Kn,e.slice=Pr,e.slice1d=zr,e.slice2d=Lr,e.slice3d=Or,e.slice4d=Wr,e.slice_util=qr,e.softmax=Wo,e.softplus=Gn,e.spaceToBatchND=vt,e.sparseToDense=ni,e.spectral=ti,e.split=Pt,e.sqrt=Hn,e.square=dr,e.squaredDifference=io,e.squaredDifferenceStrict=lr,e.squeeze=mt,e.stack=gt,e.step=Un,e.stft=li,e.stridedSlice=jo,e.sub=fr,e.subStrict=cr,e.sum=Ct,e.sumOutType=function(e){return pe(e,"int32")},e.tan=Vn,e.tanh=jn,e.tensor=He,e.tensor1d=je,e.tensor2d=Je,e.tensor3d=Ye,e.tensor4d=Xe,e.tensor5d=Ze,e.tensor6d=Qe,e.tensor_util=be,e.test_util=ea,e.tidy=hn,e.tile=mr,e.time=function(e){return ke.time(e)},e.topk=Jo,e.train=lu,e.transpose=vr,e.truncatedNormal=uo,e.unregisterGradient=function(e){if(!i.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);i.delete(e)},e.unregisterKernel=function(e,t){const n=d(e,t);if(!o.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);o.delete(n)},e.unsortedSegmentSum=mo,e.unstack=bt,e.upcastType=pe,e.util=J,e.valueAndGrad=function(e){return m(P(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{m(t instanceof ae,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),m(null==n||n instanceof ae,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=ke.gradients(()=>e(t),[t],n);return Dt(r),{grad:r[0],value:s}}},e.valueAndGrads=function(e){return m(P(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{m(Array.isArray(t)&&t.every(e=>e instanceof ae),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),m(null==n||n instanceof ae,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=ke.gradients(()=>e(...t),t,n);return null!=n&&g(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Dt(r.grads),r}},e.variable=et,e.variableGrads=Et,e.version_core="2.0.0",e.where=Da,e.whereAsync=Ia,e.zeros=nt,e.zerosLike=it,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=tf-core.es2017.min.js.map
