{"version":3,"file":"tf-backend-wasm.esm.js","sources":["../src/kernels/unary_kernel.ts","../src/kernels/types.ts","../src/kernels/binary_kernel.ts","../src/kernels/Abs.ts","../src/kernels/Add.ts","../src/kernels/AddN.ts","../src/kernels/ArgMax.ts","../src/kernels/AvgPool.ts","../src/kernels/BatchMatMul.ts","../src/kernels/ClipByValue.ts","../src/kernels/Conv2D.ts","../src/kernels/CropAndResize.ts","../src/kernels/DepthwiseConv2dNative.ts","../src/kernels/Cast.ts","../src/kernels/Concat.ts","../src/kernels/Cos.ts","../src/kernels/Div.ts","../src/kernels/Exp.ts","../src/kernels/FloorDiv.ts","../src/kernels/FusedBatchNorm.ts","../src/kernels/FusedConv2D.ts","../src/kernels/FusedDepthwiseConv2D.ts","../src/kernels/Gather.ts","../src/kernels/GatherNd.ts","../src/kernels/Greater.ts","../src/kernels/GreaterEqual.ts","../src/kernels/LogicalAnd.ts","../src/kernels/Less.ts","../src/kernels/LessEqual.ts","../src/kernels/Max.ts","../src/kernels/Log.ts","../src/kernels/Maximum.ts","../src/kernels/MaxPool.ts","../src/kernels/Min.ts","../src/kernels/Minimum.ts","../src/kernels/Mul.ts","../src/kernels/NonMaxSuppressionV3.ts","../src/kernels/NonMaxSuppressionV5.ts","../src/kernels/PadV2.ts","../src/kernels/Prelu.ts","../src/kernels/ResizeBilinear.ts","../src/kernels/ScatterNd.ts","../src/kernels/Sigmoid.ts","../src/kernels/NonMaxSuppression_util.ts","../src/kernels/Slice.ts","../src/kernels/Relu.ts","../src/kernels/Relu6.ts","../src/kernels/Reshape.ts","../src/kernels/Rsqrt.ts","../src/kernels/Sin.ts","../src/kernels/Square.ts","../src/kernels/Sub.ts","../src/kernels/Sum.ts","../src/kernels/Tile.ts","../src/kernels/Transpose.ts","../src/kernels/Tanh.ts","../src/kernels/Unpack.ts","../wasm-out/tfjs-backend-wasm.js","../src/backend_wasm.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface UnaryInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\nexport function registerUnaryKernel(kernelName: string) {\n  let wasmFunc: (xId: number, outId: number) => void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc =\n        backend.wasm.cwrap(kernelName, null /* void */, ['number', 'number']);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: UnaryInputs}):\n      TensorInfo {\n    const {backend, inputs: {x}} = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n      return out;\n    }\n\n    wasmFunc(xId, outId);\n    return out;\n  }\n\n  registerKernel({kernelName, backendName: 'wasm', setupFunc, kernelFunc});\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// This enum must align with the enum defined in cc/backend.h.\nexport enum CppDType {\n  float32 = 0,\n  int32 = 1,\n  bool = 2,\n  string = 3,\n  complex64 = 4\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DataType, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nexport function registerBinaryKernel(\n    kernelName: string, supportsFullBroadcast: boolean, dtype?: DataType) {\n  let wasmFunc:\n      (aId: number, aShape: Uint8Array, aShapeLen: number, bId: number,\n       bShape: Uint8Array, bShapeLen: number, dtype: number, outId: number) =>\n          void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // a_id,\n      'array',   // a_shape\n      'number',  // a_shape.length\n      'number',  // b_id\n      'array',   // b_shape\n      'number',  // b_shape.length\n      'number',  // dtype\n      'number'   // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: BinaryInputs}):\n      TensorInfo {\n    const {backend, inputs} = args;\n    const {a, b} = inputs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n\n    const outputType = dtype != null ? dtype : a.dtype;\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const out = backend.makeOutput(newShape, outputType);\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(newShape) === 0) {\n      return out;\n    }\n\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const kernelFunc = () => wasmFunc(\n        aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n        CppDType[a.dtype], outId);\n\n    if (supportsFullBroadcast) {\n      kernelFunc();\n      return out;\n    }\n\n    const aBroadcastDims = backend_util.getBroadcastDims(a.shape, newShape);\n    const bBroadcastDims = backend_util.getBroadcastDims(b.shape, newShape);\n    const loopsOverAllOfA = aBroadcastDims.every((v, i) => v === i);\n    const loopsOverAllOfB = bBroadcastDims.every((v, i) => v === i);\n    if (loopsOverAllOfA && loopsOverAllOfB) {\n      kernelFunc();\n      return out;\n    } else {\n      throw new Error(\n          `Broadcasting along outer dims is not yet ` +\n          `supported for ${kernelName}.`);\n    }\n  }\n\n  registerKernel({kernelName, backendName: 'wasm', setupFunc, kernelFunc});\n}\n\ninterface BinaryInputs extends NamedTensorInfoMap {\n  a: TensorInfo;\n  b: TensorInfo;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Abs');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = true;\nregisterBinaryKernel('Add', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelFunc, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmFunc:\n    (inputIds: Uint8Array, inputIdsLen: number, dtype: number, outId: number) =>\n        void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap('AddN', null /* void */, [\n    'array',   // input_ids\n    'number',  // input_ids.length\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction addn(args: {inputs: TensorInfo[], backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n  const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'AddN',\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: addn as {} as KernelFunc,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelFunc, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\ninterface ArgMaxInputs {\n  x: TensorInfo;\n}\n\ninterface ArgMaxAttrs {\n  axis: number;\n}\n\nlet wasmFunc: (\n    xId: number, dtype: number, outerSize: number, innerSize: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFunc = backend.wasm.cwrap('ArgMax', null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // outer_size\n    'number',  // inner_size\n    'number'   // out_id\n  ]);\n}\n\nfunction argmax(\n    args: {inputs: ArgMaxInputs, backend: BackendWasm, attrs: ArgMaxAttrs}) {\n  const {inputs: {x}, backend, attrs: {axis}} = args;\n  const outShape = x.shape.slice(0, -1);\n  const out = backend.makeOutput(outShape, 'int32');\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const outerSize = util.sizeFromShape(out.shape);\n  const innerSize = x.shape[axis];\n  wasmFunc(xId, CppDType[x.dtype], outerSize, innerSize, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'ArgMax',\n  backendName: 'wasm',\n  kernelFunc: argmax as {} as KernelFunc,\n  setupFunc: setup\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface AvgPoolInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n}\n\nlet wasmAvgPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, strideHeight: number,\n    strideWidth: number, channels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool = backend.wasm.cwrap('AvgPool', null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // channels\n    'number',  // outId\n  ]);\n}\n\nfunction avgPool(args: {\n  inputs: AvgPoolInputs,\n  backend: BackendWasm,\n  attrs: backend_util.Conv2DInfo\n}) {\n  const {inputs, attrs, backend} = args;\n  const convInfo = attrs;\n\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const channels = convInfo.inChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n    throw new Error(\n        `was backend only supports average pooling with dilation = [1, 1], ` +\n        `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmAvgPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels,\n      outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'AvgPool',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface BatchMatMulInputs extends NamedTensorInfoMap {\n  a: TensorInfo;\n  b: TensorInfo;\n}\n\ninterface BatchMatMulAttrs extends NamedAttrMap {\n  transposeA: boolean;\n  transposeB: boolean;\n}\n\nlet wasmBatchMatMul: (\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n    transposeB: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmBatchMatMul = backend.wasm.cwrap('BatchMatMul', null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number'   // out_id\n  ]);\n}\n\nfunction batchMatMul(args: {\n  inputs: BatchMatMulInputs,\n  backend: BackendWasm,\n  attrs: BatchMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b} = inputs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `BatchMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const {transposeA, transposeB} = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDim = a.shape[0];\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n\n  wasmBatchMatMul(\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n      transposeA, transposeB, outId);\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'BatchMatMul',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: batchMatMul\n});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface ClipByValueInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface ClipByValueAttrs extends NamedAttrMap {\n  min: number;\n  max: number;\n}\n\nlet wasmClip: (xId: number, min: number, max: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmClip = backend.wasm.cwrap('ClipByValue', null /* void */, [\n    'number',  // x_id\n    'number',  // min\n    'number',  // max\n    'number'   // out_id\n  ]);\n}\n\nfunction clip(args: {\n  inputs: ClipByValueInputs,\n  backend: BackendWasm,\n  attrs: ClipByValueAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {min, max} = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, min, max, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'ClipByValue',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface Conv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n}\n\nlet wasmConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv2d = backend.wasm.cwrap('Conv2D', null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction conv2d(args: {\n  inputs: Conv2DInputs,\n  backend: BackendWasm,\n  attrs: backend_util.Conv2DInfo\n}) {\n  const {inputs, attrs, backend} = args;\n  const convInfo = attrs;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend Conv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Conv2D',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2d as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {cast} from './Cast';\n\ninterface CropAndResizeInputs extends NamedTensorInfoMap {\n  images: TensorInfo;\n  boxes: TensorInfo;\n  boxInd: TensorInfo;\n}\n\ninterface CropAndResizeAttrs extends NamedAttrMap {\n  method: keyof InterpolationMethod;\n  extrapolationValue: number;\n  cropSize: [number, number];\n}\n\n// Must match enum in CropAndResize.cc\nenum InterpolationMethod {\n  bilinear = 0,\n  nearest = 1\n}\n\nlet wasmCropAndResize: (\n    imagesId: number, boxesId: number, boxIndId: number, numBoxes: number,\n    imagesShape: Uint8Array, cropHeight: number, cropWidth: number,\n    method: number, extrapolationValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmCropAndResize = backend.wasm.cwrap('CropAndResize', null /*void*/, [\n    'number',  // imagesId\n    'number',  // boxesId\n    'number',  // boxIndId\n    'number',  // numBoxes\n    'array',   // images shape\n    'number',  // cropHeight\n    'number',  // cropWidth\n    'number',  // method\n    'number',  // extrapolation value\n    'number'   // out id\n  ]);\n}\n\nfunction cropAndResize(args: {\n  backend: BackendWasm,\n  inputs: CropAndResizeInputs,\n  attrs: CropAndResizeAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {method, extrapolationValue, cropSize} = attrs;\n  const {images, boxes, boxInd} = inputs;\n\n  const numBoxes = boxes.shape[0];\n\n  const [cropHeight, cropWidth] = cropSize as [number, number];\n  const outShape = [numBoxes, cropHeight, cropWidth, images.shape[3]];\n\n  let imagesData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (images.dtype !== 'float32') {\n    castedData =\n        cast({backend, inputs: {x: images}, attrs: {dtype: 'float32'}});\n    imagesData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const imagesId = imagesData.id;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imagesShapeBytes = new Uint8Array(new Int32Array(images.shape).buffer);\n\n  wasmCropAndResize(\n      imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight,\n      cropWidth,\n      InterpolationMethod[method as {} as keyof typeof InterpolationMethod],\n      extrapolationValue, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'CropAndResize',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cropAndResize\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface DepthwiseConv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n}\n\nlet wasmDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDepthwiseConv2d =\n      backend.wasm.cwrap('DepthwiseConv2dNative', null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // outId\n      ]);\n}\n\nfunction depthwiseConv2d(args: {\n  inputs: DepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs: backend_util.Conv2DInfo\n}) {\n  const {inputs, attrs, backend} = args;\n  const convInfo = attrs;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmDepthwiseConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'DepthwiseConv2dNative',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthwiseConv2d as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, NamedAttrMap, NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface CastInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface CastAttrs extends NamedAttrMap {\n  dtype: DataType;\n}\n\nexport function cast(\n    args: {inputs: CastInputs, attrs: CastAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {dtype}, backend} = args;\n  const out = backend.makeOutput(x.shape, dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Cast',\n  backendName: 'wasm',\n  kernelFunc: cast,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedAttrMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface ConcatAttrs extends NamedAttrMap {\n  axis: number;\n}\n\nfunction concat(\n    args: {inputs: TensorInfo[], backend: BackendWasm, attrs: ConcatAttrs}) {\n  const {inputs, backend, attrs: {axis}} = args;\n  const outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n  const out = backend.makeOutput(outShape, inputs[0].dtype);\n\n  const batchDim = util.sizeFromShape(inputs[0].shape.slice(0, axis));\n  let sumInnerDims = 0;\n  const innerDims = inputs.map(input => {\n    const innerDim = util.sizeFromShape(input.shape.slice(axis));\n    sumInnerDims += innerDim;\n    return innerDim;\n  });\n  const inVals = inputs.map(input => backend.typedArrayFromHeap(input));\n  const outVals = backend.typedArrayFromHeap(out);\n  for (let b = 0; b < batchDim; b++) {\n    let outOffset = b * sumInnerDims;\n    for (let i = 0; i < inVals.length; i++) {\n      const innerDim = innerDims[i];\n      const inOffset = b * innerDim;\n      const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n      outVals.set(vals, outOffset);\n      outOffset += innerDim;\n    }\n  }\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Concat',\n  backendName: 'wasm',\n  kernelFunc: concat as {} as KernelFunc,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Cos');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Div', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Exp');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('FloorDiv', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface BatchNormInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  mean: TensorInfo;\n  variance: TensorInfo;\n  offset: TensorInfo;\n  scale: TensorInfo;\n}\n\ninterface BatchNormAttrs extends NamedAttrMap {\n  varianceEpsilon: number;\n}\n\nlet wasmBatchNorm: (\n    xId: number, meanId: number, varianceId: number, offsetId: number,\n    scaleId: number, varianceEpsilon: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmBatchNorm = backend.wasm.cwrap(\n      'FusedBatchNorm', null /* void */,\n      ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction fusedBatchNorm(\n    args:\n        {backend: BackendWasm, inputs: BatchNormInputs, attrs: BatchNormAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {varianceEpsilon} = attrs;\n  const {x, mean, variance, offset, scale} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const meanId = backend.dataIdMap.get(mean.dataId).id;\n  const varianceId = backend.dataIdMap.get(variance.dataId).id;\n  const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n  const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmBatchNorm(\n      xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'BatchNormalization',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchNorm\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface FusedConv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n  bias?: TensorInfo;\n}\n\nlet wasmFusedConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, biasId: number,\n    padTop: number, padRight: number, padBottom: number, padLeft: number,\n    isSamePad: number, dilationHeight: number, dilationWidth: number,\n    strideHeight: number, strideWidth: number, inputChannels: number,\n    outputChannels: number, activation: number,\n    preluActivationWeightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedConv2d = backend.wasm.cwrap('FusedConv2D', null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // biasId\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // activation\n    'number',  // preluActivationWeightsId\n    'number',  // outId\n  ]);\n}\n\n// Must match enum in conv2d_impl.h.\nenum FusableActivation {\n  linear = 0,\n  relu = 1,\n  relu6 = 2,\n  prelu = 3\n}\n\nfunction fusedConv2d(args: {\n  inputs: FusedConv2DInputs,\n  backend: BackendWasm,\n  attrs:\n      {convInfo: backend_util.Conv2DInfo, activation: backend_util.Activation}\n}) {\n  const {inputs, attrs, backend} = args;\n  const {convInfo, activation} = attrs;\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend FusedConv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  wasmFusedConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'FusedConv2D',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedConv2d as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface FusedDepthwiseConv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n  bias?: TensorInfo;\n}\n\nlet wasmFusedDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, biasId: number,\n    padTop: number, padRight: number, padBottom: number, padLeft: number,\n    isSamePad: number, dilationHeight: number, dilationWidth: number,\n    strideHeight: number, strideWidth: number, inputChannels: number,\n    outputChannels: number, activation: number,\n    preluActivationWeightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedDepthwiseConv2d =\n      backend.wasm.cwrap('FusedDepthwiseConv2D', null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // biasId\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // activation\n        'number',  // preluActivationWeightsId\n        'number',  // outId\n      ]);\n}\n\n// Must match enum in conv2d_impl.h.\nenum FusableActivation {\n  linear = 0,\n  relu = 1,\n  relu6 = 2,\n  prelu = 3\n}\n\nfunction fusedDepthwiseConv2d(args: {\n  inputs: FusedDepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs:\n      {convInfo: backend_util.Conv2DInfo, activation: backend_util.Activation}\n}) {\n  const {inputs, attrs, backend} = args;\n  const {convInfo, activation} = attrs;\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedDepthwiseConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedDepthwiseConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  wasmFusedDepthwiseConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'FusedDepthwiseConv2D',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedDepthwiseConv2d as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface GatherInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  indices: TensorInfo;\n}\n\ninterface GatherAttrs extends NamedAttrMap {\n  axis: number;\n}\n\nlet wasmGather:\n    (xId: number, dtype: CppDType, xStrides: Uint8Array, stridesSize: number,\n     indicesId: number, axis: number, outStrides: Uint8Array, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGather = backend.wasm.cwrap('Gather', null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'array',   // xStrides\n    'number',  // stridesSize\n    'number',  // indicesId\n    'number',  // axis\n    'array',   // outStrides\n    'number'   // outId\n  ]);\n}\n\nfunction gather(\n    args: {backend: BackendWasm, inputs: GatherInputs, attrs: GatherAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, indices} = inputs;\n  const {axis} = attrs;\n\n  const newShape = x.shape.slice();\n  newShape[axis] = util.sizeFromShape(indices.shape);\n  const stridesSize = x.shape.length - 1;\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const xStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n  const outStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(newShape)).buffer);\n\n  wasmGather(\n      xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId, axis,\n      outStridesBytes, outId);\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Gather',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gather\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {gather_util, NamedTensorInfoMap, registerKernel, Tensor, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface GatherNdInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  indices: TensorInfo;\n}\n\nlet wasmGatherNd: (\n    xId: number, dtype: CppDType, indicesId: number, numSlices: number,\n    sliceRank: number, sliceSize: number, strides: Uint8Array, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGatherNd = backend.wasm.cwrap('GatherNd', null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'number',  // indicesId\n    'number',  // numSlices\n    'number',  // sliceRank\n    'number',  // sliceSize\n    'array',   // strides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherNd(args: {backend: BackendWasm, inputs: GatherNdInputs}):\n    TensorInfo {\n  const {backend, inputs} = args;\n  const {x, indices} = inputs;\n\n  const [resultShape, numSlices, sliceSize, strides] =\n      gather_util.prepareAndValidate(x as Tensor, indices as Tensor);\n\n  const out = backend.makeOutput(resultShape, x.dtype);\n  if (numSlices === 0) {\n    return out;\n  }\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmGatherNd(\n      xId, CppDType[x.dtype], indicesId, numSlices, sliceRank, sliceSize,\n      stridesBytes, outId);\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'GatherNd',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherNd\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Greater', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('GreaterEqual', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('LogicalAnd', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Less', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('LessEqual', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface MaxInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface MaxAttrs extends NamedAttrMap {\n  axes: number[];\n}\n\nlet wasmMax: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMax =\n      backend.wasm.cwrap('Max', null /*void*/, ['number, number, number']);\n}\n\nfunction max(args: {backend: BackendWasm, inputs: MaxInputs, attrs: MaxAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axes} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  backend_util.assertAxesAreInnerMostDims('max', axes, x.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(x.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMax(xId, reduceSize, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Max',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: max\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Log');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Maximum', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface MaxPoolInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n}\n\nlet wasmMaxPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, dilationHeight: number,\n    dilationWidth: number, strideHeight: number, strideWidth: number,\n    inputChannels: number, outputChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool = backend.wasm.cwrap('MaxPool', null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction maxPool(args: {\n  inputs: MaxPoolInputs,\n  backend: BackendWasm,\n  attrs: backend_util.Conv2DInfo\n}) {\n  const {inputs, attrs, backend} = args;\n  const convInfo = attrs;\n\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMaxPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth,\n      strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'MaxPool',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface MinInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface MinAttrs extends NamedAttrMap {\n  axes: number[];\n}\n\nlet wasmMin: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMin =\n      backend.wasm.cwrap('Min', null /*void*/, ['number, number, number']);\n}\n\nfunction min(args: {backend: BackendWasm, inputs: MinInputs, attrs: MinAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axes} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, x.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(x.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMin(xId, reduceSize, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Min',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: min\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Minimum', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = true;\nregisterBinaryKernel('Mul', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\ninterface NonMaxSuppressionInputs extends NamedTensorInfoMap {\n  boxes: TensorInfo;\n  scores: TensorInfo;\n}\n\ninterface NonMaxSuppressionAttrs extends NamedAttrMap {\n  maxOutputSize: number;\n  iouThreshold: number;\n  scoreThreshold: number;\n}\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      'NonMaxSuppressionV3',\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionInputs,\n  attrs: NonMaxSuppressionAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset =\n      wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V3, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  return selectedIndicesTensor;\n}\n\nregisterKernel({\n  kernelName: 'NonMaxSuppressionV3',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\ninterface NonMaxSuppressionInputs extends NamedTensorInfoMap {\n  boxes: TensorInfo;\n  scores: TensorInfo;\n}\n\ninterface NonMaxSuppressionAttrs extends NamedAttrMap {\n  maxOutputSize: number;\n  iouThreshold: number;\n  scoreThreshold: number;\n  softNmsSigma: number;\n}\n\nlet wasmFunc:\n    (boxesId: number, scoresId: number, maxOutputSize: number,\n     iouThreshold: number, scoreThreshold: number, softNmsSigma: number) =>\n        number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      'NonMaxSuppressionV5',\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'number',  // softNmsSigma\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionInputs,\n  attrs: NonMaxSuppressionAttrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n\n  const {\n    pSelectedIndices,\n    selectedSize,\n    pSelectedScores,\n  } = parseResultStruct(backend, resOffset);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  const selectedScoresTensor =\n      backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n\n  return [selectedIndicesTensor, selectedScoresTensor];\n}\n\nregisterKernel({\n  kernelName: 'NonMaxSuppressionV5',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface PadInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface PadAttrs extends NamedAttrMap {\n  paddings: Array<[number, number]>;\n  constantValue: number;\n}\n\nlet wasmPadV2: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    paddingsBytes: Uint8Array, constantValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPadV2 = backend.wasm.cwrap('PadV2', null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // paddings\n    'number',  // constantValue\n    'number',  // outId\n  ]);\n}\n\nfunction pad(args: {inputs: PadInputs, backend: BackendWasm, attrs: PadAttrs}) {\n  const {inputs: {x}, backend, attrs: {paddings, constantValue}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const paddingsFlat = [].concat(...paddings);\n  const paddingsBytes = new Uint8Array(new Int32Array(paddingsFlat).buffer);\n  wasmPadV2(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], paddingsBytes,\n      constantValue, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'PadV2',\n  backendName: 'wasm',\n  kernelFunc: pad,\n  setupFunc: setup\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface PreluInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  alpha: TensorInfo;\n}\n\nlet wasmPrelu: (xId: number, weightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPrelu = backend.wasm.cwrap('Prelu', null /* void */, [\n    'number',  // x_id\n    'number',  // weights_id\n    'number'   // out_id\n  ]);\n}\n\nfunction prelu(args: {inputs: PreluInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {x, alpha} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmPrelu(xId, weightsId, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Prelu',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prelu\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\ninterface ResizeBilinearInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface ResizeBilinearAttrs extends NamedAttrMap {\n  newWidth: number;\n  newHeight: number;\n  alignCorners: boolean;\n}\n\nlet wasmResizeBilinear: (\n    xId: number, batch: number, oldHeight: number, oldWidth: number,\n    numChannels: number, newHeight: number, newWidth: number,\n    alignCorners: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeBilinear = backend.wasm.cwrap('ResizeBilinear', null /*void*/, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // oldHeight\n    'number',  // oldWidth\n    'number',  // numChannels\n    'number',  // newHeight\n    'number',  // newWidth\n    'number',  // alignCorners\n    'number'   // outId\n  ]);\n}\n\nfunction resizeBilinear(args: {\n  backend: BackendWasm,\n  inputs: ResizeBilinearInputs,\n  attrs: ResizeBilinearAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n  const {alignCorners, newHeight, newWidth} = attrs;\n\n  const [batch, oldHeight, oldWidth, numChannels] = x.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  let xData = backend.dataIdMap.get(x.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({backend, inputs: {x}, attrs: {dtype: 'float32'}});\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const xId = xData.id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeBilinear(\n      xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth,\n      alignCorners ? 1 : 0, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'ResizeBilinear',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinear\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, scatter_util, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface ScatterNdInputs extends NamedTensorInfoMap {\n  indices: TensorInfo;\n  updates: TensorInfo;\n}\n\ninterface ScatterNdAttrs extends NamedAttrMap {\n  shape: number[];\n}\n\nlet wasmScatterNd: (\n    indicesId: number, updatesId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmScatterNd = backend.wasm.cwrap('ScatterNd', null /*void*/, [\n    'number',  // indicesId\n    'number',  // updatesId\n    'number',  // dtype\n    'number',  // sliceRank\n    'number',  // numUpdates\n    'number',  // sliceSize\n    'array',   // strides\n    'number',  // outputSize\n    'number'   // outId\n  ]);\n}\n\nfunction scatterNd(\n    args:\n        {backend: BackendWasm, inputs: ScatterNdInputs, attrs: ScatterNdAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {indices, updates} = inputs;\n  const {shape} = attrs;\n\n  const out = backend.makeOutput(shape, updates.dtype);\n  if (util.sizeFromShape(shape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      scatter_util.calculateShapes(updates, indices, shape);\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmScatterNd(\n      indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId);\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'ScatterNd',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: scatterNd\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface SigmoidInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\nlet wasmFunc: (xId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc =\n      backend.wasm.cwrap('Sigmoid', null /* void */, ['number', 'number']);\n}\n\nfunction sigmoid(args: {backend: BackendWasm, inputs: SigmoidInputs}):\n    TensorInfo {\n  const {backend, inputs: {x}} = args;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Sigmoid',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sigmoid\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendWasm} from '../backend_wasm';\n\n// Analogous to `struct Result` in `non_max_suppression_impl.h`.\ninterface Result {\n  pSelectedIndices: number;\n  selectedSize: number;\n  pSelectedScores: number;\n}\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(\n    backend: BackendWasm, resOffset: number): Result {\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 3);\n  const pSelectedIndices = result[0];\n  const selectedSize = result[1];\n  const pSelectedScores = result[2];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {pSelectedIndices, selectedSize, pSelectedScores};\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, buffer, NamedAttrMap, NamedTensorInfoMap, registerKernel, slice_util, util} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface SliceInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface SliceAttrs extends NamedAttrMap {\n  begin: number[];\n  size: number[];\n}\n\nexport function slice(\n    args: {inputs: SliceInputs, attrs: SliceAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {begin, size}, backend} = args;\n  const isContinous = slice_util.isSliceContinous(x.shape, begin, size);\n  const xVals = backend.typedArrayFromHeap(x);\n  const out = backend.makeOutput(size, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  const xStrides = util.computeStrides(x.shape);\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n    outVals.set(\n        xVals.subarray(flatOffset, flatOffset + util.sizeFromShape(size)));\n    return out;\n  }\n  const rank = x.shape.length;\n  if (rank === 2) {\n    slice2d(\n        xVals, xStrides[0], outVals, begin as [number, number],\n        size as [number, number]);\n  } else if (rank === 3) {\n    slice3d(\n        xVals, xStrides[0], xStrides[1], outVals,\n        begin as [number, number, number], size as [number, number, number]);\n  } else if (rank === 4) {\n    slice4d(\n        xVals, xStrides[0], xStrides[1], xStrides[2], outVals,\n        begin as [number, number, number, number],\n        size as [number, number, number, number]);\n  } else {\n    genericSliceSlow(xVals, x, outVals, begin, size);\n  }\n  return out;\n}\n\nfunction slice2d(\n    xVals: backend_util.TypedArray, xStride: number,\n    outVals: backend_util.TypedArray, begin: [number, number],\n    size: [number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const endI = beginI + size[0];\n  for (let i = beginI; i < endI; i++) {\n    const xOffset = i * xStride + beginJ;\n    outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n    outOffset += size[1];\n  }\n}\n\nfunction slice3d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    outVals: backend_util.TypedArray, begin: [number, number, number],\n    size: [number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      const xOffset = i * xStride1 + j * xStride2 + beginK;\n      outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n      outOffset += size[2];\n    }\n  }\n}\n\nfunction slice4d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    xStride3: number, outVals: backend_util.TypedArray,\n    begin: [number, number, number, number],\n    size: [number, number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  const endK = beginK + size[2];\n  const beginL = begin[3];\n\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      for (let k = beginK; k < endK; k++) {\n        const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n        outOffset += size[3];\n      }\n    }\n  }\n}\n\nfunction genericSliceSlow(\n    xVals: backend_util.TypedArray, xInfo: TensorInfo,\n    outVals: backend_util.TypedArray, begin: number[], size: number[]): void {\n  const outBuf = buffer(size, xInfo.dtype, outVals);\n  const xBuf = buffer(xInfo.shape, xInfo.dtype, xVals);\n  for (let i = 0; i < outBuf.size; ++i) {\n    const loc = outBuf.indexToLoc(i);\n    const xLoc = loc.map((idx, j) => idx + begin[j]);\n    outVals[i] = xBuf.get(...xLoc) as number;\n  }\n}\n\nregisterKernel({\n  kernelName: 'Slice',\n  backendName: 'wasm',\n  kernelFunc: slice,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Relu');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Relu6');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface ReshapeInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface ReshapeAttrs extends NamedAttrMap {\n  shape: number[];\n}\n\nfunction reshape(\n    args: {inputs: ReshapeInputs, attrs: ReshapeAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {shape}} = args;\n  return {dataId: x.dataId, shape, dtype: x.dtype};\n}\n\nregisterKernel({\n  kernelName: 'Reshape',\n  backendName: 'wasm',\n  kernelFunc: reshape,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Rsqrt');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Sin');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Square');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = true;\nregisterBinaryKernel('Sub', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface SumInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface SumAttrs extends NamedAttrMap {\n  axes: number[];\n}\n\nlet wasmSum: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSum =\n      backend.wasm.cwrap('Sum', null /*void*/, ['number, number, number']);\n}\n\nfunction sum(args: {backend: BackendWasm, inputs: SumInputs, attrs: SumAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axes} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  backend_util.assertAxesAreInnerMostDims('sum', axes, x.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(x.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmSum(xId, reduceSize, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Sum',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sum\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface TileInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface TileAttrs extends NamedAttrMap {\n  reps: number[];\n}\n\nlet wasmTile: (\n    xId: number, xShape: Uint8Array, xShapeSize: number, newShape: Uint8Array,\n    newShapeSize: number, dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTile = backend.wasm.cwrap('Tile', null /* void */, [\n    'number',  // x_id\n    'array',   // x_shape\n    'number',  // x_shape.length\n    'array',   // new_shape\n    'number',  // new_shape.length\n    'number'   // out_id\n  ]);\n}\n\nfunction tile(\n    args: {inputs: TileInputs, backend: BackendWasm, attrs: TileAttrs}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {reps} = attrs;\n\n  const newShape: number[] = new Array(x.shape.length);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[i] * reps[i];\n  }\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTile(\n      xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length,\n      CppDType[out.dtype], outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Tile',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tile\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface TransposeInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface TransposeAttrs extends NamedAttrMap {\n  perm: number[];\n}\n\nlet wasmTranspose: (\n    xId: number, xShape: Uint8Array, xShapeLength: number, dtype: CppDType,\n    outId: number, perm: Uint8Array, permLength: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTranspose = backend.wasm.cwrap('Transpose', null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // dtype\n    'number',  // outId\n    'array',   // perm\n    'number',  // perm.length\n  ]);\n}\n\nfunction transpose(\n    args:\n        {inputs: TransposeInputs, backend: BackendWasm, attrs: TransposeAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n  // better due to simpler memory access pattern.\n  const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n  const x = {\n    dataId: inputs.x.dataId,\n    shape: reducedShape,\n    dtype: inputs.x.dtype\n  };\n  let permIsNoOp = true;\n  for (let i = 0; i < perm.length; i++) {\n    if (perm[i] !== i) {\n      permIsNoOp = false;\n    }\n  }\n  const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n  if (permIsNoOp) {\n    return {dataId: x.dataId, shape: outShape, dtype: x.dtype};\n  }\n  const out = backend.makeOutput(outShape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmTranspose(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes,\n      perm.length);\n  return out;\n}\n\nfunction computeOutShape(inShape: number[], perm: number[]): number[] {\n  const outShape = new Array(inShape.length);\n  for (let i = 0; i < outShape.length; i++) {\n    outShape[i] = inShape[perm[i]];\n  }\n  return outShape;\n}\n\nfunction removeOneSizeDims(\n    shape: number[], perm: number[]): [number[], number[]] {\n  const newShape: number[] = [];\n  const newPerm: number[] = [];\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n    }\n    if (shape[perm[i]] !== 1) {\n      newPerm.push(perm[i]);\n    }\n  }\n  for (let i = 0; i < newPerm.length; ++i) {\n    let minValIdx = -1;\n    for (let j = 0; j < newPerm.length; ++j) {\n      if (newPerm[j] >= i &&\n          (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n        minValIdx = j;\n      }\n    }\n    newPerm[minValIdx] = i;\n  }\n  return [newShape, newPerm];\n}\n\nregisterKernel({\n  kernelName: 'Transpose',\n  backendName: 'wasm',\n  kernelFunc: transpose,\n  setupFunc: setup,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Tanh');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\nimport {slice} from './Slice';\n\ninterface UnpackInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface UnpackAttrs extends NamedAttrMap {\n  axis: number;\n}\n\nfunction unpack(\n    args: {inputs: UnpackInputs, backend: BackendWasm, attrs: UnpackAttrs}):\n    TensorInfo[] {\n  const {inputs: {x}, backend, attrs: {axis}} = args;\n  const numOutputs = x.shape[axis];\n  const rank = x.shape.length;\n  const outShape: number[] = new Array(rank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < rank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = x.shape[i];\n    }\n  }\n  const outs: TensorInfo[] = new Array(numOutputs);\n  const begin = new Array(rank).fill(0);\n  const size = x.shape.slice();\n  size[axis] = 1;\n  for (let i = 0; i < outs.length; i++) {\n    begin[axis] = i;\n    outs[i] = slice({inputs: {x}, attrs: {begin, size}, backend});\n  }\n  return outs.map(({dataId, dtype}) => ({dataId, dtype, shape: outShape}));\n}\n\nregisterKernel({\n  kernelName: 'Unpack',\n  backendName: 'wasm',\n  kernelFunc: unpack,\n});\n","\nvar WasmBackendModule = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(WasmBackendModule) {\n  WasmBackendModule = WasmBackendModule || {};\n\nvar Module=typeof WasmBackendModule!==\"undefined\"?WasmBackendModule:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_HAS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_HAS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_NODE=ENVIRONMENT_HAS_NODE&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;read_=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}read_=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime;if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\")}var wasmMemory;var wasmTable=new WebAssembly.Table({\"initial\":105,\"maximum\":105+0,\"element\":\"anyfunc\"});var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}var WASM_PAGE_SIZE=65536;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var DYNAMIC_BASE=5252736,DYNAMICTOP_PTR=9696;var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE})}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_TOTAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_ceil=Math.ceil;var Math_floor=Math.floor;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";out(what);err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";throw new WebAssembly.RuntimeError(what)}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var wasmBinaryFile=\"tfjs-backend-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_unstable\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}__ATINIT__.push({func:function(){___wasm_call_ctors()}});function _abort(){abort()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function _emscripten_get_heap_size(){return HEAP8.length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();var PAGE_MULTIPLE=65536;var LIMIT=2147483648-PAGE_MULTIPLE;if(requestedSize>LIMIT){return false}var MIN_TOTAL_MEMORY=16777216;var newSize=Math.max(oldSize,MIN_TOTAL_MEMORY);while(newSize<requestedSize){if(newSize<=536870912){newSize=alignUp(2*newSize,PAGE_MULTIPLE)}else{newSize=Math.min(alignUp((3*newSize+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=emscripten_realloc_buffer(newSize);if(!replacement){return false}return true}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path===\"/\")return\"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:function(l,r){return PATH.normalize(l+\"/\"+r)}};var SYSCALLS={buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:0,get:function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(){var ret=UTF8ToString(SYSCALLS.get());return ret},get64:function(){var low=SYSCALLS.get(),high=SYSCALLS.get();return low},getZero:function(){SYSCALLS.get()}};function _fd_close(fd){try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_write(fd,iov,iovcnt,pnum){try{var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _roundf(d){d=+d;return d>=+0?+Math_floor(d+ +.5):+Math_ceil(d-+.5)}var asmLibraryArg={\"a\":_abort,\"d\":_emscripten_memcpy_big,\"e\":_emscripten_resize_heap,\"f\":_fd_close,\"c\":_fd_seek,\"g\":_fd_write,\"memory\":wasmMemory,\"b\":_roundf,\"table\":wasmTable};var asm=createWasm();Module[\"asm\"]=asm;var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return Module[\"asm\"][\"h\"].apply(null,arguments)};var _init=Module[\"_init\"]=function(){return Module[\"asm\"][\"i\"].apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return Module[\"asm\"][\"j\"].apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return Module[\"asm\"][\"k\"].apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return Module[\"asm\"][\"l\"].apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return Module[\"asm\"][\"m\"].apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return Module[\"asm\"][\"n\"].apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return Module[\"asm\"][\"o\"].apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return Module[\"asm\"][\"p\"].apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return Module[\"asm\"][\"q\"].apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return Module[\"asm\"][\"r\"].apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return Module[\"asm\"][\"s\"].apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return Module[\"asm\"][\"t\"].apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return Module[\"asm\"][\"u\"].apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return Module[\"asm\"][\"v\"].apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return Module[\"asm\"][\"w\"].apply(null,arguments)};var _Div=Module[\"_Div\"]=function(){return Module[\"asm\"][\"x\"].apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return Module[\"asm\"][\"y\"].apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return Module[\"asm\"][\"z\"].apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return Module[\"asm\"][\"A\"].apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return Module[\"asm\"][\"B\"].apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return Module[\"asm\"][\"C\"].apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return Module[\"asm\"][\"D\"].apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return Module[\"asm\"][\"E\"].apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return Module[\"asm\"][\"F\"].apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return Module[\"asm\"][\"G\"].apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return Module[\"asm\"][\"H\"].apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return Module[\"asm\"][\"I\"].apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return Module[\"asm\"][\"J\"].apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return Module[\"asm\"][\"K\"].apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return Module[\"asm\"][\"L\"].apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return Module[\"asm\"][\"M\"].apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return Module[\"asm\"][\"N\"].apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return Module[\"asm\"][\"O\"].apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return Module[\"asm\"][\"P\"].apply(null,arguments)};var _Mul=Module[\"_Mul\"]=function(){return Module[\"asm\"][\"Q\"].apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return Module[\"asm\"][\"R\"].apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return Module[\"asm\"][\"S\"].apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return Module[\"asm\"][\"T\"].apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return Module[\"asm\"][\"U\"].apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return Module[\"asm\"][\"V\"].apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return Module[\"asm\"][\"W\"].apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return Module[\"asm\"][\"X\"].apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return Module[\"asm\"][\"Y\"].apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return Module[\"asm\"][\"Z\"].apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return Module[\"asm\"][\"_\"].apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return Module[\"asm\"][\"$\"].apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return Module[\"asm\"][\"aa\"].apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return Module[\"asm\"][\"ba\"].apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return Module[\"asm\"][\"ca\"].apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return Module[\"asm\"][\"da\"].apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return Module[\"asm\"][\"ea\"].apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return Module[\"asm\"][\"fa\"].apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return Module[\"asm\"][\"ga\"].apply(null,arguments)};var _free=Module[\"_free\"]=function(){return Module[\"asm\"][\"ha\"].apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return Module[\"asm\"][\"ia\"].apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return Module[\"asm\"][\"ja\"].apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return Module[\"asm\"][\"ka\"].apply(null,arguments)};var dynCall_vi=Module[\"dynCall_vi\"]=function(){return Module[\"asm\"][\"la\"].apply(null,arguments)};var dynCall_v=Module[\"dynCall_v\"]=function(){return Module[\"asm\"][\"ma\"].apply(null,arguments)};Module[\"asm\"]=asm;Module[\"cwrap\"]=cwrap;var calledRun;Module[\"then\"]=function(func){if(calledRun){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=function(){if(old)old();func(Module)}}return Module};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;if(ABORT)return;initRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}noExitRuntime=true;run();\n\n\n  return WasmBackendModule\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n      module.exports = WasmBackendModule;\n    else if (typeof define === 'function' && define['amd'])\n      define([], function() { return WasmBackendModule; });\n    else if (typeof exports === 'object')\n      exports[\"WasmBackendModule\"] = WasmBackendModule;\n    ","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BackendTimingInfo, DataStorage, DataType, engine, KernelBackend, registerBackend, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasmModule, WasmFactoryConfig} from '../wasm-out/tfjs-backend-wasm';\nimport wasmFactory from '../wasm-out/tfjs-backend-wasm.js';\n\nconst WASM_PRIORITY = 2;\n\ninterface TensorData {\n  id: number;\n  memoryOffset: number;\n  shape: number[];\n  dtype: DataType;\n  /** Only used for string tensors, storing encoded bytes. */\n  stringBytes?: Uint8Array[];\n}\n\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\nexport class BackendWasm extends KernelBackend {\n  // 0 is reserved for null data ids.\n  private dataIdNextNumber = 1;\n  dataIdMap: DataStorage<TensorData>;\n\n  constructor(public wasm: BackendWasmModule) {\n    super();\n    this.wasm.tfjs.init();\n    this.dataIdMap = new DataStorage(this, engine());\n  }\n\n  write(values: backend_util.BackendValues, shape: number[], dtype: DataType):\n      DataId {\n    const dataId = {};\n    this.move(dataId, values, shape, dtype);\n    return dataId;\n  }\n\n  numDataIds(): number {\n    return this.dataIdMap.numDataIds();\n  }\n\n  async time(f: () => void): Promise<BackendTimingInfo> {\n    const start = util.now();\n    f();\n    const kernelMs = util.now() - start;\n    return {kernelMs};\n  }\n\n  move(\n      dataId: DataId, values: backend_util.BackendValues, shape: number[],\n      dtype: DataType): void {\n    const id = this.dataIdNextNumber++;\n    if (dtype === 'string') {\n      const stringBytes = values as Uint8Array[];\n      this.dataIdMap.set(\n          dataId, {id, stringBytes, shape, dtype, memoryOffset: null});\n      return;\n    }\n\n    const size = util.sizeFromShape(shape);\n    const numBytes = size * util.bytesPerElement(dtype);\n    const memoryOffset = this.wasm._malloc(numBytes);\n\n    this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype});\n\n    this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n\n    if (values != null) {\n      this.wasm.HEAPU8.set(\n          new Uint8Array(\n              (values as backend_util.TypedArray).buffer, 0, numBytes),\n          memoryOffset);\n    }\n  }\n\n  async read(dataId: DataId): Promise<backend_util.BackendValues> {\n    return this.readSync(dataId);\n  }\n\n  readSync(dataId: DataId): backend_util.BackendValues {\n    const {memoryOffset, dtype, shape, stringBytes} =\n        this.dataIdMap.get(dataId);\n    if (dtype === 'string') {\n      return stringBytes;\n    }\n    const bytes = this.wasm.HEAPU8.slice(\n        memoryOffset,\n        memoryOffset + util.sizeFromShape(shape) * util.bytesPerElement(dtype));\n    return typedArrayFromBuffer(bytes.buffer, dtype);\n  }\n\n  disposeData(dataId: DataId) {\n    const data = this.dataIdMap.get(dataId);\n    this.wasm._free(data.memoryOffset);\n    this.wasm.tfjs.disposeData(data.id);\n    this.dataIdMap.delete(dataId);\n  }\n\n  floatPrecision(): 32 {\n    return 32;\n  }\n\n  // Returns the memory offset of a tensor. Useful for debugging and unit\n  // testing.\n  getMemoryOffset(dataId: DataId): number {\n    return this.dataIdMap.get(dataId).memoryOffset;\n  }\n\n  dispose() {\n    this.wasm.tfjs.dispose();\n    this.wasm = null;\n  }\n\n  memory() {\n    return {unreliable: false};\n  }\n\n  /**\n   * Make a tensor info for the output of an op. If `memoryOffset` is not\n   * present, this method allocates memory on the WASM heap. If `memoryOffset`\n   * is present, the memory was allocated elsewhere (in c++) and we just record\n   * the pointer where that memory lives.\n   */\n  makeOutput(shape: number[], dtype: DataType, memoryOffset?: number):\n      TensorInfo {\n    let dataId: {};\n    if (memoryOffset == null) {\n      dataId = this.write(null /* values */, shape, dtype);\n    } else {\n      dataId = {};\n      const id = this.dataIdNextNumber++;\n      this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype});\n      const size = util.sizeFromShape(shape);\n      this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n    }\n    return {dataId, shape, dtype};\n  }\n\n  typedArrayFromHeap({shape, dtype, dataId}: TensorInfo):\n      backend_util.TypedArray {\n    const buffer = this.wasm.HEAPU8.buffer;\n    const {memoryOffset} = this.dataIdMap.get(dataId);\n    const size = util.sizeFromShape(shape);\n    switch (dtype) {\n      case 'float32':\n        return new Float32Array(buffer, memoryOffset, size);\n      case 'int32':\n        return new Int32Array(buffer, memoryOffset, size);\n      case 'bool':\n        return new Uint8Array(buffer, memoryOffset, size);\n      default:\n        throw new Error(`Uknown dtype ${dtype}`);\n    }\n  }\n}\n\nregisterBackend('wasm', async () => {\n  const {wasm} = await init();\n  return new BackendWasm(wasm);\n}, WASM_PRIORITY);\n\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested in\n * Chrome 76).\n */\nexport async function init(): Promise<{wasm: BackendWasmModule}> {\n  return new Promise((resolve, reject) => {\n    const factoryConfig: WasmFactoryConfig = {};\n    if (wasmPath != null) {\n      factoryConfig.locateFile = (path, prefix) => {\n        if (path.endsWith('.wasm')) {\n          return wasmPath;\n        }\n        return prefix + path;\n      };\n    }\n    const wasm = wasmFactory(factoryConfig);\n    const voidReturnType: string = null;\n    // Using the tfjs namespace to avoid conflict with emscripten's API.\n    wasm.tfjs = {\n      init: wasm.cwrap('init', null, []),\n      registerTensor: wasm.cwrap(\n          'register_tensor', null,\n          [\n            'number',  // id\n            'number',  // size\n            'number',  // memoryOffset\n          ]),\n      disposeData: wasm.cwrap('dispose_data', voidReturnType, ['number']),\n      dispose: wasm.cwrap('dispose', voidReturnType, []),\n    };\n    let initialized = false;\n    wasm.onRuntimeInitialized = () => {\n      initialized = true;\n      initAborted = false;\n      resolve({wasm});\n    };\n    wasm.onAbort = () => {\n      if (initialized) {\n        // Emscripten already called console.warn so no need to double log.\n        return;\n      }\n      if (initAborted) {\n        // Emscripten calls `onAbort` twice, resulting in double error messages.\n        return;\n      }\n      initAborted = true;\n      const rejectMsg =\n          'Make sure the server can serve the `.wasm` file relative to the ' +\n          'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n      reject({message: rejectMsg});\n    };\n  });\n}\n\nfunction typedArrayFromBuffer(\n    buffer: ArrayBuffer, dtype: DataType): backend_util.TypedArray {\n  switch (dtype) {\n    case 'float32':\n      return new Float32Array(buffer);\n    case 'int32':\n      return new Int32Array(buffer);\n    case 'bool':\n      return new Uint8Array(buffer);\n    default:\n      throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\nlet wasmPath: string = null;\nlet initAborted = false;\n\n/**\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n */\n/** @doc {heading: 'Environment', namespace: 'wasm'} */\nexport function setWasmPath(path: string): void {\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n  }\n  wasmPath = path;\n}\n\n/** Used in unit tests. */\nexport function resetWasmPath(): void {\n  wasmPath = null;\n}\n"],"names":["registerUnaryKernel","kernelName","wasmFunc","registerKernel","backendName","setupFunc","backend","wasm","cwrap","kernelFunc","args","x","xId","dataIdMap","get","dataId","id","out","makeOutput","shape","dtype","outId","util","sizeFromShape","CppDType","registerBinaryKernel","supportsFullBroadcast","inputs","a","b","aId","bId","outputType","newShape","backend_util","assertAndGetBroadcastShape","aShapeBytes","Uint8Array","Int32Array","buffer","bShapeBytes","length","aBroadcastDims","getBroadcastDims","bBroadcastDims","loopsOverAllOfA","every","v","i","loopsOverAllOfB","Error","wasmAvgPool","wasmBatchMatMul","wasmClip","wasmConv2d","InterpolationMethod","wasmCropAndResize","wasmDepthwiseConv2d","cast","inVals","typedArrayFromHeap","set","inputIds","map","inputIdsBytes","axis","outShape","slice","outerSize","innerSize","attrs","convInfo","filterHeight","filterWidth","padTop","padInfo","top","padRight","right","padBottom","bottom","padLeft","left","strideHeight","strideWidth","channels","inChannels","dataFormat","dilationWidth","dilationHeight","transposeA","transposeB","leftDim","rightDim","batchDim","min","max","computeOutShape","t","sumInnerDims","innerDims","input","innerDim","outVals","outOffset","inOffset","vals","subarray","filter","filterId","inputChannels","outputChannels","outChannels","isSamePad","type","castedData","method","extrapolationValue","cropSize","images","boxes","boxInd","numBoxes","_a","cropHeight","cropWidth","imagesData","imagesId","boxesId","boxIndId","imagesShapeBytes","disposeData","wasmBatchNorm","wasmFusedConv2d","FusableActivation","wasmFusedDepthwiseConv2d","wasmGather","wasmGatherNd","varianceEpsilon","mean","variance","offset","scale","meanId","varianceId","offsetId","scaleId","activation","fusedActivation","bias","preluActivationWeights","biasId","biasData","batchSize","inHeight","inWidth","preluActivationWeightsId","indices","stridesSize","indicesId","xStridesBytes","computeStrides","outStridesBytes","resultShape","numSlices","sliceSize","strides","indicesShape","sliceRank","stridesBytes","wasmMax","axes","assertAxesAreInnerMostDims","reduceShape","reduceSize","wasmMaxPool","wasmMin","wasmPadV2","wasmPrelu","wasmResizeBilinear","wasmScatterNd","parseResultStruct","resOffset","result","HEAPU8","pSelectedIndices","selectedSize","pSelectedScores","_free","begin","size","isContinous","slice_util","isSliceContinous","xVals","xStrides","flatOffset","computeFlatOffset","rank","xStride","beginI","beginJ","endI","xOffset","slice2d","xStride1","xStride2","beginK","endJ","j","slice3d","xStride3","endK","beginL","k","slice4d","xInfo","outBuf","xBuf","xLoc","indexToLoc","idx","genericSliceSlow","iouThreshold","maxOutputSize","scoreThreshold","scores","scoresId","softNmsSigma","paddings","constantValue","p","xShapeBytes","paddingsFlat","concat","paddingsBytes","alpha","weightsId","alignCorners","newHeight","newWidth","batch","oldHeight","oldWidth","numChannels","xData","updates","numUpdates","outputSize","updatesId","wasmSum","wasmTile","wasmTranspose","reps","Array","newShapeBytes","perm","newPerm","push","minValIdx","reducedShape","permIsNoOp","inShape","permBytes","numOutputs","outIndex","outs","fill","_scriptDir","WasmBackendModule","document","currentScript","src","undefined","key","Module","moduleOverrides","hasOwnProperty","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","versions","node","read_","readBinary","nodeFS","nodePath","scriptDirectory","locateFile","path","__dirname","filename","binary","ret","require$$0","require$$1","toString","assert","replace","ex","ExitStatus","abort","read","f","data","readbuffer","scriptArgs","print","console","log","warn","error","printErr","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","wasmBinary","wasmMemory","bind","err","WebAssembly","wasmTable","Table","initial","maximum","element","ABORT","condition","text","getCFunc","ident","func","ccall","returnType","argTypes","opts","toC","string","str","len","stringToUTF8","stackAlloc","array","arr","writeArrayToMemory","cArgs","stack","converter","stackSave","apply","UTF8ToString","Boolean","convertReturnValue","stackRestore","numericArgs","arguments","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","maxBytesToRead","endIdx","endPtr","decode","u0","u1","u2","String","fromCharCode","ch","ptr","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","outPtr","HEAP8","HEAP32","WASM_PAGE_SIZE","alignUp","multiple","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","Float64Array","DYNAMIC_BASE","DYNAMICTOP_PTR","INITIAL_TOTAL_MEMORY","callRuntimeCallbacks","callbacks","callback","shift","arg","Memory","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","preRun","addOnPreRun","initRuntime","preMain","postRun","addOnPostRun","cb","unshift","Math_ceil","Math","ceil","Math_floor","floor","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","removeRunDependency","clearInterval","what","RuntimeError","dataURIPrefix","isDataURI","prototype","startsWith","wasmBinaryFile","getBinary","getBinaryPromise","fetch","Promise","resolve","reject","credentials","then","catch","createWasm","info","env","asmLibraryArg","wasi_unstable","receiveInstance","instance","module","exports","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","e","instantiateStreaming","instantiateAsync","_abort","_emscripten_memcpy_big","dest","num","_emscripten_get_heap_size","emscripten_realloc_buffer","grow","_emscripten_resize_heap","requestedSize","oldSize","newSize","___wasm_call_ctors","SYSCALLS","buffers","printChar","stream","curr","varargs","getStr","get64","low","getZero","_fd_close","fd","FS","ErrnoError","errno","_fd_seek","offset_low","offset_high","whence","newOffset","_fd_write","iov","iovcnt","pnum","_roundf","d","c","g","memory","table","asm","calledRun","status","this","name","message","run","doRun","setTimeout","old","runCaller","pop","_super","_this","tfjs","init","DataStorage","engine","tslib_1.__extends","BackendWasm","values","move","numDataIds","start","now","kernelMs","dataIdNextNumber","numBytes","bytesPerElement","memoryOffset","_malloc","registerTensor","stringBytes","readSync","typedArrayFromBuffer","delete","dispose","unreliable","write","KernelBackend","factoryConfig","wasmPath","prefix","endsWith","wasmFactory","initialized","onRuntimeInitialized","initAborted","onAbort","registerBackend","setWasmPath"],"mappings":"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"}